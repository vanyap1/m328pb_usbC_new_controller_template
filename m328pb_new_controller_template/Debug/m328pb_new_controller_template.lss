
m328pb_new_controller_template.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000194  00800100  000053fe  00005492  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000053fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000544  00800294  00800294  00005626  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005626  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005684  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00002c58  00000000  00000000  000056c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0003b8d7  00000000  00000000  0000831c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002953  00000000  00000000  00043bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00014289  00000000  00000000  00046546  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000d660  00000000  00000000  0005a7d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00021c09  00000000  00000000  00067e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001d615  00000000  00000000  00089a39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002ae8  00000000  00000000  000a704e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000595c  00000000  00000000  000a9b36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 07 05 	jmp	0xa0e	; 0xa0e <__ctors_end>
       4:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <__vector_1>
       8:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
       c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      10:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      14:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      18:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      1c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      20:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      24:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      28:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      2c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      30:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      34:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      38:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      3c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      40:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      44:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      48:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__vector_18>
      4c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      50:	0c 94 b7 0c 	jmp	0x196e	; 0x196e <__vector_20>
      54:	0c 94 26 05 	jmp	0xa4c	; 0xa4c <__vector_21>
      58:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      5c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      60:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      64:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      68:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      6c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      70:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      74:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      78:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      7c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      80:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      84:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      88:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      8c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      90:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      94:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      98:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      9c:	0c 94 46 09 	jmp	0x128c	; 0x128c <__vector_39>
      a0:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__vector_40>
      a4:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      a8:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      ac:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>
      b0:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	bf 02       	muls	r27, r31
      b6:	03 02       	muls	r16, r19
      b8:	03 04       	cpc	r0, r3
      ba:	01 02       	muls	r16, r17
      bc:	04 06       	cpc	r0, r20
      be:	0a 00       	.word	0x000a	; ????
      c0:	fe 07       	cpc	r31, r30
      c2:	fe 07       	cpc	r31, r30
      c4:	00 01       	movw	r0, r0
      c6:	76 02       	muls	r23, r22
      c8:	f9 09       	sbc	r31, r9
      ca:	3c 20       	and	r3, r12
      cc:	07 d6       	rcall	.+3086   	; 0xcdc <fake_delay_fn>
      ce:	f8 f9       	.word	0xf9f8	; ????
      d0:	23 00       	.word	0x0023	; ????
      d2:	21 0a       	sbc	r2, r17
      d4:	d6 f8       	bld	r13, 6
      d6:	91 b4       	in	r9, 0x21	; 33
      d8:	3b 98       	cbi	0x07, 3	; 7
      da:	53 00       	.word	0x0053	; ????
      dc:	22 0b       	sbc	r18, r18
      de:	d6 f8       	bld	r13, 6
      e0:	93 2c       	mov	r9, r3
      e2:	c9 92       	st	Y+, r12
      e4:	9c 37       	cpi	r25, 0x7C	; 124
      e6:	00 23       	and	r16, r16
      e8:	10 d6       	rcall	.+3104   	; 0xd0a <gpio_set_pin_level>
      ea:	f8 93       	.word	0x93f8	; ????
      ec:	2c 89       	ldd	r18, Y+20	; 0x14
      ee:	06 29       	or	r16, r6
      f0:	89 06       	cpc	r8, r25
      f2:	29 c9       	rjmp	.-3502   	; 0xfffff346 <__eeprom_end+0xff7ef346>
      f4:	92 9c       	mul	r9, r2
      f6:	00 24       	eor	r0, r0
      f8:	0d d6       	rcall	.+3098   	; 0xd14 <gpio_set_pin_level+0xa>
      fa:	f8 91       	.word	0x91f8	; ????
      fc:	70 4a       	sbci	r23, 0xA0	; 160
      fe:	c2 31       	cpi	r28, 0x12	; 18
     100:	89 c6       	rjmp	.+3346   	; 0xe14 <gpio_set_pin_direction+0x6c>
     102:	9c 02       	muls	r25, r28
     104:	25 0d       	add	r18, r5
     106:	d6 f8       	bld	r13, 6
     108:	a3 a4       	ldd	r10, Z+43	; 0x2b
     10a:	29 09       	sbc	r18, r9
     10c:	2b 51       	subi	r18, 0x1B	; 27
     10e:	d2 94       	swap	r13
     110:	13 26       	eor	r1, r19
     112:	0e d6       	rcall	.+3100   	; 0xd30 <gpio_set_pin_level+0x26>
     114:	f8 c3       	rjmp	.+2032   	; 0x906 <__stack+0x7>
     116:	24 4b       	sbci	r18, 0xB4	; 180
     118:	c2 4a       	sbci	r28, 0xA2	; 162
     11a:	53 a6       	std	Z+43, r5	; 0x2b
     11c:	e4 30       	cpi	r30, 0x04	; 4
     11e:	00 27       	eor	r16, r16
     120:	09 d6       	rcall	.+3090   	; 0xd34 <gpio_set_pin_level+0x2a>
     122:	f8 91       	.word	0x91f8	; ????
     124:	b4 ce       	rjmp	.-664    	; 0xfffffe8e <__eeprom_end+0xff7efe8e>
     126:	23 00       	.word	0x0023	; ????
     128:	28 09       	sbc	r18, r8
     12a:	d6 f8       	bld	r13, 6
     12c:	a1 b0       	in	r10, 0x01	; 1
     12e:	5a ae       	std	Y+58, r5	; 0x3a
     130:	13 29       	or	r17, r3
     132:	09 d6       	rcall	.+3090   	; 0xd46 <gpio_set_pin_level+0x3c>
     134:	f8 e3       	ldi	r31, 0x38	; 56
     136:	6a b1       	in	r22, 0x0a	; 10
     138:	4e 02       	muls	r20, r30
     13a:	2a 0e       	add	r2, r26
     13c:	d6 f8       	bld	r13, 6
     13e:	d1 2c       	mov	r13, r1
     140:	4a a2       	std	Y+34, r4	; 0x22
     142:	41 4a       	sbci	r20, 0xA1	; 161
     144:	a2 2c       	mov	r10, r2
     146:	a7 02       	muls	r26, r23
     148:	2b 0a       	sbc	r2, r27
     14a:	d6 f8       	bld	r13, 6
     14c:	f1 34       	cpi	r31, 0x41	; 65
     14e:	1b b4       	in	r1, 0x2b	; 43
     150:	34 67       	ori	r19, 0x74	; 116
     152:	2c 09       	sbc	r18, r12
     154:	d6 f8       	bld	r13, 6
     156:	79 13       	cpse	r23, r25
     158:	eb 18       	sub	r14, r11
     15a:	00 2d       	mov	r16, r0
     15c:	09 d6       	rcall	.+3090   	; 0xd70 <gpio_set_pin_level+0x66>
     15e:	f8 d9       	rcall	.-3088   	; 0xfffff550 <__eeprom_end+0xff7ef550>
     160:	06 9d       	mul	r16, r6
     162:	1b 00       	.word	0x001b	; ????
     164:	2e 09       	sbc	r18, r14
     166:	d6 f8       	bld	r13, 6
     168:	79 0b       	sbc	r23, r25
     16a:	c7 1c       	adc	r12, r7
     16c:	02 2f       	mov	r16, r18
     16e:	0a d6       	rcall	.+3092   	; 0xd84 <gpio_set_pin_level+0x7a>
     170:	f8 b1       	in	r31, 0x08	; 8
     172:	34 ec       	ldi	r19, 0xC4	; 196
     174:	9a d3       	rcall	.+1844   	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     176:	00 30       	cpi	r16, 0x00	; 0
     178:	10 d6       	rcall	.+3104   	; 0xd9a <gpio_set_pin_level+0x90>
     17a:	f8 91       	.word	0x91f8	; ????
     17c:	30 89       	ldd	r19, Z+16	; 0x10
     17e:	b2 24       	eor	r11, r2
     180:	4b b2       	in	r4, 0x1b	; 27
     182:	28 09       	sbc	r18, r8
     184:	73 0a       	sbc	r7, r19
     186:	00 31       	cpi	r16, 0x10	; 16
     188:	0c d6       	rcall	.+3096   	; 0xda2 <gpio_set_pin_level+0x98>
     18a:	f8 91       	.word	0x91f8	; ????
     18c:	50 4b       	sbci	r21, 0xB0	; 176
     18e:	d2 b6       	in	r13, 0x32	; 50
     190:	41 87       	std	Z+9, r20	; 0x09
     192:	01 32       	cpi	r16, 0x21	; 33
     194:	0c d6       	rcall	.+3096   	; 0xdae <gpio_set_pin_direction+0x6>
     196:	f8 a7       	std	Y+40, r31	; 0x28
     198:	2c cd       	rjmp	.-1448   	; 0xfffffbf2 <__eeprom_end+0xff7efbf2>
     19a:	b4 30       	cpi	r27, 0x04	; 4
     19c:	1d 74       	andi	r17, 0x4D	; 77
     19e:	18 33       	cpi	r17, 0x38	; 56
     1a0:	0c d6       	rcall	.+3096   	; 0xdba <gpio_set_pin_direction+0x12>
     1a2:	b8 07       	cpc	r27, r24
     1a4:	35 0c       	add	r3, r5
     1a6:	e5 24       	eor	r14, r5
     1a8:	8b 76       	andi	r24, 0x6B	; 107
     1aa:	02 34       	cpi	r16, 0x42	; 66
     1ac:	0d d6       	rcall	.+3098   	; 0xdc8 <gpio_set_pin_direction+0x20>
     1ae:	f8 a1       	ldd	r31, Y+32	; 0x20
     1b0:	50 4b       	sbci	r21, 0xB0	; 176
     1b2:	a2 d2       	rcall	.+1348   	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
     1b4:	20 a6       	std	Z+40, r2	; 0x28
     1b6:	39 01       	movw	r6, r18
     1b8:	35 0d       	add	r19, r5
     1ba:	d6 b8       	out	0x06, r13	; 6
     1bc:	07 25       	eor	r16, r7
     1be:	4d 24       	eor	r4, r13
     1c0:	29 4d       	sbci	r18, 0xD9	; 217
     1c2:	b2 68       	ori	r27, 0x82	; 130
     1c4:	27 36       	cpi	r18, 0x67	; 103
     1c6:	0d d6       	rcall	.+3098   	; 0xde2 <gpio_set_pin_direction+0x3a>
     1c8:	f8 11       	cpse	r31, r8
     1ca:	2d 4c       	sbci	r18, 0xCD	; 205
     1cc:	13 49       	sbci	r17, 0x93	; 147
     1ce:	4a b2       	in	r4, 0x1a	; 26
     1d0:	68 27       	eor	r22, r24
     1d2:	37 0b       	sbc	r19, r23
     1d4:	d6 b8       	out	0x06, r13	; 6
     1d6:	07 35       	cpi	r16, 0x57	; 87
     1d8:	4c c3       	rjmp	.+1688   	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     1da:	6a 4e       	sbci	r22, 0xEA	; 234
     1dc:	02 38       	cpi	r16, 0x82	; 130
     1de:	0d d6       	rcall	.+3098   	; 0xdfa <gpio_set_pin_direction+0x52>
     1e0:	f8 a7       	std	Y+40, r31	; 0x28
     1e2:	2c c9       	rjmp	.-3496   	; 0xfffff43c <__eeprom_end+0xff7ef43c>
     1e4:	a2 29       	or	r26, r2
     1e6:	4b b2       	in	r4, 0x1b	; 27
     1e8:	68 27       	eor	r22, r24
     1ea:	39 0d       	add	r19, r9
     1ec:	d6 f8       	bld	r13, 6
     1ee:	a7 2c       	mov	r10, r7
     1f0:	89 2c       	mov	r8, r9
     1f2:	69 98       	cbi	0x0d, 1	; 13
     1f4:	e9 14       	cp	r14, r9
     1f6:	00 3a       	cpi	r16, 0xA0	; 160
     1f8:	0c d6       	rcall	.+3096   	; 0xe12 <gpio_set_pin_direction+0x6a>
     1fa:	f8 f1       	brcs	.+126    	; 0x27a <__trampolines_end+0x1c6>
     1fc:	70 cc       	rjmp	.-1824   	; 0xfffffade <__eeprom_end+0xff7efade>
     1fe:	c1 70       	andi	r28, 0x01	; 1
     200:	cc 21       	and	r28, r12
     202:	00 3b       	cpi	r16, 0xB0	; 176
     204:	0b d6       	rcall	.+3094   	; 0xe1c <gpio_set_pin_direction+0x74>
     206:	f8 f1       	brcs	.+126    	; 0x286 <__trampolines_end+0x1d2>
     208:	70 cc       	rjmp	.-1824   	; 0xfffffaea <__eeprom_end+0xff7efaea>
     20a:	41 b1       	in	r20, 0x01	; 1
     20c:	8e 01       	movw	r16, r28
     20e:	3c 09       	sbc	r19, r12
     210:	d6 f8       	bld	r13, 6
     212:	b1 b0       	in	r11, 0x01	; 1
     214:	b9 1d       	adc	r27, r9
     216:	06 3d       	cpi	r16, 0xD6	; 214
     218:	0a d6       	rcall	.+3092   	; 0xe2e <gpio_set_pin_direction+0x86>
     21a:	f8 89       	ldd	r31, Y+16	; 0x10
     21c:	83 3e       	cpi	r24, 0xE3	; 227
     21e:	e8 8c       	ldd	r14, Y+24	; 0x18
     220:	00 3e       	cpi	r16, 0xE0	; 224
     222:	09 d6       	rcall	.+3090   	; 0xe36 <gpio_set_pin_direction+0x8e>
     224:	f8 e3       	ldi	r31, 0x38	; 56
     226:	c6 76       	andi	r28, 0x66	; 102
     228:	12 00       	.word	0x0012	; ????
     22a:	3f 0b       	sbc	r19, r31
     22c:	d6 f8       	bld	r13, 6
     22e:	a7 2c       	mov	r10, r7
     230:	ac e6       	ldi	r26, 0x6C	; 108
     232:	60 4e       	sbci	r22, 0xE0	; 224
     234:	01 40       	sbci	r16, 0x01	; 1
     236:	0c d6       	rcall	.+3096   	; 0xe50 <gpio_set_pin_direction+0xa8>
     238:	f8 a7       	std	Y+40, r31	; 0x28
     23a:	2c 89       	ldd	r18, Y+20	; 0x14
     23c:	94 2e       	mov	r9, r20
     23e:	52 bc       	out	0x22, r5	; 34
     240:	13 41       	sbci	r17, 0x13	; 19
     242:	10 d6       	rcall	.+3104   	; 0xe64 <gpio_set_pin_direction+0xbc>
     244:	f8 91       	.word	0x91f8	; ????
     246:	30 89       	ldd	r19, Z+16	; 0x10
     248:	b2 24       	eor	r11, r2
     24a:	4b 06       	cpc	r4, r27
     24c:	25 4b       	sbci	r18, 0xB5	; 181
     24e:	b2 1c       	adc	r11, r2
     250:	06 42       	sbci	r16, 0x26	; 38
     252:	0c d6       	rcall	.+3096   	; 0xe6c <gpio_set_pin_direction+0xc4>
     254:	b8 87       	std	Y+8, r27	; 0x08
     256:	2c 6a       	ori	r18, 0xAC	; 172
     258:	da a2       	std	Y+34, r13	; 0x22
     25a:	96 21       	and	r25, r6
     25c:	27 43       	sbci	r18, 0x37	; 55
     25e:	0b d6       	rcall	.+3094   	; 0xe76 <gpio_set_pin_direction+0xce>
     260:	f8 a7       	std	Y+40, r31	; 0x28
     262:	2c 49       	sbci	r18, 0x9C	; 156
     264:	db a2       	std	Y+35, r13	; 0x23
     266:	9d 00       	.word	0x009d	; ????
     268:	44 0b       	sbc	r20, r20
     26a:	d6 b8       	out	0x06, r13	; 6
     26c:	87 2c       	mov	r8, r7
     26e:	ea 5f       	subi	r30, 0xFA	; 250
     270:	86 9c       	mul	r8, r6
     272:	00 45       	sbci	r16, 0x50	; 80
     274:	0d d6       	rcall	.+3098   	; 0xe90 <gpio_set_pin_direction+0xe8>
     276:	b8 07       	cpc	r27, r24
     278:	25 4d       	sbci	r18, 0xD5	; 213
     27a:	87 28       	or	r8, r7
     27c:	4d 07       	cpc	r20, r29
     27e:	1d 06       	cpc	r1, r29
     280:	46 0c       	add	r4, r6
     282:	d6 b8       	out	0x06, r13	; 6
     284:	07 25       	eor	r16, r7
     286:	4d 87       	std	Y+13, r20	; 0x0d
     288:	28 ad       	ldd	r18, Y+56	; 0x38
     28a:	d3 00       	.word	0x00d3	; ????
     28c:	47 0c       	add	r4, r7
     28e:	d6 f8       	bld	r13, 6
     290:	a7 2c       	mov	r10, r7
     292:	49 4b       	sbci	r20, 0xB9	; 185
     294:	4a 16       	cp	r4, r26
     296:	ed 04       	cpc	r14, r13
     298:	48 10       	cpse	r4, r8
     29a:	d6 b8       	out	0x06, r13	; 6
     29c:	b3 24       	eor	r11, r3
     29e:	4b b2       	in	r4, 0x1b	; 27
     2a0:	64 50       	subi	r22, 0x04	; 4
     2a2:	b2 24       	eor	r11, r2
     2a4:	4b b2       	in	r4, 0x1b	; 27
     2a6:	1c 06       	cpc	r1, r28
     2a8:	49 08       	sbc	r4, r9
     2aa:	d6 f8       	bld	r13, 6
     2ac:	c7 b4       	in	r12, 0x27	; 39
     2ae:	e3 4e       	sbci	r30, 0xE3	; 227
     2b0:	4a 0b       	sbc	r20, r26
     2b2:	d6 f8       	bld	r13, 6
     2b4:	91 31       	cpi	r25, 0x11	; 17
     2b6:	6d aa       	std	Y+53, r6	; 0x35
     2b8:	e9 14       	cp	r14, r9
     2ba:	00 4b       	sbci	r16, 0xB0	; 176
     2bc:	0e d6       	rcall	.+3100   	; 0xeda <rtc_int_enable+0xe>
     2be:	b8 b3       	in	r27, 0x18	; 24
     2c0:	24 aa       	std	Z+52, r2	; 0x34
     2c2:	64 62       	ori	r22, 0x24	; 36
     2c4:	92 45       	sbci	r25, 0x52	; 82
     2c6:	b5 1c       	adc	r11, r5
     2c8:	06 4c       	sbci	r16, 0xC6	; 198
     2ca:	09 d6       	rcall	.+3090   	; 0xede <rtc_int_enable+0x12>
     2cc:	b8 d3       	rcall	.+1904   	; 0xa3e <.do_clear_bss_start+0x4>
     2ce:	5e 07       	cpc	r21, r30
     2d0:	1d 06       	cpc	r1, r29
     2d2:	4d 0e       	add	r4, r29
     2d4:	d6 b8       	out	0x06, r13	; 6
     2d6:	b3 24       	eor	r11, r3
     2d8:	4b 2c       	mov	r4, r11
     2da:	dd 92       	st	X+, r13
     2dc:	2c c9       	rjmp	.-3496   	; 0xfffff536 <__eeprom_end+0xff7ef536>
     2de:	72 18       	sub	r7, r2
     2e0:	4e 0f       	add	r20, r30
     2e2:	d6 b8       	out	0x06, r13	; 6
     2e4:	b3 24       	eor	r11, r3
     2e6:	4b a4       	ldd	r4, Y+43	; 0x2b
     2e8:	a4 93       	xch	Z, r26
     2ea:	92 25       	eor	r25, r2
     2ec:	59 0e       	add	r5, r25
     2ee:	03 4f       	sbci	r16, 0xF3	; 243
     2f0:	0e d6       	rcall	.+3100   	; 0xf0e <rtc_int_enable+0x42>
     2f2:	f8 a7       	std	Y+40, r31	; 0x28
     2f4:	2c c9       	rjmp	.-3496   	; 0xfffff54e <__eeprom_end+0xff7ef54e>
     2f6:	92 2c       	mov	r9, r2
     2f8:	c9 92       	st	Y+, r12
     2fa:	2c da       	rcall	.-2984   	; 0xfffff754 <__eeprom_end+0xff7ef754>
     2fc:	09 50       	subi	r16, 0x09	; 9
     2fe:	0d d6       	rcall	.+3098   	; 0xf1a <rtc_int_enable+0x4e>
     300:	b8 87       	std	Y+8, r27	; 0x08
     302:	28 4b       	sbci	r18, 0xB8	; 184
     304:	b2 64       	ori	r27, 0x42	; 66
     306:	88 d2       	rcall	.+1296   	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     308:	3a 0d       	add	r19, r10
     30a:	51 0e       	add	r5, r17
     30c:	d6 f8       	bld	r13, 6
     30e:	a7 2c       	mov	r10, r7
     310:	c9 92       	st	Y+, r12
     312:	2c c9       	rjmp	.-3496   	; 0xfffff56c <__eeprom_end+0xff7ef56c>
     314:	92 a6       	std	Z+42, r9	; 0x2a
     316:	39 07       	cpc	r19, r25
     318:	52 10       	cpse	r5, r2
     31a:	d6 b8       	out	0x06, r13	; 6
     31c:	87 28       	or	r8, r7
     31e:	4b b2       	in	r4, 0x1b	; 27
     320:	64 88       	ldd	r6, Z+20	; 0x14
     322:	92 2c       	mov	r9, r2
     324:	aa e5       	ldi	r26, 0x5A	; 90
     326:	30 00       	.word	0x0030	; ????
     328:	53 0c       	add	r5, r3
     32a:	d6 f8       	bld	r13, 6
     32c:	a7 2c       	mov	r10, r7
     32e:	89 e7       	ldi	r24, 0x79	; 121
     330:	24 8b       	std	Z+20, r18	; 0x14
     332:	76 02       	muls	r23, r22
     334:	54 09       	sbc	r21, r4
     336:	d6 b8       	out	0x06, r13	; 6
     338:	07 2d       	mov	r16, r7
     33a:	ed 9d       	mul	r30, r13
     33c:	02 55       	subi	r16, 0x52	; 82
     33e:	0f d6       	rcall	.+3102   	; 0xf5e <rtc_sync+0x2a>
     340:	b8 b3       	in	r27, 0x18	; 24
     342:	24 4b       	sbci	r18, 0xB4	; 180
     344:	b2 24       	eor	r11, r2
     346:	4b b2       	in	r4, 0x1b	; 27
     348:	24 8b       	std	Z+20, r18	; 0x14
     34a:	76 02       	muls	r23, r22
     34c:	56 10       	cpse	r5, r6
     34e:	d6 b8       	out	0x06, r13	; 6
     350:	b3 24       	eor	r11, r3
     352:	4b b2       	in	r4, 0x1b	; 27
     354:	28 c9       	rjmp	.-3504   	; 0xfffff5a6 <__eeprom_end+0xff7ef5a6>
     356:	92 2c       	mov	r9, r2
     358:	09 73       	andi	r16, 0x39	; 57
     35a:	0a 00       	.word	0x000a	; ????
     35c:	57 0e       	add	r5, r23
     35e:	d6 b8       	out	0x06, r13	; 6
     360:	b3 24       	eor	r11, r3
     362:	4b b2       	in	r4, 0x1b	; 27
     364:	a4 2f       	mov	r26, r20
     366:	96 2c       	mov	r9, r6
     368:	87 01       	movw	r16, r14
     36a:	58 0f       	add	r21, r24
     36c:	d6 b8       	out	0x06, r13	; 6
     36e:	b3 24       	eor	r11, r3
     370:	8b 92       	.word	0x928b	; ????
     372:	b0 12       	cpse	r11, r16
     374:	65 49       	sbci	r22, 0x95	; 149
     376:	96 c3       	rjmp	.+1836   	; 0xaa4 <adc_init+0x28>
     378:	00 59       	subi	r16, 0x90	; 144
     37a:	0c d6       	rcall	.+3096   	; 0xf94 <rtc_sync+0x60>
     37c:	b8 b3       	in	r27, 0x18	; 24
     37e:	24 8b       	std	Z+20, r18	; 0x14
     380:	92 30       	cpi	r25, 0x02	; 2
     382:	6d a7       	std	Y+45, r22	; 0x2d
     384:	00 5a       	subi	r16, 0xA0	; 160
     386:	0b d6       	rcall	.+3094   	; 0xf9e <rtc_sync+0x6a>
     388:	b8 07       	cpc	r27, r24
     38a:	35 ec       	ldi	r19, 0xC5	; 197
     38c:	3a e8       	ldi	r19, 0x8A	; 138
     38e:	30 00       	.word	0x0030	; ????
     390:	5b 08       	sbc	r5, r11
     392:	d6 f8       	bld	r13, 6
     394:	b7 b4       	in	r11, 0x27	; 39
     396:	eb 4e       	sbci	r30, 0xEB	; 235
     398:	5c 09       	sbc	r21, r12
     39a:	d6 b8       	out	0x06, r13	; 6
     39c:	d3 b8       	out	0x03, r13	; 3
     39e:	6b 0e       	add	r6, r27
     3a0:	03 5d       	subi	r16, 0xD3	; 211
     3a2:	08 d6       	rcall	.+3088   	; 0xfb4 <rtc_sync+0x80>
     3a4:	f8 d7       	rcall	.+4080   	; 0x1396 <spi1_tranfer+0x32>
     3a6:	de 76       	andi	r29, 0x6E	; 110
     3a8:	02 5e       	subi	r16, 0xE2	; 226
     3aa:	0b d6       	rcall	.+3094   	; 0xfc2 <rtc_sync+0x8e>
     3ac:	f8 91       	.word	0x91f8	; ????
     3ae:	30 89       	ldd	r19, Z+16	; 0x10
     3b0:	b2 9c       	mul	r11, r2
     3b2:	27 00       	.word	0x0027	; ????
     3b4:	5f 08       	sbc	r5, r15
     3b6:	d6 f8       	bld	r13, 6
     3b8:	f9 3c       	cpi	r31, 0xC9	; 201
     3ba:	e8 00       	.word	0x00e8	; ????
     3bc:	60 08       	sbc	r6, r0
     3be:	d6 b8       	out	0x06, r13	; 6
     3c0:	e2 9c       	mul	r14, r2
     3c2:	5f 00       	.word	0x005f	; ????
     3c4:	61 0d       	add	r22, r1
     3c6:	d6 f8       	bld	r13, 6
     3c8:	a9 73       	andi	r26, 0x39	; 57
     3ca:	34 24       	eor	r3, r4
     3cc:	59 34       	cpi	r21, 0x49	; 73
     3ce:	e4 30       	cpi	r30, 0x04	; 4
     3d0:	00 62       	ori	r16, 0x20	; 32
     3d2:	0d d6       	rcall	.+3098   	; 0xfee <BCDtoDEC+0xe>
     3d4:	b8 d3       	rcall	.+1904   	; 0xb46 <adc_convert+0x5a>
     3d6:	8a 24       	eor	r8, r10
     3d8:	25 59       	subi	r18, 0x95	; 149
     3da:	22 25       	eor	r18, r2
     3dc:	89 4e       	sbci	r24, 0xE9	; 233
     3de:	63 0b       	sbc	r22, r19
     3e0:	d6 f8       	bld	r13, 6
     3e2:	a9 53       	subi	r26, 0x39	; 57
     3e4:	96 a4       	ldd	r9, Z+46	; 0x2e
     3e6:	59 b4       	in	r5, 0x29	; 41
     3e8:	13 64       	ori	r17, 0x43	; 67
     3ea:	0e d6       	rcall	.+3100   	; 0x1008 <BCDtoDEC+0x28>
     3ec:	f8 b1       	in	r31, 0x08	; 8
     3ee:	34 52       	subi	r19, 0x24	; 36
     3f0:	4a 4a       	sbci	r20, 0xAA	; 170
     3f2:	96 44       	sbci	r25, 0x46	; 70
     3f4:	96 1c       	adc	r9, r6
     3f6:	06 65       	ori	r16, 0x56	; 86
     3f8:	0b d6       	rcall	.+3094   	; 0x1010 <convert_to_timestamp+0x6>
     3fa:	f8 a9       	ldd	r31, Y+48	; 0x30
     3fc:	53 96       	adiw	r26, 0x13	; 19
     3fe:	0c 4a       	sbci	r16, 0xAC	; 172
     400:	bc 13       	cpse	r27, r28
     402:	66 0c       	add	r6, r6
     404:	d6 f8       	bld	r13, 6
     406:	11 2d       	mov	r17, r1
     408:	2a 0e       	add	r2, r26
     40a:	59 5a       	subi	r21, 0xA9	; 169
     40c:	27 01       	movw	r4, r14
     40e:	67 0f       	add	r22, r23
     410:	d6 f8       	bld	r13, 6
     412:	a9 43       	sbci	r26, 0x39	; 57
     414:	92 25       	eor	r25, r2
     416:	59 34       	cpi	r21, 0x49	; 73
     418:	a4 49       	sbci	r26, 0x94	; 148
     41a:	16 4d       	sbci	r17, 0xD6	; 214
     41c:	00 68       	ori	r16, 0x80	; 128
     41e:	0e d6       	rcall	.+3100   	; 0x103c <convert_to_timestamp+0x32>
     420:	b8 d3       	rcall	.+1904   	; 0xb92 <get_mVolt+0x22>
     422:	8a 24       	eor	r8, r10
     424:	25 59       	subi	r18, 0x95	; 149
     426:	92 25       	eor	r25, r2
     428:	59 0e       	add	r5, r25
     42a:	03 69       	ori	r16, 0x93	; 147
     42c:	0a d6       	rcall	.+3092   	; 0x1042 <convert_to_timestamp+0x38>
     42e:	f8 91       	.word	0x91f8	; ????
     430:	1c 53       	subi	r17, 0x3C	; 60
     432:	1b 77       	andi	r17, 0x7B	; 123
     434:	02 6a       	ori	r16, 0xA2	; 162
     436:	0b d6       	rcall	.+3094   	; 0x104e <convert_to_timestamp+0x44>
     438:	f8 b1       	in	r31, 0x08	; 8
     43a:	1c 53       	subi	r17, 0x3C	; 60
     43c:	9b ba       	out	0x1b, r9	; 27
     43e:	49 00       	.word	0x0049	; ????
     440:	6b 0d       	add	r22, r11
     442:	d6 b8       	out	0x06, r13	; 6
     444:	d3 5a       	subi	r29, 0xA3	; 163
     446:	12 45       	sbci	r17, 0x52	; 82
     448:	5b 54       	subi	r21, 0x4B	; 75
     44a:	cb 61       	ori	r28, 0x1B	; 27
     44c:	00 6c       	ori	r16, 0xC0	; 192
     44e:	08 d6       	rcall	.+3088   	; 0x1060 <convert_to_timestamp+0x56>
     450:	f8 d5       	rcall	.+3056   	; 0x1042 <convert_to_timestamp+0x38>
     452:	1e 77       	andi	r17, 0x7E	; 126
     454:	02 6d       	ori	r16, 0xD2	; 210
     456:	0b d6       	rcall	.+3094   	; 0x106e <convert_to_timestamp+0x64>
     458:	f8 89       	ldd	r31, Y+16	; 0x10
     45a:	4a 94       	dec	r4
     45c:	f4 6f       	ori	r31, 0xF4	; 244
     45e:	39 0c       	add	r3, r9
     460:	6e 0e       	add	r6, r30
     462:	d6 f8       	bld	r13, 6
     464:	89 89       	ldd	r24, Y+17	; 0x11
     466:	24 25       	eor	r18, r4
     468:	59 92       	st	Y+, r5
     46a:	25 59       	subi	r18, 0x95	; 149
     46c:	0e 03       	fmul	r16, r22
     46e:	6f 0c       	add	r6, r15
     470:	d6 f8       	bld	r13, 6
     472:	a9 53       	subi	r26, 0x39	; 57
     474:	96 64       	ori	r25, 0x46	; 70
     476:	49 16       	cp	r4, r25
     478:	ed 04       	cpc	r14, r13
     47a:	70 0f       	add	r23, r16
     47c:	d6 f8       	bld	r13, 6
     47e:	89 89       	ldd	r24, Y+17	; 0x11
     480:	24 25       	eor	r18, r4
     482:	59 22       	and	r5, r25
     484:	25 89       	ldd	r18, Z+21	; 0x15
     486:	94 a6       	std	Z+44, r9	; 0x2c
     488:	00 71       	andi	r16, 0x10	; 16
     48a:	0d d6       	rcall	.+3098   	; 0x10a6 <convert_to_timestamp+0x9c>
     48c:	f8 a9       	ldd	r31, Y+48	; 0x30
     48e:	4a 49       	sbci	r20, 0x9A	; 154
     490:	c9 92       	st	Y+, r12
     492:	c8 92       	.word	0x92c8	; ????
     494:	56 00       	.word	0x0056	; ????
     496:	72 0b       	sbc	r23, r18
     498:	d6 f8       	bld	r13, 6
     49a:	89 89       	ldd	r24, Y+17	; 0x11
     49c:	24 25       	eor	r18, r4
     49e:	69 9d       	mul	r22, r9
     4a0:	06 73       	andi	r16, 0x36	; 54
     4a2:	0a d6       	rcall	.+3092   	; 0x10b8 <convert_to_timestamp+0xae>
     4a4:	f8 a9       	ldd	r31, Y+48	; 0x30
     4a6:	53 3c       	cpi	r21, 0xC3	; 195
     4a8:	27 43       	sbci	r18, 0x37	; 55
     4aa:	4e 74       	andi	r20, 0x4E	; 78
     4ac:	0b d6       	rcall	.+3094   	; 0x10c4 <convert_to_timestamp+0xba>
     4ae:	f8 d3       	rcall	.+2032   	; 0xca0 <cmd_pin_handle+0x4>
     4b0:	70 c8       	rjmp	.-3872   	; 0xfffff592 <__eeprom_end+0xff7ef592>
     4b2:	d2 52       	subi	r29, 0x22	; 34
     4b4:	a6 13       	cpse	r26, r22
     4b6:	75 0d       	add	r23, r5
     4b8:	d6 f8       	bld	r13, 6
     4ba:	89 59       	subi	r24, 0x99	; 153
     4bc:	92 25       	eor	r25, r2
     4be:	59 12       	cpse	r5, r25
     4c0:	59 72       	andi	r21, 0x29	; 41
     4c2:	18 76       	andi	r17, 0x68	; 104
     4c4:	0d d6       	rcall	.+3098   	; 0x10e0 <convert_to_timestamp+0xd6>
     4c6:	f8 89       	ldd	r31, Y+16	; 0x10
     4c8:	59 92       	st	Y+, r5
     4ca:	45 49       	sbci	r20, 0x95	; 149
     4cc:	96 84       	ldd	r9, Z+14	; 0x0e
     4ce:	39 05       	cpc	r19, r9
     4d0:	77 0c       	add	r7, r7
     4d2:	d6 f8       	bld	r13, 6
     4d4:	89 59       	subi	r24, 0x99	; 153
     4d6:	92 25       	eor	r25, r2
     4d8:	7d 4a       	sbci	r23, 0xAD	; 173
     4da:	72 02       	muls	r23, r18
     4dc:	78 0d       	add	r23, r8
     4de:	d6 f8       	bld	r13, 6
     4e0:	89 59       	subi	r24, 0x99	; 153
     4e2:	94 84       	ldd	r9, Z+12	; 0x0c
     4e4:	95 28       	or	r9, r5
     4e6:	cb 61       	ori	r28, 0x1B	; 27
     4e8:	00 79       	andi	r16, 0x90	; 144
     4ea:	0e d6       	rcall	.+3100   	; 0x1108 <convert_to_timestamp+0xfe>
     4ec:	f8 89       	ldd	r31, Y+16	; 0x10
     4ee:	59 92       	st	Y+, r5
     4f0:	25 91       	lpm	r18, Z+
     4f2:	25 4d       	sbci	r18, 0xD5	; 213
     4f4:	b2 68       	ori	r27, 0x82	; 130
     4f6:	02 7a       	andi	r16, 0xA2	; 162
     4f8:	0b d6       	rcall	.+3094   	; 0x1110 <convert_to_timestamp+0x106>
     4fa:	f8 89       	ldd	r31, Y+16	; 0x10
     4fc:	83 d8       	rcall	.-3834   	; 0xfffff604 <__eeprom_end+0xff7ef604>
     4fe:	38 e8       	ldi	r19, 0x88	; 136
     500:	30 00       	.word	0x0030	; ????
     502:	7b 0c       	add	r7, r11
     504:	d6 f8       	bld	r13, 6
     506:	21 2d       	mov	r18, r1
     508:	ce e4       	ldi	r28, 0x4E	; 78
     50a:	30 d6       	rcall	.+3168   	; 0x116c <convert_to_timestamp+0x162>
     50c:	61 00       	.word	0x0061	; ????
     50e:	7c 09       	sbc	r23, r12
     510:	d6 f8       	bld	r13, 6
     512:	91 b4       	in	r9, 0x21	; 33
     514:	ef 14       	cp	r14, r15
     516:	00 7d       	andi	r16, 0xD0	; 208
     518:	0b d6       	rcall	.+3094   	; 0x1130 <convert_to_timestamp+0x126>
     51a:	f8 e5       	ldi	r31, 0x58	; 88
     51c:	30 d6       	rcall	.+3168   	; 0x117e <convert_to_timestamp+0x174>
     51e:	e2 4c       	sbci	r30, 0xC2	; 194
     520:	a7 00       	.word	0x00a7	; ????
     522:	7e 0a       	sbc	r7, r30
     524:	d6 f8       	bld	r13, 6
     526:	a3 a4       	ldd	r10, Z+43	; 0x2b
     528:	53 ce       	rjmp	.-858    	; 0x1d0 <__trampolines_end+0x11c>
     52a:	1b 00       	.word	0x001b	; ????
     52c:	a0 07       	cpc	r26, r16
     52e:	d6 f8       	bld	r13, 6
     530:	f9 23       	and	r31, r25
     532:	00 a1       	ldd	r16, Z+32	; 0x20
     534:	0a d6       	rcall	.+3092   	; 0x114a <convert_to_timestamp+0x140>
     536:	f8 91       	.word	0x91f8	; ????
     538:	1c 4c       	sbci	r17, 0xCC	; 204
     53a:	bb 53       	subi	r27, 0x3B	; 59
     53c:	00 a2       	std	Z+32, r0	; 0x20
     53e:	0f d6       	rcall	.+3102   	; 0x115e <convert_to_timestamp+0x154>
     540:	f8 f1       	brcs	.+126    	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
     542:	70 48       	sbci	r23, 0x80	; 128
     544:	6a 49       	sbci	r22, 0x9A	; 154
     546:	96 84       	ldd	r9, Z+14	; 0x0e
     548:	43 96       	adiw	r24, 0x13	; 19
     54a:	43 00       	.word	0x0043	; ????
     54c:	a3 0d       	add	r26, r3
     54e:	d6 f8       	bld	r13, 6
     550:	11 2d       	mov	r17, r1
     552:	2a 8e       	std	Y+26, r2	; 0x1a
     554:	69 94       	.word	0x9469	; ????
     556:	24 3a       	cpi	r18, 0xA4	; 164
     558:	01 a4       	ldd	r0, Z+41	; 0x29
     55a:	0d d6       	rcall	.+3098   	; 0x1176 <convert_to_timestamp+0x16c>
     55c:	f8 89       	ldd	r31, Y+16	; 0x10
     55e:	59 b4       	in	r5, 0x29	; 41
     560:	25 d9       	rcall	.-3510   	; 0xfffff7ac <__eeprom_end+0xff7ef7ac>
     562:	94 e5       	ldi	r25, 0x54	; 84
     564:	30 00       	.word	0x0030	; ????
     566:	a5 0e       	add	r10, r21
     568:	d6 b8       	out	0x06, r13	; 6
     56a:	b3 24       	eor	r11, r3
     56c:	8b 92       	.word	0x928b	; ????
     56e:	30 1b       	sub	r19, r16
     570:	b4 b4       	in	r11, 0x24	; 36
     572:	0e 01       	movw	r0, r28
     574:	a6 0b       	sbc	r26, r22
     576:	d6 f8       	bld	r13, 6
     578:	91 b4       	in	r9, 0x21	; 33
     57a:	0e a6       	std	Y+46, r0	; 0x2e
     57c:	75 0a       	sbc	r7, r21
     57e:	00 a7       	std	Z+40, r16	; 0x28
     580:	0d d6       	rcall	.+3098   	; 0x119c <convert_to_timestamp+0x192>
     582:	f8 a7       	std	Y+40, r31	; 0x28
     584:	74 8b       	std	Z+20, r23	; 0x14
     586:	b2 28       	or	r11, r2
     588:	5b a3       	std	Y+35, r21	; 0x23
     58a:	1d 01       	movw	r2, r26
     58c:	a8 07       	cpc	r26, r24
     58e:	d6 78       	andi	r29, 0x86	; 134
     590:	ea fc       	.word	0xfcea	; ????
     592:	01 a9       	ldd	r16, Z+49	; 0x31
     594:	0c d6       	rcall	.+3096   	; 0x11ae <convert_to_timestamp+0x1a4>
     596:	f8 a7       	std	Y+40, r31	; 0x28
     598:	2c 69       	ori	r18, 0x9C	; 156
     59a:	91 92       	st	Z+, r9
     59c:	6e d1       	rcall	.+732    	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
     59e:	4e aa       	std	Y+54, r4	; 0x36
     5a0:	0d d6       	rcall	.+3098   	; 0x11bc <convert_to_timestamp+0x1b2>
     5a2:	f8 91       	.word	0x91f8	; ????
     5a4:	a9 45       	sbci	r26, 0x59	; 89
     5a6:	4b 72       	andi	r20, 0x2B	; 43
     5a8:	64 c8       	rjmp	.-3896   	; 0xfffff672 <__eeprom_end+0xff7ef672>
     5aa:	a9 00       	.word	0x00a9	; ????
     5ac:	ab 0e       	add	r10, r27
     5ae:	d6 f8       	bld	r13, 6
     5b0:	c9 51       	subi	r28, 0x19	; 25
     5b2:	12 25       	eor	r17, r2
     5b4:	51 16       	cp	r5, r17
     5b6:	65 51       	subi	r22, 0x15	; 21
     5b8:	8e 02       	muls	r24, r30
     5ba:	ac 09       	sbc	r26, r12
     5bc:	d6 f8       	bld	r13, 6
     5be:	19 87       	std	Y+9, r17	; 0x09
     5c0:	34 67       	ori	r19, 0x74	; 116
     5c2:	04 ad       	ldd	r16, Z+60	; 0x3c
     5c4:	09 d6       	rcall	.+3090   	; 0x11d8 <convert_to_timestamp+0x1ce>
     5c6:	f8 19       	sub	r31, r8
     5c8:	87 9c       	mul	r8, r7
     5ca:	1b 00       	.word	0x001b	; ????
     5cc:	ae 0e       	add	r10, r30
     5ce:	d6 f8       	bld	r13, 6
     5d0:	a7 2c       	mov	r10, r7
     5d2:	59 12       	cpse	r5, r25
     5d4:	29 91       	ld	r18, Y+
     5d6:	92 2c       	mov	r9, r2
     5d8:	da 09       	sbc	r29, r10
     5da:	af 08       	sbc	r10, r15
     5dc:	d6 38       	cpi	r29, 0x86	; 134
     5de:	06 9d       	mul	r16, r6
     5e0:	9f 01       	movw	r18, r30
     5e2:	b0 0a       	sbc	r11, r16
     5e4:	d6 f8       	bld	r13, 6
     5e6:	91 30       	cpi	r25, 0x01	; 1
     5e8:	09 73       	andi	r16, 0x39	; 57
     5ea:	1e 01       	movw	r2, r28
     5ec:	b1 0c       	add	r11, r1
     5ee:	d6 f8       	bld	r13, 6
     5f0:	f1 34       	cpi	r31, 0x41	; 65
     5f2:	1b b4       	in	r1, 0x2b	; 43
     5f4:	34 1b       	sub	r19, r20
     5f6:	74 18       	sub	r7, r4
     5f8:	b2 0b       	sbc	r27, r18
     5fa:	d6 b8       	out	0x06, r13	; 6
     5fc:	b4 28       	or	r11, r4
     5fe:	2c 0e       	add	r2, r28
     600:	39 37       	cpi	r19, 0x79	; 121
     602:	00 b3       	in	r16, 0x10	; 16
     604:	0a d6       	rcall	.+3092   	; 0x121a <convert_to_timestamp+0x210>
     606:	78 e6       	ldi	r23, 0x68	; 104
     608:	4c 8e       	std	Y+28, r4	; 0x1c
     60a:	76 8e       	std	Z+30, r7	; 0x1e
     60c:	00 b4       	in	r0, 0x20	; 32
     60e:	08 d6       	rcall	.+3088   	; 0x1220 <convert_to_timestamp+0x216>
     610:	f8 c2       	rjmp	.+1520   	; 0xc02 <lcd_hw_spi+0x42>
     612:	9c 9f       	mul	r25, r28
     614:	00 b5       	in	r16, 0x20	; 32
     616:	0f d6       	rcall	.+3102   	; 0x1236 <convert_to_timestamp+0x22c>
     618:	f8 89       	ldd	r31, Y+16	; 0x10
     61a:	59 92       	st	Y+, r5
     61c:	25 59       	subi	r18, 0x95	; 149
     61e:	22 25       	eor	r18, r2
     620:	89 94       	.word	0x9489	; ????
     622:	83 00       	.word	0x0083	; ????
     624:	b6 10       	cpse	r11, r6
     626:	d6 f8       	bld	r13, 6
     628:	87 64       	ori	r24, 0x47	; 71
     62a:	49 96       	adiw	r24, 0x19	; 25
     62c:	48 c9       	rjmp	.-3440   	; 0xfffff8be <__eeprom_end+0xff7ef8be>
     62e:	92 2c       	mov	r9, r2
     630:	c9 92       	st	Y+, r12
     632:	1c 06       	cpc	r1, r28
     634:	b7 08       	sbc	r11, r7
     636:	d6 f8       	bld	r13, 6
     638:	59 73       	andi	r21, 0x39	; 57
     63a:	ae 00       	.word	0x00ae	; ????
     63c:	b8 08       	sbc	r11, r8
     63e:	d6 f8       	bld	r13, 6
     640:	f9 29       	or	r31, r9
     642:	cc 00       	.word	0x00cc	; ????
     644:	b9 09       	sbc	r27, r9
     646:	d6 b8       	out	0x06, r13	; 6
     648:	42 b5       	in	r20, 0x22	; 34
     64a:	b8 73       	andi	r27, 0x38	; 56
     64c:	04 ba       	out	0x14, r0	; 20
     64e:	0c d6       	rcall	.+3096   	; 0x1268 <convert_to_timestamp+0x25e>
     650:	f8 11       	cpse	r31, r8
     652:	2d 6a       	ori	r18, 0xAD	; 173
     654:	d3 a1       	ldd	r29, Z+35	; 0x23
     656:	21 a7       	std	Z+41, r18	; 0x29
     658:	02 bb       	out	0x12, r16	; 18
     65a:	0d d6       	rcall	.+3098   	; 0x1276 <convert_to_timestamp+0x26c>
     65c:	f8 89       	ldd	r31, Y+16	; 0x10
     65e:	51 16       	cp	r5, r17
     660:	65 51       	subi	r22, 0x15	; 21
     662:	12 25       	eor	r17, r2
     664:	51 4e       	sbci	r21, 0xE1	; 225
     666:	bc 0d       	add	r27, r12
     668:	d6 78       	andi	r29, 0x86	; 134
     66a:	42 b5       	in	r20, 0x22	; 34
     66c:	38 85       	ldd	r19, Y+8	; 0x08
     66e:	5a 12       	cpse	r5, r26
     670:	0d 69       	ori	r16, 0x9D	; 157
     672:	0c bd       	out	0x2c, r16	; 44
     674:	0d d6       	rcall	.+3098   	; 0x1290 <__vector_39+0x4>
     676:	78 42       	sbci	r23, 0x28	; 40
     678:	b5 b8       	out	0x05, r11	; 5
     67a:	84 49       	sbci	r24, 0x94	; 148
     67c:	1a 86       	std	Y+10, r1	; 0x0a
     67e:	33 00       	.word	0x0033	; ????
     680:	be 0e       	add	r11, r30
     682:	d6 38       	cpi	r29, 0x86	; 134
     684:	e4 30       	cpi	r30, 0x04	; 4
     686:	ce a4       	ldd	r12, Y+46	; 0x2e
     688:	50 4b       	sbci	r21, 0xB0	; 176
     68a:	a2 21       	and	r26, r2
     68c:	cd 01       	movw	r24, r26
     68e:	bf 0b       	sbc	r27, r31
     690:	d6 f8       	bld	r13, 6
     692:	91 1c       	adc	r9, r1
     694:	4c c3       	rjmp	.+1688   	; 0xd2e <gpio_set_pin_level+0x24>
     696:	5a b4       	in	r5, 0x2a	; 42
     698:	13 c0       	rjmp	.+38     	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
     69a:	0f d6       	rcall	.+3102   	; 0x12ba <__vector_39+0x2e>
     69c:	78 e2       	ldi	r23, 0x28	; 40
     69e:	70 ca       	rjmp	.-2848   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
     6a0:	92 2c       	mov	r9, r2
     6a2:	19 94       	eijmp
     6a4:	2c c9       	rjmp	.-3496   	; 0xfffff8fe <__eeprom_end+0xff7ef8fe>
     6a6:	72 18       	sub	r7, r2
     6a8:	c1 0f       	add	r28, r17
     6aa:	d6 f8       	bld	r13, 6
     6ac:	c2 70       	andi	r28, 0x02	; 2
     6ae:	ca 92       	st	-Y, r12
     6b0:	2c 19       	sub	r18, r12
     6b2:	94 2c       	mov	r9, r4
     6b4:	c9 72       	andi	r28, 0x29	; 41
     6b6:	18 c2       	rjmp	.+1072   	; 0xae8 <adc_pin_select+0x38>
     6b8:	10 d6       	rcall	.+3104   	; 0x12da <__vector_39+0x4e>
     6ba:	b8 c2       	rjmp	.+1392   	; 0xc2c <lcd_hw_spi+0x6c>
     6bc:	24 9b       	sbis	0x04, 4	; 4
     6be:	b2 24       	eor	r11, r2
     6c0:	4b 06       	cpc	r4, r27
     6c2:	25 4b       	sbci	r18, 0xB5	; 181
     6c4:	b2 1c       	adc	r11, r2
     6c6:	06 c3       	rjmp	.+1548   	; 0xcd4 <cs_pin_handle+0x18>
     6c8:	11 d6       	rcall	.+3106   	; 0x12ec <spi1_init+0x8>
     6ca:	78 a2       	std	Y+32, r7	; 0x20
     6cc:	24 d1       	rcall	.+584    	; 0x916 <__stack+0x17>
     6ce:	a6 2c       	mov	r10, r6
     6d0:	c9 92       	st	Y+, r12
     6d2:	41 c9       	rjmp	.-3454   	; 0xfffff956 <__eeprom_end+0xff7ef956>
     6d4:	92 2c       	mov	r9, r2
     6d6:	87 01       	movw	r16, r14
     6d8:	c4 10       	cpse	r12, r4
     6da:	d6 78       	andi	r29, 0x86	; 134
     6dc:	ea d0       	rcall	.+468    	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     6de:	94 25       	eor	r25, r4
     6e0:	59 32       	cpi	r21, 0x29	; 41
     6e2:	28 59       	subi	r18, 0x98	; 152
     6e4:	92 e5       	ldi	r25, 0x52	; 82
     6e6:	30 00       	.word	0x0030	; ????
     6e8:	c5 10       	cpse	r12, r5
     6ea:	d6 b8       	out	0x06, r13	; 6
     6ec:	c2 24       	eor	r12, r2
     6ee:	9b b2       	in	r9, 0x1b	; 27
     6f0:	24 4b       	sbci	r18, 0xB4	; 180
     6f2:	06 25       	eor	r16, r6
     6f4:	4b b2       	in	r4, 0x1b	; 27
     6f6:	1c 06       	cpc	r1, r28
     6f8:	c6 0e       	add	r12, r22
     6fa:	d6 f8       	bld	r13, 6
     6fc:	91 21       	and	r25, r1
     6fe:	29 35       	cpi	r18, 0x59	; 89
     700:	0d 43       	sbci	r16, 0x3D	; 61
     702:	d4 b4       	in	r13, 0x24	; 36
     704:	a3 00       	.word	0x00a3	; ????
     706:	c7 0b       	sbc	r28, r23
     708:	d6 f8       	bld	r13, 6
     70a:	a7 2c       	mov	r10, r7
     70c:	49 db       	rcall	.-2414   	; 0xfffffda0 <__eeprom_end+0xff7efda0>
     70e:	a2 b1       	in	r26, 0x02	; 2
     710:	08 c8       	rjmp	.-4080   	; 0xfffff722 <__eeprom_end+0xff7ef722>
     712:	0e d6       	rcall	.+3100   	; 0x1330 <spi1_init+0x4c>
     714:	78 c2       	rjmp	.+1264   	; 0xc06 <lcd_hw_spi+0x46>
     716:	41 49       	sbci	r20, 0x91	; 145
     718:	d3 21       	and	r29, r3
     71a:	4a d3       	rcall	.+1684   	; 0xdb0 <gpio_set_pin_direction+0x8>
     71c:	41 87       	std	Z+9, r20	; 0x09
     71e:	01 c9       	rjmp	.-3582   	; 0xfffff922 <__eeprom_end+0xff7ef922>
     720:	0e d6       	rcall	.+3100   	; 0x133e <spi1_init+0x5a>
     722:	f8 a2       	std	Y+32, r15	; 0x20
     724:	41 49       	sbci	r20, 0x91	; 145
     726:	d3 21       	and	r29, r3
     728:	4a d3       	rcall	.+1684   	; 0xdbe <gpio_set_pin_direction+0x16>
     72a:	41 87       	std	Z+9, r20	; 0x09
     72c:	01 ca       	rjmp	.-3070   	; 0xfffffb30 <__eeprom_end+0xff7efb30>
     72e:	0e d6       	rcall	.+3100   	; 0x134c <spi1_init+0x68>
     730:	b8 b2       	in	r11, 0x18	; 24
     732:	41 49       	sbci	r20, 0x91	; 145
     734:	d3 21       	and	r29, r3
     736:	4a d3       	rcall	.+1684   	; 0xdcc <gpio_set_pin_direction+0x24>
     738:	41 87       	std	Z+9, r20	; 0x09
     73a:	01 cb       	rjmp	.-2558   	; 0xfffffd3e <__eeprom_end+0xff7efd3e>
     73c:	0e d6       	rcall	.+3100   	; 0x135a <spi1_init+0x76>
     73e:	78 4a       	sbci	r23, 0xA8	; 168
     740:	83 92       	.word	0x9283	; ????
     742:	a6 43       	sbci	r26, 0x36	; 54
     744:	94 a6       	std	Z+44, r9	; 0x2c
     746:	83 0e       	add	r8, r19
     748:	03 cc       	rjmp	.-2042   	; 0xffffff50 <__eeprom_end+0xff7eff50>
     74a:	0a d6       	rcall	.+3092   	; 0x1360 <spi1_init+0x7c>
     74c:	78 e2       	ldi	r23, 0x28	; 40
     74e:	70 4c       	sbci	r23, 0xC0	; 192
     750:	1b 77       	andi	r17, 0x7B	; 123
     752:	02 cd       	rjmp	.-1532   	; 0x158 <__trampolines_end+0xa4>
     754:	0a d6       	rcall	.+3092   	; 0x136a <spi1_tranfer+0x6>
     756:	f8 c2       	rjmp	.+1520   	; 0xd48 <gpio_set_pin_level+0x3e>
     758:	70 4c       	sbci	r23, 0xC0	; 192
     75a:	1b 77       	andi	r17, 0x7B	; 123
     75c:	02 ce       	rjmp	.-1020   	; 0x362 <__trampolines_end+0x2ae>
     75e:	0b d6       	rcall	.+3094   	; 0x1376 <spi1_tranfer+0x12>
     760:	b8 c2       	rjmp	.+1392   	; 0xcd2 <cs_pin_handle+0x16>
     762:	24 1b       	sub	r18, r20
     764:	d3 c6       	rjmp	.+3494   	; 0x150c <twi_addr_write_ack+0x2e>
     766:	9d 00       	.word	0x009d	; ????
     768:	cf 0a       	sbc	r12, r31
     76a:	d6 78       	andi	r29, 0x86	; 134
     76c:	ea d0       	rcall	.+468    	; 0x942 <__stack+0x43>
     76e:	98 36       	cpi	r25, 0x68	; 104
     770:	ee 04       	cpc	r14, r14
     772:	d0 0c       	add	r13, r0
     774:	d6 b8       	out	0x06, r13	; 6
     776:	87 2c       	mov	r8, r7
     778:	6a 59       	subi	r22, 0x9A	; 154
     77a:	a2 2e       	mov	r10, r18
     77c:	43 4e       	sbci	r20, 0xE3	; 227
     77e:	d1 11       	cpse	r29, r1
     780:	d6 b8       	out	0x06, r13	; 6
     782:	92 28       	or	r9, r2
     784:	89 b2       	in	r8, 0x19	; 25
     786:	44 4a       	sbci	r20, 0xA4	; 164
     788:	3a 29       	or	r19, r10
     78a:	59 92       	st	Y+, r5
     78c:	e5 30       	cpi	r30, 0x05	; 5
     78e:	00 d2       	rcall	.+1024   	; 0xb90 <get_mVolt+0x20>
     790:	0e d6       	rcall	.+3100   	; 0x13ae <spi1_tranfer+0x4a>
     792:	78 e2       	ldi	r23, 0x28	; 40
     794:	70 ca       	rjmp	.-2848   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
     796:	92 2c       	mov	r9, r2
     798:	c9 92       	st	Y+, r12
     79a:	2c da       	rcall	.-2984   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
     79c:	09 d3       	rcall	.+1554   	; 0xdb0 <gpio_set_pin_direction+0x8>
     79e:	0e d6       	rcall	.+3100   	; 0x13bc <spi1_send>
     7a0:	f8 c2       	rjmp	.+1520   	; 0xd92 <gpio_set_pin_level+0x88>
     7a2:	70 ca       	rjmp	.-2848   	; 0xfffffc84 <__eeprom_end+0xff7efc84>
     7a4:	92 2c       	mov	r9, r2
     7a6:	c9 92       	st	Y+, r12
     7a8:	2c da       	rcall	.-2984   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     7aa:	09 d4       	rcall	.+2066   	; 0xfbe <rtc_sync+0x8a>
     7ac:	0f d6       	rcall	.+3102   	; 0x13cc <spi1_send+0x10>
     7ae:	b8 c2       	rjmp	.+1392   	; 0xd20 <gpio_set_pin_level+0x16>
     7b0:	24 9b       	sbis	0x04, 4	; 4
     7b2:	b2 24       	eor	r11, r2
     7b4:	4b b2       	in	r4, 0x1b	; 27
     7b6:	24 8b       	std	Z+20, r18	; 0x14
     7b8:	76 02       	muls	r23, r22
     7ba:	d5 10       	cpse	r13, r5
     7bc:	d6 b8       	out	0x06, r13	; 6
     7be:	92 28       	or	r9, r2
     7c0:	c9 a6       	std	Y+41, r12	; 0x29
     7c2:	2c c9       	rjmp	.-3496   	; 0xfffffa1c <__eeprom_end+0xff7efa1c>
     7c4:	92 2c       	mov	r9, r2
     7c6:	c9 a2       	std	Y+33, r12	; 0x21
     7c8:	9d 00       	.word	0x009d	; ????
     7ca:	d6 0e       	add	r13, r22
     7cc:	d6 78       	andi	r29, 0x86	; 134
     7ce:	ea d0       	rcall	.+468    	; 0x9a4 <__stack+0xa5>
     7d0:	94 25       	eor	r25, r4
     7d2:	59 92       	st	Y+, r5
     7d4:	25 59       	subi	r18, 0x95	; 149
     7d6:	b4 13       	cpse	r27, r20
     7d8:	d7 0d       	add	r29, r7
     7da:	d6 f8       	bld	r13, 6
     7dc:	89 59       	subi	r24, 0x99	; 153
     7de:	94 84       	ldd	r9, Z+12	; 0x0c
     7e0:	95 28       	or	r9, r5
     7e2:	cb 61       	ori	r28, 0x1B	; 27
     7e4:	00 d8       	rcall	.-4096   	; 0xfffff7e6 <__eeprom_end+0xff7ef7e6>
     7e6:	0e d6       	rcall	.+3100   	; 0x1404 <__vector_40+0x10>
     7e8:	f8 a7       	std	Y+40, r31	; 0x28
     7ea:	48 89       	ldd	r20, Y+16	; 0x10
     7ec:	94 16       	cp	r9, r20
     7ee:	29 91       	ld	r18, Y+
     7f0:	a2 9d       	mul	r26, r2
     7f2:	00 d9       	rcall	.-3584   	; 0xfffff9f4 <__eeprom_end+0xff7ef9f4>
     7f4:	0e d6       	rcall	.+3100   	; 0x1412 <__vector_40+0x1e>
     7f6:	78 e2       	ldi	r23, 0x28	; 40
     7f8:	ac 92       	st	X, r10
     7fa:	25 59       	subi	r18, 0x95	; 149
     7fc:	92 25       	eor	r25, r2
     7fe:	59 b4       	in	r5, 0x29	; 41
     800:	13 da       	rcall	.-3034   	; 0xfffffc28 <__eeprom_end+0xff7efc28>
     802:	0e d6       	rcall	.+3100   	; 0x1420 <__vector_40+0x2c>
     804:	f8 c2       	rjmp	.+1520   	; 0xdf6 <gpio_set_pin_direction+0x4e>
     806:	ac 92       	st	X, r10
     808:	25 59       	subi	r18, 0x95	; 149
     80a:	92 25       	eor	r25, r2
     80c:	59 b4       	in	r5, 0x29	; 41
     80e:	13 db       	rcall	.-2522   	; 0xfffffe36 <__eeprom_end+0xff7efe36>
     810:	0f d6       	rcall	.+3102   	; 0x1430 <__vector_40+0x3c>
     812:	b8 c2       	rjmp	.+1392   	; 0xd84 <gpio_set_pin_level+0x7a>
     814:	24 47       	sbci	r18, 0x74	; 116
     816:	b2 24       	eor	r11, r2
     818:	4b b2       	in	r4, 0x1b	; 27
     81a:	24 8b       	std	Z+20, r18	; 0x14
     81c:	76 02       	muls	r23, r22
     81e:	dc 0f       	add	r29, r28
     820:	d6 78       	andi	r29, 0x86	; 134
     822:	ea 48       	sbci	r30, 0x8A	; 138
     824:	96 64       	ori	r25, 0x46	; 70
     826:	49 96       	adiw	r24, 0x19	; 25
     828:	64 49       	sbci	r22, 0x94	; 148
     82a:	16 ed       	ldi	r17, 0xD6	; 214
     82c:	04 dd       	rcall	.-1528   	; 0x236 <__trampolines_end+0x182>
     82e:	0d d6       	rcall	.+3098   	; 0x144a <twi_start+0x12>
     830:	f8 c2       	rjmp	.+1520   	; 0xe22 <gpio_set_pin_direction+0x7a>
     832:	ac 92       	st	X, r10
     834:	45 49       	sbci	r20, 0x95	; 149
     836:	98 d6       	rcall	.+3376   	; 0x1568 <twi_data_write_ack+0x44>
     838:	29 00       	.word	0x0029	; ????
     83a:	de 0d       	add	r29, r14
     83c:	d6 b8       	out	0x06, r13	; 6
     83e:	d3 21       	and	r29, r3
     840:	ca 92       	st	-Y, r12
     842:	21 4a       	sbci	r18, 0xA1	; 161
     844:	eb 34       	cpi	r30, 0x4B	; 75
     846:	00 df       	rcall	.-512    	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
     848:	0e d6       	rcall	.+3100   	; 0x1466 <twi_start+0x2e>
     84a:	f8 a7       	std	Y+40, r31	; 0x28
     84c:	2c 89       	ldd	r18, Y+20	; 0x14
     84e:	2a 59       	subi	r18, 0x9A	; 154
     850:	54 4b       	sbci	r21, 0xB4	; 180
     852:	12 9d       	mul	r17, r2
     854:	00 e0       	ldi	r16, 0x00	; 0
     856:	0e d6       	rcall	.+3100   	; 0x1474 <twi_start+0x3c>
     858:	78 e2       	ldi	r23, 0x28	; 40
     85a:	1c 9b       	sbis	0x03, 4	; 3
     85c:	a3 21       	and	r26, r3
     85e:	c9 a2       	std	Y+33, r12	; 0x21
     860:	21 87       	std	Z+9, r18	; 0x09
     862:	01 e1       	ldi	r16, 0x11	; 17
     864:	0e d6       	rcall	.+3100   	; 0x1482 <twi_stop+0x4>
     866:	f8 c2       	rjmp	.+1520   	; 0xe58 <gpio_set_pin_direction+0xb0>
     868:	1c 9b       	sbis	0x03, 4	; 3
     86a:	a3 21       	and	r26, r3
     86c:	c9 a2       	std	Y+33, r12	; 0x21
     86e:	21 87       	std	Z+9, r18	; 0x09
     870:	01 e2       	ldi	r16, 0x21	; 33
     872:	0f d6       	rcall	.+3102   	; 0x1492 <twi_stop+0x14>
     874:	b8 c2       	rjmp	.+1392   	; 0xde6 <gpio_set_pin_direction+0x3e>
     876:	24 87       	std	Z+12, r18	; 0x0c
     878:	e6 68       	ori	r30, 0x86	; 134
     87a:	48 b2       	in	r4, 0x18	; 24
     87c:	68 c8       	rjmp	.-3888   	; 0xfffff94e <__eeprom_end+0xff7ef94e>
     87e:	61 00       	.word	0x0061	; ????
     880:	e3 0f       	add	r30, r19
     882:	d6 b8       	out	0x06, r13	; 6
     884:	92 28       	or	r9, r2
     886:	c9 a1       	ldd	r28, Y+33	; 0x21
     888:	39 1a       	sub	r3, r25
     88a:	92 2c       	mov	r9, r2
     88c:	1a 72       	andi	r17, 0x2A	; 42
     88e:	18 e4       	ldi	r17, 0x48	; 72
     890:	0e d6       	rcall	.+3100   	; 0x14ae <twi_restart+0x16>
     892:	f8 93       	.word	0x93f8	; ????
     894:	1c 9a       	sbi	0x03, 4	; 3
     896:	a3 21       	and	r26, r3
     898:	c9 a2       	std	Y+33, r12	; 0x21
     89a:	21 87       	std	Z+9, r18	; 0x09
     89c:	01 e5       	ldi	r16, 0x51	; 81
     89e:	0f d6       	rcall	.+3102   	; 0x14be <twi_restart+0x26>
     8a0:	b8 c2       	rjmp	.+1392   	; 0xe12 <gpio_set_pin_direction+0x6a>
     8a2:	24 0c       	add	r2, r4
     8a4:	e7 68       	ori	r30, 0x87	; 135
     8a6:	48 b2       	in	r4, 0x18	; 24
     8a8:	68 c8       	rjmp	.-3888   	; 0xfffff97a <__eeprom_end+0xff7ef97a>
     8aa:	61 00       	.word	0x0061	; ????
     8ac:	e6 0d       	add	r30, r6
     8ae:	d6 f8       	bld	r13, 6
     8b0:	a9 43       	sbci	r26, 0x39	; 57
     8b2:	98 24       	eor	r9, r8
     8b4:	c3 94       	inc	r12
     8b6:	0d 3a       	cpi	r16, 0xAD	; 173
     8b8:	0a e7       	ldi	r16, 0x7A	; 122
     8ba:	0c d6       	rcall	.+3096   	; 0x14d4 <twi_restart+0x3c>
     8bc:	f8 a9       	ldd	r31, Y+48	; 0x30
     8be:	53 96       	adiw	r26, 0x13	; 19
     8c0:	a4 59       	subi	r26, 0x94	; 148
     8c2:	34 16       	cp	r3, r20
     8c4:	01 e8       	ldi	r16, 0x81	; 129
     8c6:	0d d6       	rcall	.+3098   	; 0x14e2 <twi_addr_write_ack+0x4>
     8c8:	78 e2       	ldi	r23, 0x28	; 40
     8ca:	1c 9b       	sbis	0x03, 4	; 3
     8cc:	b2 64       	ori	r27, 0x42	; 66
     8ce:	50 e2       	ldi	r21, 0x20	; 32
     8d0:	9d 00       	.word	0x009d	; ????
     8d2:	e9 0d       	add	r30, r9
     8d4:	d6 f8       	bld	r13, 6
     8d6:	c2 1c       	adc	r12, r2
     8d8:	9b b2       	in	r9, 0x1b	; 27
     8da:	64 50       	subi	r22, 0x04	; 4
     8dc:	e2 9d       	mul	r30, r2
     8de:	00 ea       	ldi	r16, 0xA0	; 160
     8e0:	0d d6       	rcall	.+3098   	; 0x14fc <twi_addr_write_ack+0x1e>
     8e2:	b8 c2       	rjmp	.+1392   	; 0xe54 <gpio_set_pin_direction+0xac>
     8e4:	24 87       	std	Z+12, r18	; 0x0c
     8e6:	a6 2c       	mov	r10, r6
     8e8:	19 94       	eijmp
     8ea:	78 27       	eor	r23, r24
     8ec:	eb 0d       	add	r30, r11
     8ee:	d6 f8       	bld	r13, 6
     8f0:	93 1c       	adc	r9, r3
     8f2:	9a b2       	in	r9, 0x1a	; 26
     8f4:	64 50       	subi	r22, 0x04	; 4
     8f6:	e2 9d       	mul	r30, r2
     8f8:	00 ec       	ldi	r16, 0xC0	; 192
     8fa:	0a d6       	rcall	.+3092   	; 0x1510 <twi_addr_write_ack+0x32>
     8fc:	78 e2       	ldi	r23, 0x28	; 40
     8fe:	1c 53       	subi	r17, 0x3C	; 60
     900:	1b 77       	andi	r17, 0x7B	; 123
     902:	02 ed       	ldi	r16, 0xD2	; 210
     904:	0a d6       	rcall	.+3092   	; 0x151a <twi_addr_write_ack+0x3c>
     906:	b8 c2       	rjmp	.+1392   	; 0xe78 <gpio_set_pin_direction+0xd0>
     908:	1c 54       	subi	r17, 0x4C	; 76
     90a:	1b 77       	andi	r17, 0x7B	; 123
     90c:	02 ee       	ldi	r16, 0xE2	; 226
     90e:	0b d6       	rcall	.+3094   	; 0x1526 <twi_data_write_ack+0x2>
     910:	b8 c2       	rjmp	.+1392   	; 0xe82 <gpio_set_pin_direction+0xda>
     912:	24 87       	std	Z+12, r18	; 0x0c
     914:	d4 c6       	rjmp	.+3496   	; 0x16be <twi_read+0x8e>
     916:	9d 00       	.word	0x009d	; ????
     918:	ef 0a       	sbc	r14, r31
     91a:	d6 f8       	bld	r13, 6
     91c:	93 1c       	adc	r9, r3
     91e:	52 1b       	sub	r21, r18
     920:	77 02       	muls	r23, r23
     922:	f0 0c       	add	r15, r0
     924:	d6 b8       	out	0x06, r13	; 6
     926:	6d 53       	subi	r22, 0x3D	; 61
     928:	96 64       	ori	r25, 0x46	; 70
     92a:	49 16       	cp	r4, r25
     92c:	ed 04       	cpc	r14, r13
     92e:	f1 11       	cpse	r31, r1
     930:	d6 b8       	out	0x06, r13	; 6
     932:	92 28       	or	r9, r2
     934:	c9 91       	ld	r28, Y+	; undefined
     936:	44 92       	xch	Z, r4
     938:	92 2c       	mov	r9, r2
     93a:	c9 92       	st	Y+, r12
     93c:	2c 87       	std	Y+12, r18	; 0x0c
     93e:	01 f2       	breq	.-128    	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     940:	0d d6       	rcall	.+3098   	; 0x155c <twi_data_write_ack+0x38>
     942:	78 e2       	ldi	r23, 0x28	; 40
     944:	1c 9b       	sbis	0x03, 4	; 3
     946:	b2 24       	eor	r11, r2
     948:	4b b2       	in	r4, 0x1b	; 27
     94a:	68 27       	eor	r22, r24
     94c:	f3 0d       	add	r31, r3
     94e:	d6 f8       	bld	r13, 6
     950:	c2 1c       	adc	r12, r2
     952:	9b b2       	in	r9, 0x1b	; 27
     954:	24 4b       	sbci	r18, 0xB4	; 180
     956:	b2 68       	ori	r27, 0x82	; 130
     958:	27 f4       	brid	.+8      	; 0x962 <__stack+0x63>
     95a:	0e d6       	rcall	.+3100   	; 0x1578 <twi_addr_read_ack+0xe>
     95c:	b8 c2       	rjmp	.+1392   	; 0xece <rtc_int_enable+0x2>
     95e:	24 87       	std	Z+12, r18	; 0x0c
     960:	a6 2c       	mov	r10, r6
     962:	c9 92       	st	Y+, r12
     964:	2c da       	rcall	.-2984   	; 0xfffffdbe <__eeprom_end+0xff7efdbe>
     966:	09 f5       	brne	.+66     	; 0x9aa <__stack+0xab>
     968:	0f d6       	rcall	.+3102   	; 0x1588 <twi_addr_read_ack+0x1e>
     96a:	b8 92       	.word	0x92b8	; ????
     96c:	28 c9       	rjmp	.-3504   	; 0xfffffbbe <__eeprom_end+0xff7efbbe>
     96e:	a1 29       	or	r26, r1
     970:	4b b2       	in	r4, 0x1b	; 27
     972:	24 8b       	std	Z+20, r18	; 0x14
     974:	76 02       	muls	r23, r22
     976:	f6 0d       	add	r31, r6
     978:	d6 f8       	bld	r13, 6
     97a:	93 1c       	adc	r9, r3
     97c:	9a b2       	in	r9, 0x1a	; 26
     97e:	24 4b       	sbci	r18, 0xB4	; 180
     980:	b2 68       	ori	r27, 0x82	; 130
     982:	27 f7       	brid	.-56     	; 0x94c <__stack+0x4d>
     984:	0a d6       	rcall	.+3092   	; 0x159a <twi_addr_read_ack+0x30>
     986:	f8 f1       	brcs	.+126    	; 0xa06 <__stack+0x107>
     988:	1c 1a       	sub	r1, r28
     98a:	74 28       	or	r7, r4
     98c:	67 f8       	bld	r6, 7
     98e:	0d d6       	rcall	.+3098   	; 0x15aa <twi_addr_read_ack+0x40>
     990:	f8 a9       	ldd	r31, Y+48	; 0x30
     992:	43 12       	cpse	r4, r19
     994:	29 2d       	mov	r18, r9
     996:	52 32       	cpi	r21, 0x22	; 34
     998:	e4 04       	cpc	r14, r4
     99a:	f9 0f       	add	r31, r25
     99c:	d6 78       	andi	r29, 0x86	; 134
     99e:	e2 1c       	adc	r14, r2
     9a0:	ca 92       	st	-Y, r12
     9a2:	2c c9       	rjmp	.-3496   	; 0xfffffbfc <__eeprom_end+0xff7efbfc>
     9a4:	92 c8       	rjmp	.-3804   	; 0xfffffaca <__eeprom_end+0xff7efaca>
     9a6:	92 c3       	rjmp	.+1828   	; 0x10cc <convert_to_timestamp+0xc2>
     9a8:	00 fa       	bst	r0, 0
     9aa:	0f d6       	rcall	.+3102   	; 0x15ca <twi_data_read_ack+0x1a>
     9ac:	f8 c2       	rjmp	.+1520   	; 0xf9e <rtc_sync+0x6a>
     9ae:	1c ca       	rjmp	.-3016   	; 0xfffffde8 <__eeprom_end+0xff7efde8>
     9b0:	92 2c       	mov	r9, r2
     9b2:	c9 92       	st	Y+, r12
     9b4:	c8 92       	.word	0x92c8	; ????
     9b6:	c3 00       	.word	0x00c3	; ????
     9b8:	fb 10       	cpse	r15, r11
     9ba:	d6 b8       	out	0x06, r13	; 6
     9bc:	c2 24       	eor	r12, r2
     9be:	47 b2       	in	r4, 0x17	; 23
     9c0:	24 4b       	sbci	r18, 0xB4	; 180
     9c2:	b2 24       	eor	r11, r2
     9c4:	b2 e4       	ldi	r27, 0x42	; 66
     9c6:	30 00       	.word	0x0030	; ????
     9c8:	fc 0f       	add	r31, r28
     9ca:	d6 f8       	bld	r13, 6
     9cc:	93 1c       	adc	r9, r3
     9ce:	c9 92       	st	Y+, r12
     9d0:	2c c9       	rjmp	.-3496   	; 0xfffffc2a <__eeprom_end+0xff7efc2a>
     9d2:	92 c8       	rjmp	.-3804   	; 0xfffffaf8 <__eeprom_end+0xff7efaf8>
     9d4:	92 c3       	rjmp	.+1828   	; 0x10fa <convert_to_timestamp+0xf0>
     9d6:	00 fd       	sbrc	r16, 0
     9d8:	0f d6       	rcall	.+3102   	; 0x15f8 <twi_data_read_ack+0x48>
     9da:	f8 a1       	ldd	r31, Y+32	; 0x20
     9dc:	30 ab       	std	Z+48, r19	; 0x30
     9de:	64 49       	sbci	r22, 0x94	; 148
     9e0:	64 49       	sbci	r22, 0x94	; 148
     9e2:	93 2c       	mov	r9, r3
     9e4:	9a 00       	.word	0x009a	; ????
     9e6:	fe 0f       	add	r31, r30
     9e8:	d6 f8       	bld	r13, 6
     9ea:	d1 74       	andi	r29, 0x41	; 65
     9ec:	88 b2       	in	r8, 0x18	; 24
     9ee:	24 4b       	sbci	r18, 0xB4	; 180
     9f0:	b2 64       	ori	r27, 0x42	; 66
     9f2:	88 d2       	rcall	.+1296   	; 0xf04 <rtc_int_enable+0x38>
     9f4:	14 ff       	sbrs	r17, 4
     9f6:	10 d6       	rcall	.+3104   	; 0x1618 <twi_data_read_ack+0x68>
     9f8:	f8 93       	.word	0x93f8	; ????
     9fa:	1c c9       	rjmp	.-3528   	; 0xfffffc34 <__eeprom_end+0xff7efc34>
     9fc:	92 2c       	mov	r9, r2
     9fe:	89 2c       	mov	r8, r9
     a00:	69 92       	st	Y+, r6
     a02:	45 13       	cpse	r20, r21
     a04:	00 00       	nop
     a06:	00 00       	nop
     a08:	04 ff       	sbrs	r16, 4
     a0a:	ff 00       	.word	0x00ff	; ????
	...

00000a0e <__ctors_end>:
     a0e:	11 24       	eor	r1, r1
     a10:	1f be       	out	0x3f, r1	; 63
     a12:	cf ef       	ldi	r28, 0xFF	; 255
     a14:	d8 e0       	ldi	r29, 0x08	; 8
     a16:	de bf       	out	0x3e, r29	; 62
     a18:	cd bf       	out	0x3d, r28	; 61

00000a1a <__do_copy_data>:
     a1a:	12 e0       	ldi	r17, 0x02	; 2
     a1c:	a0 e0       	ldi	r26, 0x00	; 0
     a1e:	b1 e0       	ldi	r27, 0x01	; 1
     a20:	ee ef       	ldi	r30, 0xFE	; 254
     a22:	f3 e5       	ldi	r31, 0x53	; 83
     a24:	02 c0       	rjmp	.+4      	; 0xa2a <__do_copy_data+0x10>
     a26:	05 90       	lpm	r0, Z+
     a28:	0d 92       	st	X+, r0
     a2a:	a4 39       	cpi	r26, 0x94	; 148
     a2c:	b1 07       	cpc	r27, r17
     a2e:	d9 f7       	brne	.-10     	; 0xa26 <__do_copy_data+0xc>

00000a30 <__do_clear_bss>:
     a30:	27 e0       	ldi	r18, 0x07	; 7
     a32:	a4 e9       	ldi	r26, 0x94	; 148
     a34:	b2 e0       	ldi	r27, 0x02	; 2
     a36:	01 c0       	rjmp	.+2      	; 0xa3a <.do_clear_bss_start>

00000a38 <.do_clear_bss_loop>:
     a38:	1d 92       	st	X+, r1

00000a3a <.do_clear_bss_start>:
     a3a:	a8 3d       	cpi	r26, 0xD8	; 216
     a3c:	b2 07       	cpc	r27, r18
     a3e:	e1 f7       	brne	.-8      	; 0xa38 <.do_clear_bss_loop>
     a40:	0e 94 92 0d 	call	0x1b24	; 0x1b24 <main>
     a44:	0c 94 fd 29 	jmp	0x53fa	; 0x53fa <_exit>

00000a48 <__bad_interrupt>:
     a48:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a4c <__vector_21>:

uint16_t get_adc(uint8_t source){
	adc_pin_select(source);
	//uint16_t adc_tmp_data = adc_convert();
	return adc_convert();
}
     a4c:	1f 92       	push	r1
     a4e:	0f 92       	push	r0
     a50:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     a54:	0f 92       	push	r0
     a56:	11 24       	eor	r1, r1
     a58:	8f 93       	push	r24
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	cd b7       	in	r28, 0x3d	; 61
     a60:	de b7       	in	r29, 0x3e	; 62
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     a68:	00 00       	nop
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	8f 91       	pop	r24
     a70:	0f 90       	pop	r0
     a72:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     a76:	0f 90       	pop	r0
     a78:	1f 90       	pop	r1
     a7a:	18 95       	reti

00000a7c <adc_init>:
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	cd b7       	in	r28, 0x3d	; 61
     a82:	de b7       	in	r29, 0x3e	; 62
     a84:	8c e7       	ldi	r24, 0x7C	; 124
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	2c e7       	ldi	r18, 0x7C	; 124
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	f9 01       	movw	r30, r18
     a8e:	20 81       	ld	r18, Z
     a90:	20 6c       	ori	r18, 0xC0	; 192
     a92:	fc 01       	movw	r30, r24
     a94:	20 83       	st	Z, r18
     a96:	8a e7       	ldi	r24, 0x7A	; 122
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	2a e7       	ldi	r18, 0x7A	; 122
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	f9 01       	movw	r30, r18
     aa0:	20 81       	ld	r18, Z
     aa2:	2f 68       	ori	r18, 0x8F	; 143
     aa4:	fc 01       	movw	r30, r24
     aa6:	20 83       	st	Z, r18
     aa8:	00 00       	nop
     aaa:	df 91       	pop	r29
     aac:	cf 91       	pop	r28
     aae:	08 95       	ret

00000ab0 <adc_pin_select>:
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
     ab4:	1f 92       	push	r1
     ab6:	cd b7       	in	r28, 0x3d	; 61
     ab8:	de b7       	in	r29, 0x3e	; 62
     aba:	89 83       	std	Y+1, r24	; 0x01
     abc:	8c e7       	ldi	r24, 0x7C	; 124
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	2c e7       	ldi	r18, 0x7C	; 124
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	f9 01       	movw	r30, r18
     ac6:	20 81       	ld	r18, Z
     ac8:	20 7f       	andi	r18, 0xF0	; 240
     aca:	fc 01       	movw	r30, r24
     acc:	20 83       	st	Z, r18
     ace:	8c e7       	ldi	r24, 0x7C	; 124
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	2c e7       	ldi	r18, 0x7C	; 124
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	f9 01       	movw	r30, r18
     ad8:	30 81       	ld	r19, Z
     ada:	29 81       	ldd	r18, Y+1	; 0x01
     adc:	23 2b       	or	r18, r19
     ade:	fc 01       	movw	r30, r24
     ae0:	20 83       	st	Z, r18
     ae2:	00 00       	nop
     ae4:	0f 90       	pop	r0
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <adc_convert>:
     aec:	cf 93       	push	r28
     aee:	df 93       	push	r29
     af0:	00 d0       	rcall	.+0      	; 0xaf2 <adc_convert+0x6>
     af2:	cd b7       	in	r28, 0x3d	; 61
     af4:	de b7       	in	r29, 0x3e	; 62
     af6:	8a e7       	ldi	r24, 0x7A	; 122
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	2a e7       	ldi	r18, 0x7A	; 122
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	f9 01       	movw	r30, r18
     b00:	20 81       	ld	r18, Z
     b02:	20 68       	ori	r18, 0x80	; 128
     b04:	fc 01       	movw	r30, r24
     b06:	20 83       	st	Z, r18
     b08:	19 82       	std	Y+1, r1	; 0x01
     b0a:	1a 82       	std	Y+2, r1	; 0x02
     b0c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     b10:	8a e7       	ldi	r24, 0x7A	; 122
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	2a e7       	ldi	r18, 0x7A	; 122
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	f9 01       	movw	r30, r18
     b1a:	20 81       	ld	r18, Z
     b1c:	20 64       	ori	r18, 0x40	; 64
     b1e:	fc 01       	movw	r30, r24
     b20:	20 83       	st	Z, r18
     b22:	00 00       	nop
     b24:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b28:	88 23       	and	r24, r24
     b2a:	e1 f3       	breq	.-8      	; 0xb24 <adc_convert+0x38>
     b2c:	88 e7       	ldi	r24, 0x78	; 120
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	fc 01       	movw	r30, r24
     b32:	80 81       	ld	r24, Z
     b34:	89 83       	std	Y+1, r24	; 0x01
     b36:	89 e7       	ldi	r24, 0x79	; 121
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	fc 01       	movw	r30, r24
     b3c:	80 81       	ld	r24, Z
     b3e:	8a 83       	std	Y+2, r24	; 0x02
     b40:	8a e7       	ldi	r24, 0x7A	; 122
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	2a e7       	ldi	r18, 0x7A	; 122
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	f9 01       	movw	r30, r18
     b4a:	20 81       	ld	r18, Z
     b4c:	2f 77       	andi	r18, 0x7F	; 127
     b4e:	fc 01       	movw	r30, r24
     b50:	20 83       	st	Z, r18
     b52:	8a 81       	ldd	r24, Y+2	; 0x02
     b54:	88 2f       	mov	r24, r24
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	38 2f       	mov	r19, r24
     b5a:	22 27       	eor	r18, r18
     b5c:	89 81       	ldd	r24, Y+1	; 0x01
     b5e:	88 2f       	mov	r24, r24
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	82 2b       	or	r24, r18
     b64:	93 2b       	or	r25, r19
     b66:	0f 90       	pop	r0
     b68:	0f 90       	pop	r0
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	08 95       	ret

00000b70 <get_mVolt>:

uint16_t get_mVolt(uint8_t source){
     b70:	cf 93       	push	r28
     b72:	df 93       	push	r29
     b74:	1f 92       	push	r1
     b76:	cd b7       	in	r28, 0x3d	; 61
     b78:	de b7       	in	r29, 0x3e	; 62
     b7a:	89 83       	std	Y+1, r24	; 0x01
	adc_pin_select(source);
     b7c:	89 81       	ldd	r24, Y+1	; 0x01
     b7e:	0e 94 58 05 	call	0xab0	; 0xab0 <adc_pin_select>
	//uint16_t adc_tmp_data = adc_convert();
	return ADC_VOLT(adc_convert());
     b82:	0e 94 76 05 	call	0xaec	; 0xaec <adc_convert>
     b86:	cc 01       	movw	r24, r24
     b88:	a0 e0       	ldi	r26, 0x00	; 0
     b8a:	b0 e0       	ldi	r27, 0x00	; 0
     b8c:	bc 01       	movw	r22, r24
     b8e:	cd 01       	movw	r24, r26
     b90:	0e 94 74 25 	call	0x4ae8	; 0x4ae8 <__floatunsisf>
     b94:	dc 01       	movw	r26, r24
     b96:	cb 01       	movw	r24, r22
     b98:	2d ec       	ldi	r18, 0xCD	; 205
     b9a:	3e e1       	ldi	r19, 0x1E	; 30
     b9c:	48 e9       	ldi	r20, 0x98	; 152
     b9e:	5f e3       	ldi	r21, 0x3F	; 63
     ba0:	bc 01       	movw	r22, r24
     ba2:	cd 01       	movw	r24, r26
     ba4:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__mulsf3>
     ba8:	dc 01       	movw	r26, r24
     baa:	cb 01       	movw	r24, r22
     bac:	bc 01       	movw	r22, r24
     bae:	cd 01       	movw	r24, r26
     bb0:	0e 94 45 25 	call	0x4a8a	; 0x4a8a <__fixunssfsi>
     bb4:	dc 01       	movw	r26, r24
     bb6:	cb 01       	movw	r24, r22
}
     bb8:	0f 90       	pop	r0
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	08 95       	ret

00000bc0 <lcd_hw_spi>:
void cmd_pin_handle(bool value){
	gpio_set_pin_level(&lcd_cmd_pin, value);
}
void rst_pin_handle(bool value){
	gpio_set_pin_level(&lcd_rst_pin, value);
}
     bc0:	cf 93       	push	r28
     bc2:	df 93       	push	r29
     bc4:	00 d0       	rcall	.+0      	; 0xbc6 <lcd_hw_spi+0x6>
     bc6:	00 d0       	rcall	.+0      	; 0xbc8 <lcd_hw_spi+0x8>
     bc8:	00 d0       	rcall	.+0      	; 0xbca <lcd_hw_spi+0xa>
     bca:	cd b7       	in	r28, 0x3d	; 61
     bcc:	de b7       	in	r29, 0x3e	; 62
     bce:	9a 83       	std	Y+2, r25	; 0x02
     bd0:	89 83       	std	Y+1, r24	; 0x01
     bd2:	6b 83       	std	Y+3, r22	; 0x03
     bd4:	4c 83       	std	Y+4, r20	; 0x04
     bd6:	3e 83       	std	Y+6, r19	; 0x06
     bd8:	2d 83       	std	Y+5, r18	; 0x05
     bda:	8b 81       	ldd	r24, Y+3	; 0x03
     bdc:	88 2f       	mov	r24, r24
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	88 31       	cpi	r24, 0x18	; 24
     be2:	91 05       	cpc	r25, r1
     be4:	01 f1       	breq	.+64     	; 0xc26 <lcd_hw_spi+0x66>
     be6:	89 31       	cpi	r24, 0x19	; 25
     be8:	91 05       	cpc	r25, r1
     bea:	34 f4       	brge	.+12     	; 0xbf8 <lcd_hw_spi+0x38>
     bec:	84 31       	cpi	r24, 0x14	; 20
     bee:	91 05       	cpc	r25, r1
     bf0:	21 f1       	breq	.+72     	; 0xc3a <lcd_hw_spi+0x7a>
     bf2:	47 97       	sbiw	r24, 0x17	; 23
     bf4:	39 f0       	breq	.+14     	; 0xc04 <lcd_hw_spi+0x44>
     bf6:	1f c0       	rjmp	.+62     	; 0xc36 <lcd_hw_spi+0x76>
     bf8:	89 31       	cpi	r24, 0x19	; 25
     bfa:	91 05       	cpc	r25, r1
     bfc:	c1 f0       	breq	.+48     	; 0xc2e <lcd_hw_spi+0x6e>
     bfe:	80 97       	sbiw	r24, 0x20	; 32
     c00:	51 f0       	breq	.+20     	; 0xc16 <lcd_hw_spi+0x56>
     c02:	19 c0       	rjmp	.+50     	; 0xc36 <lcd_hw_spi+0x76>
     c04:	8c 81       	ldd	r24, Y+4	; 0x04
     c06:	28 2f       	mov	r18, r24
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	8d 81       	ldd	r24, Y+5	; 0x05
     c0c:	9e 81       	ldd	r25, Y+6	; 0x06
     c0e:	b9 01       	movw	r22, r18
     c10:	0e 94 b2 09 	call	0x1364	; 0x1364 <spi1_tranfer>
     c14:	13 c0       	rjmp	.+38     	; 0xc3c <lcd_hw_spi+0x7c>
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	9c 81       	ldd	r25, Y+4	; 0x04
     c1a:	99 23       	and	r25, r25
     c1c:	09 f4       	brne	.+2      	; 0xc20 <lcd_hw_spi+0x60>
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	0e 94 4e 06 	call	0xc9c	; 0xc9c <cmd_pin_handle>
     c24:	0b c0       	rjmp	.+22     	; 0xc3c <lcd_hw_spi+0x7c>
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	0e 94 5e 06 	call	0xcbc	; 0xcbc <cs_pin_handle>
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <lcd_hw_spi+0x7c>
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	0e 94 5e 06 	call	0xcbc	; 0xcbc <cs_pin_handle>
     c34:	03 c0       	rjmp	.+6      	; 0xc3c <lcd_hw_spi+0x7c>
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <lcd_hw_spi+0x7e>
     c3a:	00 00       	nop
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	26 96       	adiw	r28, 0x06	; 6
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	cd bf       	out	0x3d, r28	; 61
     c4a:	df 91       	pop	r29
     c4c:	cf 91       	pop	r28
     c4e:	08 95       	ret

00000c50 <lcd_gpio_init>:
     c50:	cf 93       	push	r28
     c52:	df 93       	push	r29
     c54:	cd b7       	in	r28, 0x3d	; 61
     c56:	de b7       	in	r29, 0x3e	; 62
     c58:	61 e0       	ldi	r22, 0x01	; 1
     c5a:	87 e0       	ldi	r24, 0x07	; 7
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
     c62:	61 e0       	ldi	r22, 0x01	; 1
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	91 e0       	ldi	r25, 0x01	; 1
     c68:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	84 e0       	ldi	r24, 0x04	; 4
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
     c76:	61 e0       	ldi	r22, 0x01	; 1
     c78:	87 e0       	ldi	r24, 0x07	; 7
     c7a:	91 e0       	ldi	r25, 0x01	; 1
     c7c:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
     c80:	61 e0       	ldi	r22, 0x01	; 1
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	91 e0       	ldi	r25, 0x01	; 1
     c86:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
     c8a:	61 e0       	ldi	r22, 0x01	; 1
     c8c:	84 e0       	ldi	r24, 0x04	; 4
     c8e:	91 e0       	ldi	r25, 0x01	; 1
     c90:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
     c94:	00 00       	nop
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	08 95       	ret

00000c9c <cmd_pin_handle>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	1f 92       	push	r1
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	89 83       	std	Y+1, r24	; 0x01
     ca8:	69 81       	ldd	r22, Y+1	; 0x01
     caa:	84 e0       	ldi	r24, 0x04	; 4
     cac:	91 e0       	ldi	r25, 0x01	; 1
     cae:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
     cb2:	00 00       	nop
     cb4:	0f 90       	pop	r0
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	08 95       	ret

00000cbc <cs_pin_handle>:
void cs_pin_handle(bool value){
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	1f 92       	push	r1
     cc2:	cd b7       	in	r28, 0x3d	; 61
     cc4:	de b7       	in	r29, 0x3e	; 62
     cc6:	89 83       	std	Y+1, r24	; 0x01
	gpio_set_pin_level(&lcd_cs_pin, value);
     cc8:	69 81       	ldd	r22, Y+1	; 0x01
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	91 e0       	ldi	r25, 0x01	; 1
     cce:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
}
     cd2:	00 00       	nop
     cd4:	0f 90       	pop	r0
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	08 95       	ret

00000cdc <fake_delay_fn>:

uint8_t fake_delay_fn(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr){
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	00 d0       	rcall	.+0      	; 0xce2 <fake_delay_fn+0x6>
     ce2:	00 d0       	rcall	.+0      	; 0xce4 <fake_delay_fn+0x8>
     ce4:	00 d0       	rcall	.+0      	; 0xce6 <fake_delay_fn+0xa>
     ce6:	cd b7       	in	r28, 0x3d	; 61
     ce8:	de b7       	in	r29, 0x3e	; 62
     cea:	9a 83       	std	Y+2, r25	; 0x02
     cec:	89 83       	std	Y+1, r24	; 0x01
     cee:	6b 83       	std	Y+3, r22	; 0x03
     cf0:	4c 83       	std	Y+4, r20	; 0x04
     cf2:	3e 83       	std	Y+6, r19	; 0x06
     cf4:	2d 83       	std	Y+5, r18	; 0x05
	return 0;
     cf6:	80 e0       	ldi	r24, 0x00	; 0
}
     cf8:	26 96       	adiw	r28, 0x06	; 6
     cfa:	0f b6       	in	r0, 0x3f	; 63
     cfc:	f8 94       	cli
     cfe:	de bf       	out	0x3e, r29	; 62
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	cd bf       	out	0x3d, r28	; 61
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	08 95       	ret

00000d0a <gpio_set_pin_level>:

*/


void gpio_set_pin_level(gpio *GPIOx , const bool level)
{
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	00 d0       	rcall	.+0      	; 0xd10 <gpio_set_pin_level+0x6>
     d10:	1f 92       	push	r1
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	9a 83       	std	Y+2, r25	; 0x02
     d18:	89 83       	std	Y+1, r24	; 0x01
     d1a:	6b 83       	std	Y+3, r22	; 0x03
	if (level) {
     d1c:	8b 81       	ldd	r24, Y+3	; 0x03
     d1e:	88 23       	and	r24, r24
     d20:	f1 f0       	breq	.+60     	; 0xd5e <gpio_set_pin_level+0x54>
		*GPIOx->port |= 1 << GPIOx->pin;
     d22:	89 81       	ldd	r24, Y+1	; 0x01
     d24:	9a 81       	ldd	r25, Y+2	; 0x02
     d26:	fc 01       	movw	r30, r24
     d28:	80 81       	ld	r24, Z
     d2a:	91 81       	ldd	r25, Z+1	; 0x01
     d2c:	29 81       	ldd	r18, Y+1	; 0x01
     d2e:	3a 81       	ldd	r19, Y+2	; 0x02
     d30:	f9 01       	movw	r30, r18
     d32:	20 81       	ld	r18, Z
     d34:	31 81       	ldd	r19, Z+1	; 0x01
     d36:	f9 01       	movw	r30, r18
     d38:	20 81       	ld	r18, Z
     d3a:	62 2f       	mov	r22, r18
     d3c:	29 81       	ldd	r18, Y+1	; 0x01
     d3e:	3a 81       	ldd	r19, Y+2	; 0x02
     d40:	f9 01       	movw	r30, r18
     d42:	22 81       	ldd	r18, Z+2	; 0x02
     d44:	42 2f       	mov	r20, r18
     d46:	50 e0       	ldi	r21, 0x00	; 0
     d48:	21 e0       	ldi	r18, 0x01	; 1
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <gpio_set_pin_level+0x48>
     d4e:	22 0f       	add	r18, r18
     d50:	33 1f       	adc	r19, r19
     d52:	4a 95       	dec	r20
     d54:	e2 f7       	brpl	.-8      	; 0xd4e <gpio_set_pin_level+0x44>
     d56:	26 2b       	or	r18, r22
     d58:	fc 01       	movw	r30, r24
     d5a:	20 83       	st	Z, r18
		} else {
		*GPIOx->port &= ~(1 << GPIOx->pin);
	}
}
     d5c:	1e c0       	rjmp	.+60     	; 0xd9a <gpio_set_pin_level+0x90>
void gpio_set_pin_level(gpio *GPIOx , const bool level)
{
	if (level) {
		*GPIOx->port |= 1 << GPIOx->pin;
		} else {
		*GPIOx->port &= ~(1 << GPIOx->pin);
     d5e:	89 81       	ldd	r24, Y+1	; 0x01
     d60:	9a 81       	ldd	r25, Y+2	; 0x02
     d62:	fc 01       	movw	r30, r24
     d64:	80 81       	ld	r24, Z
     d66:	91 81       	ldd	r25, Z+1	; 0x01
     d68:	29 81       	ldd	r18, Y+1	; 0x01
     d6a:	3a 81       	ldd	r19, Y+2	; 0x02
     d6c:	f9 01       	movw	r30, r18
     d6e:	20 81       	ld	r18, Z
     d70:	31 81       	ldd	r19, Z+1	; 0x01
     d72:	f9 01       	movw	r30, r18
     d74:	20 81       	ld	r18, Z
     d76:	62 2f       	mov	r22, r18
     d78:	29 81       	ldd	r18, Y+1	; 0x01
     d7a:	3a 81       	ldd	r19, Y+2	; 0x02
     d7c:	f9 01       	movw	r30, r18
     d7e:	22 81       	ldd	r18, Z+2	; 0x02
     d80:	42 2f       	mov	r20, r18
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	21 e0       	ldi	r18, 0x01	; 1
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <gpio_set_pin_level+0x84>
     d8a:	22 0f       	add	r18, r18
     d8c:	33 1f       	adc	r19, r19
     d8e:	4a 95       	dec	r20
     d90:	e2 f7       	brpl	.-8      	; 0xd8a <gpio_set_pin_level+0x80>
     d92:	20 95       	com	r18
     d94:	26 23       	and	r18, r22
     d96:	fc 01       	movw	r30, r24
     d98:	20 83       	st	Z, r18
	}
}
     d9a:	00 00       	nop
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	df 91       	pop	r29
     da4:	cf 91       	pop	r28
     da6:	08 95       	ret

00000da8 <gpio_set_pin_direction>:

void gpio_set_pin_direction(gpio *GPIOx, const enum port_dir direction)
{
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	00 d0       	rcall	.+0      	; 0xdae <gpio_set_pin_direction+0x6>
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <gpio_set_pin_direction+0x8>
     db0:	1f 92       	push	r1
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	9c 83       	std	Y+4, r25	; 0x04
     db8:	8b 83       	std	Y+3, r24	; 0x03
     dba:	6d 83       	std	Y+5, r22	; 0x05
	uint8_t *tmp_port = GPIOx->port-1;
     dbc:	8b 81       	ldd	r24, Y+3	; 0x03
     dbe:	9c 81       	ldd	r25, Y+4	; 0x04
     dc0:	fc 01       	movw	r30, r24
     dc2:	80 81       	ld	r24, Z
     dc4:	91 81       	ldd	r25, Z+1	; 0x01
     dc6:	01 97       	sbiw	r24, 0x01	; 1
     dc8:	9a 83       	std	Y+2, r25	; 0x02
     dca:	89 83       	std	Y+1, r24	; 0x01
	switch (direction) {
     dcc:	8d 81       	ldd	r24, Y+5	; 0x05
     dce:	88 2f       	mov	r24, r24
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	81 30       	cpi	r24, 0x01	; 1
     dd4:	91 05       	cpc	r25, r1
     dd6:	01 f1       	breq	.+64     	; 0xe18 <gpio_set_pin_direction+0x70>
     dd8:	82 30       	cpi	r24, 0x02	; 2
     dda:	91 05       	cpc	r25, r1
     ddc:	b1 f1       	breq	.+108    	; 0xe4a <gpio_set_pin_direction+0xa2>
     dde:	89 2b       	or	r24, r25
     de0:	09 f0       	breq	.+2      	; 0xde4 <gpio_set_pin_direction+0x3c>
		case PORT_DIR_OFF:
		*tmp_port &= ~(1 << GPIOx->pin);
		*GPIOx->port &= ~(1 << GPIOx->pin);
		break;
		default:
		break;
     de2:	6b c0       	rjmp	.+214    	; 0xeba <gpio_set_pin_direction+0x112>
void gpio_set_pin_direction(gpio *GPIOx, const enum port_dir direction)
{
	uint8_t *tmp_port = GPIOx->port-1;
	switch (direction) {
		case PORT_DIR_IN:
		*tmp_port &= ~(1 << GPIOx->pin);
     de4:	89 81       	ldd	r24, Y+1	; 0x01
     de6:	9a 81       	ldd	r25, Y+2	; 0x02
     de8:	fc 01       	movw	r30, r24
     dea:	80 81       	ld	r24, Z
     dec:	48 2f       	mov	r20, r24
     dee:	8b 81       	ldd	r24, Y+3	; 0x03
     df0:	9c 81       	ldd	r25, Y+4	; 0x04
     df2:	fc 01       	movw	r30, r24
     df4:	82 81       	ldd	r24, Z+2	; 0x02
     df6:	28 2f       	mov	r18, r24
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <gpio_set_pin_direction+0x5c>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	2a 95       	dec	r18
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <gpio_set_pin_direction+0x58>
     e08:	80 95       	com	r24
     e0a:	84 23       	and	r24, r20
     e0c:	28 2f       	mov	r18, r24
     e0e:	89 81       	ldd	r24, Y+1	; 0x01
     e10:	9a 81       	ldd	r25, Y+2	; 0x02
     e12:	fc 01       	movw	r30, r24
     e14:	20 83       	st	Z, r18
		break;
     e16:	51 c0       	rjmp	.+162    	; 0xeba <gpio_set_pin_direction+0x112>
		case PORT_DIR_OUT:
		*tmp_port |= 1 << GPIOx->pin;
     e18:	89 81       	ldd	r24, Y+1	; 0x01
     e1a:	9a 81       	ldd	r25, Y+2	; 0x02
     e1c:	fc 01       	movw	r30, r24
     e1e:	80 81       	ld	r24, Z
     e20:	48 2f       	mov	r20, r24
     e22:	8b 81       	ldd	r24, Y+3	; 0x03
     e24:	9c 81       	ldd	r25, Y+4	; 0x04
     e26:	fc 01       	movw	r30, r24
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	28 2f       	mov	r18, r24
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	02 c0       	rjmp	.+4      	; 0xe38 <gpio_set_pin_direction+0x90>
     e34:	88 0f       	add	r24, r24
     e36:	99 1f       	adc	r25, r25
     e38:	2a 95       	dec	r18
     e3a:	e2 f7       	brpl	.-8      	; 0xe34 <gpio_set_pin_direction+0x8c>
     e3c:	84 2b       	or	r24, r20
     e3e:	28 2f       	mov	r18, r24
     e40:	89 81       	ldd	r24, Y+1	; 0x01
     e42:	9a 81       	ldd	r25, Y+2	; 0x02
     e44:	fc 01       	movw	r30, r24
     e46:	20 83       	st	Z, r18
		break;
     e48:	38 c0       	rjmp	.+112    	; 0xeba <gpio_set_pin_direction+0x112>
		case PORT_DIR_OFF:
		*tmp_port &= ~(1 << GPIOx->pin);
     e4a:	89 81       	ldd	r24, Y+1	; 0x01
     e4c:	9a 81       	ldd	r25, Y+2	; 0x02
     e4e:	fc 01       	movw	r30, r24
     e50:	80 81       	ld	r24, Z
     e52:	48 2f       	mov	r20, r24
     e54:	8b 81       	ldd	r24, Y+3	; 0x03
     e56:	9c 81       	ldd	r25, Y+4	; 0x04
     e58:	fc 01       	movw	r30, r24
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	28 2f       	mov	r18, r24
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	02 c0       	rjmp	.+4      	; 0xe6a <gpio_set_pin_direction+0xc2>
     e66:	88 0f       	add	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	2a 95       	dec	r18
     e6c:	e2 f7       	brpl	.-8      	; 0xe66 <gpio_set_pin_direction+0xbe>
     e6e:	80 95       	com	r24
     e70:	84 23       	and	r24, r20
     e72:	28 2f       	mov	r18, r24
     e74:	89 81       	ldd	r24, Y+1	; 0x01
     e76:	9a 81       	ldd	r25, Y+2	; 0x02
     e78:	fc 01       	movw	r30, r24
     e7a:	20 83       	st	Z, r18
		*GPIOx->port &= ~(1 << GPIOx->pin);
     e7c:	8b 81       	ldd	r24, Y+3	; 0x03
     e7e:	9c 81       	ldd	r25, Y+4	; 0x04
     e80:	fc 01       	movw	r30, r24
     e82:	80 81       	ld	r24, Z
     e84:	91 81       	ldd	r25, Z+1	; 0x01
     e86:	2b 81       	ldd	r18, Y+3	; 0x03
     e88:	3c 81       	ldd	r19, Y+4	; 0x04
     e8a:	f9 01       	movw	r30, r18
     e8c:	20 81       	ld	r18, Z
     e8e:	31 81       	ldd	r19, Z+1	; 0x01
     e90:	f9 01       	movw	r30, r18
     e92:	20 81       	ld	r18, Z
     e94:	62 2f       	mov	r22, r18
     e96:	2b 81       	ldd	r18, Y+3	; 0x03
     e98:	3c 81       	ldd	r19, Y+4	; 0x04
     e9a:	f9 01       	movw	r30, r18
     e9c:	22 81       	ldd	r18, Z+2	; 0x02
     e9e:	42 2f       	mov	r20, r18
     ea0:	50 e0       	ldi	r21, 0x00	; 0
     ea2:	21 e0       	ldi	r18, 0x01	; 1
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <gpio_set_pin_direction+0x104>
     ea8:	22 0f       	add	r18, r18
     eaa:	33 1f       	adc	r19, r19
     eac:	4a 95       	dec	r20
     eae:	e2 f7       	brpl	.-8      	; 0xea8 <gpio_set_pin_direction+0x100>
     eb0:	20 95       	com	r18
     eb2:	26 23       	and	r18, r22
     eb4:	fc 01       	movw	r30, r24
     eb6:	20 83       	st	Z, r18
		break;
     eb8:	00 00       	nop
		default:
		break;
	}
}
     eba:	00 00       	nop
     ebc:	0f 90       	pop	r0
     ebe:	0f 90       	pop	r0
     ec0:	0f 90       	pop	r0
     ec2:	0f 90       	pop	r0
     ec4:	0f 90       	pop	r0
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	08 95       	ret

00000ecc <rtc_int_enable>:

// BCDtoDEC -- convert decimal to binary-coded decimal (BCD)
uint8_t DECtoBCD(uint8_t val)
{
	return ((val / 10) * 0x10) + (val % 10);
}
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	00 d0       	rcall	.+0      	; 0xed2 <rtc_int_enable+0x6>
     ed2:	00 d0       	rcall	.+0      	; 0xed4 <rtc_int_enable+0x8>
     ed4:	cd b7       	in	r28, 0x3d	; 61
     ed6:	de b7       	in	r29, 0x3e	; 62
     ed8:	9a 83       	std	Y+2, r25	; 0x02
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	7c 83       	std	Y+4, r23	; 0x04
     ede:	6b 83       	std	Y+3, r22	; 0x03
     ee0:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <rtc_config_3>
     ee4:	80 61       	ori	r24, 0x10	; 16
     ee6:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <rtc_config_3>
     eea:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
     eee:	81 61       	ori	r24, 0x11	; 17
     ef0:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <__data_end>
     ef4:	22 e0       	ldi	r18, 0x02	; 2
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	4a e0       	ldi	r20, 0x0A	; 10
     efa:	51 e0       	ldi	r21, 0x01	; 1
     efc:	6b e0       	ldi	r22, 0x0B	; 11
     efe:	82 e3       	ldi	r24, 0x32	; 50
     f00:	0e 94 be 0b 	call	0x177c	; 0x177c <twi_write>
     f04:	21 e0       	ldi	r18, 0x01	; 1
     f06:	30 e0       	ldi	r19, 0x00	; 0
     f08:	44 e9       	ldi	r20, 0x94	; 148
     f0a:	52 e0       	ldi	r21, 0x02	; 2
     f0c:	6d e0       	ldi	r22, 0x0D	; 13
     f0e:	82 e3       	ldi	r24, 0x32	; 50
     f10:	0e 94 be 0b 	call	0x177c	; 0x177c <twi_write>
     f14:	21 e0       	ldi	r18, 0x01	; 1
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	45 e9       	ldi	r20, 0x95	; 149
     f1a:	52 e0       	ldi	r21, 0x02	; 2
     f1c:	6f e0       	ldi	r22, 0x0F	; 15
     f1e:	82 e3       	ldi	r24, 0x32	; 50
     f20:	0e 94 be 0b 	call	0x177c	; 0x177c <twi_write>
     f24:	00 00       	nop
     f26:	0f 90       	pop	r0
     f28:	0f 90       	pop	r0
     f2a:	0f 90       	pop	r0
     f2c:	0f 90       	pop	r0
     f2e:	df 91       	pop	r29
     f30:	cf 91       	pop	r28
     f32:	08 95       	ret

00000f34 <rtc_sync>:
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	cd b7       	in	r28, 0x3d	; 61
     f3a:	de b7       	in	r29, 0x3e	; 62
     f3c:	29 97       	sbiw	r28, 0x09	; 9
     f3e:	0f b6       	in	r0, 0x3f	; 63
     f40:	f8 94       	cli
     f42:	de bf       	out	0x3e, r29	; 62
     f44:	0f be       	out	0x3f, r0	; 63
     f46:	cd bf       	out	0x3d, r28	; 61
     f48:	99 87       	std	Y+9, r25	; 0x09
     f4a:	88 87       	std	Y+8, r24	; 0x08
     f4c:	27 e0       	ldi	r18, 0x07	; 7
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	ce 01       	movw	r24, r28
     f52:	01 96       	adiw	r24, 0x01	; 1
     f54:	ac 01       	movw	r20, r24
     f56:	60 e0       	ldi	r22, 0x00	; 0
     f58:	82 e3       	ldi	r24, 0x32	; 50
     f5a:	0e 94 18 0b 	call	0x1630	; 0x1630 <twi_read>
     f5e:	89 81       	ldd	r24, Y+1	; 0x01
     f60:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     f64:	28 2f       	mov	r18, r24
     f66:	88 85       	ldd	r24, Y+8	; 0x08
     f68:	99 85       	ldd	r25, Y+9	; 0x09
     f6a:	fc 01       	movw	r30, r24
     f6c:	20 83       	st	Z, r18
     f6e:	8a 81       	ldd	r24, Y+2	; 0x02
     f70:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     f74:	28 2f       	mov	r18, r24
     f76:	88 85       	ldd	r24, Y+8	; 0x08
     f78:	99 85       	ldd	r25, Y+9	; 0x09
     f7a:	fc 01       	movw	r30, r24
     f7c:	21 83       	std	Z+1, r18	; 0x01
     f7e:	8b 81       	ldd	r24, Y+3	; 0x03
     f80:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     f84:	28 2f       	mov	r18, r24
     f86:	88 85       	ldd	r24, Y+8	; 0x08
     f88:	99 85       	ldd	r25, Y+9	; 0x09
     f8a:	fc 01       	movw	r30, r24
     f8c:	22 83       	std	Z+2, r18	; 0x02
     f8e:	2c 81       	ldd	r18, Y+4	; 0x04
     f90:	88 85       	ldd	r24, Y+8	; 0x08
     f92:	99 85       	ldd	r25, Y+9	; 0x09
     f94:	fc 01       	movw	r30, r24
     f96:	27 83       	std	Z+7, r18	; 0x07
     f98:	8d 81       	ldd	r24, Y+5	; 0x05
     f9a:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     f9e:	28 2f       	mov	r18, r24
     fa0:	88 85       	ldd	r24, Y+8	; 0x08
     fa2:	99 85       	ldd	r25, Y+9	; 0x09
     fa4:	fc 01       	movw	r30, r24
     fa6:	23 83       	std	Z+3, r18	; 0x03
     fa8:	8e 81       	ldd	r24, Y+6	; 0x06
     faa:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     fae:	28 2f       	mov	r18, r24
     fb0:	88 85       	ldd	r24, Y+8	; 0x08
     fb2:	99 85       	ldd	r25, Y+9	; 0x09
     fb4:	fc 01       	movw	r30, r24
     fb6:	24 83       	std	Z+4, r18	; 0x04
     fb8:	8f 81       	ldd	r24, Y+7	; 0x07
     fba:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <BCDtoDEC>
     fbe:	28 2f       	mov	r18, r24
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	88 85       	ldd	r24, Y+8	; 0x08
     fc4:	99 85       	ldd	r25, Y+9	; 0x09
     fc6:	fc 01       	movw	r30, r24
     fc8:	36 83       	std	Z+6, r19	; 0x06
     fca:	25 83       	std	Z+5, r18	; 0x05
     fcc:	00 00       	nop
     fce:	29 96       	adiw	r28, 0x09	; 9
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	de bf       	out	0x3e, r29	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	df 91       	pop	r29
     fdc:	cf 91       	pop	r28
     fde:	08 95       	ret

00000fe0 <BCDtoDEC>:
     fe0:	cf 93       	push	r28
     fe2:	df 93       	push	r29
     fe4:	1f 92       	push	r1
     fe6:	cd b7       	in	r28, 0x3d	; 61
     fe8:	de b7       	in	r29, 0x3e	; 62
     fea:	89 83       	std	Y+1, r24	; 0x01
     fec:	89 81       	ldd	r24, Y+1	; 0x01
     fee:	82 95       	swap	r24
     ff0:	8f 70       	andi	r24, 0x0F	; 15
     ff2:	88 0f       	add	r24, r24
     ff4:	98 2f       	mov	r25, r24
     ff6:	99 0f       	add	r25, r25
     ff8:	99 0f       	add	r25, r25
     ffa:	98 0f       	add	r25, r24
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	8f 70       	andi	r24, 0x0F	; 15
    1000:	89 0f       	add	r24, r25
    1002:	0f 90       	pop	r0
    1004:	df 91       	pop	r29
    1006:	cf 91       	pop	r28
    1008:	08 95       	ret

0000100a <convert_to_timestamp>:

uint32_t convert_to_timestamp(const rtc_date *date) {
    100a:	cf 93       	push	r28
    100c:	df 93       	push	r29
    100e:	cd b7       	in	r28, 0x3d	; 61
    1010:	de b7       	in	r29, 0x3e	; 62
    1012:	6a 97       	sbiw	r28, 0x1a	; 26
    1014:	0f b6       	in	r0, 0x3f	; 63
    1016:	f8 94       	cli
    1018:	de bf       	out	0x3e, r29	; 62
    101a:	0f be       	out	0x3f, r0	; 63
    101c:	cd bf       	out	0x3d, r28	; 61
    101e:	9a 8f       	std	Y+26, r25	; 0x1a
    1020:	89 8f       	std	Y+25, r24	; 0x19
	uint8_t year = date->year;
    1022:	89 8d       	ldd	r24, Y+25	; 0x19
    1024:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1026:	fc 01       	movw	r30, r24
    1028:	85 81       	ldd	r24, Z+5	; 0x05
    102a:	96 81       	ldd	r25, Z+6	; 0x06
    102c:	8f 83       	std	Y+7, r24	; 0x07
	uint8_t month = date->month;
    102e:	89 8d       	ldd	r24, Y+25	; 0x19
    1030:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1032:	fc 01       	movw	r30, r24
    1034:	84 81       	ldd	r24, Z+4	; 0x04
    1036:	88 87       	std	Y+8, r24	; 0x08
	uint8_t day = date->date;
    1038:	89 8d       	ldd	r24, Y+25	; 0x19
    103a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    103c:	fc 01       	movw	r30, r24
    103e:	83 81       	ldd	r24, Z+3	; 0x03
    1040:	89 87       	std	Y+9, r24	; 0x09
	uint8_t hour = date->hour;
    1042:	89 8d       	ldd	r24, Y+25	; 0x19
    1044:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1046:	fc 01       	movw	r30, r24
    1048:	82 81       	ldd	r24, Z+2	; 0x02
    104a:	8a 87       	std	Y+10, r24	; 0x0a
	uint8_t minute = date->minute;
    104c:	89 8d       	ldd	r24, Y+25	; 0x19
    104e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1050:	fc 01       	movw	r30, r24
    1052:	81 81       	ldd	r24, Z+1	; 0x01
    1054:	8b 87       	std	Y+11, r24	; 0x0b
	uint8_t second = date->second;
    1056:	89 8d       	ldd	r24, Y+25	; 0x19
    1058:	9a 8d       	ldd	r25, Y+26	; 0x1a
    105a:	fc 01       	movw	r30, r24
    105c:	80 81       	ld	r24, Z
    105e:	8c 87       	std	Y+12, r24	; 0x0c

	uint8_t days_in_month[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    1060:	8c e0       	ldi	r24, 0x0C	; 12
    1062:	e6 e5       	ldi	r30, 0x56	; 86
    1064:	f1 e0       	ldi	r31, 0x01	; 1
    1066:	de 01       	movw	r26, r28
    1068:	1d 96       	adiw	r26, 0x0d	; 13
    106a:	01 90       	ld	r0, Z+
    106c:	0d 92       	st	X+, r0
    106e:	8a 95       	dec	r24
    1070:	e1 f7       	brne	.-8      	; 0x106a <convert_to_timestamp+0x60>
	if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
    1072:	8f 81       	ldd	r24, Y+7	; 0x07
    1074:	83 70       	andi	r24, 0x03	; 3
    1076:	88 23       	and	r24, r24
    1078:	81 f4       	brne	.+32     	; 0x109a <convert_to_timestamp+0x90>
    107a:	9f 81       	ldd	r25, Y+7	; 0x07
    107c:	89 e2       	ldi	r24, 0x29	; 41
    107e:	98 9f       	mul	r25, r24
    1080:	81 2d       	mov	r24, r1
    1082:	11 24       	eor	r1, r1
    1084:	82 95       	swap	r24
    1086:	8f 70       	andi	r24, 0x0F	; 15
    1088:	24 e6       	ldi	r18, 0x64	; 100
    108a:	82 9f       	mul	r24, r18
    108c:	80 2d       	mov	r24, r0
    108e:	11 24       	eor	r1, r1
    1090:	f9 2f       	mov	r31, r25
    1092:	f8 1b       	sub	r31, r24
    1094:	8f 2f       	mov	r24, r31
    1096:	88 23       	and	r24, r24
    1098:	51 f4       	brne	.+20     	; 0x10ae <convert_to_timestamp+0xa4>
    109a:	8f 81       	ldd	r24, Y+7	; 0x07
    109c:	88 2f       	mov	r24, r24
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	20 e9       	ldi	r18, 0x90	; 144
    10a2:	31 e0       	ldi	r19, 0x01	; 1
    10a4:	b9 01       	movw	r22, r18
    10a6:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <__divmodhi4>
    10aa:	89 2b       	or	r24, r25
    10ac:	11 f4       	brne	.+4      	; 0x10b2 <convert_to_timestamp+0xa8>
		days_in_month[1] = 29;
    10ae:	8d e1       	ldi	r24, 0x1D	; 29
    10b0:	8e 87       	std	Y+14, r24	; 0x0e
	}

	uint32_t timestamp = 0;
    10b2:	19 82       	std	Y+1, r1	; 0x01
    10b4:	1a 82       	std	Y+2, r1	; 0x02
    10b6:	1b 82       	std	Y+3, r1	; 0x03
    10b8:	1c 82       	std	Y+4, r1	; 0x04
	timestamp += second;
    10ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    10bc:	88 2f       	mov	r24, r24
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	a0 e0       	ldi	r26, 0x00	; 0
    10c2:	b0 e0       	ldi	r27, 0x00	; 0
    10c4:	29 81       	ldd	r18, Y+1	; 0x01
    10c6:	3a 81       	ldd	r19, Y+2	; 0x02
    10c8:	4b 81       	ldd	r20, Y+3	; 0x03
    10ca:	5c 81       	ldd	r21, Y+4	; 0x04
    10cc:	82 0f       	add	r24, r18
    10ce:	93 1f       	adc	r25, r19
    10d0:	a4 1f       	adc	r26, r20
    10d2:	b5 1f       	adc	r27, r21
    10d4:	89 83       	std	Y+1, r24	; 0x01
    10d6:	9a 83       	std	Y+2, r25	; 0x02
    10d8:	ab 83       	std	Y+3, r26	; 0x03
    10da:	bc 83       	std	Y+4, r27	; 0x04
	timestamp += minute * 60;
    10dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    10de:	28 2f       	mov	r18, r24
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	4c e3       	ldi	r20, 0x3C	; 60
    10e4:	42 9f       	mul	r20, r18
    10e6:	c0 01       	movw	r24, r0
    10e8:	43 9f       	mul	r20, r19
    10ea:	90 0d       	add	r25, r0
    10ec:	11 24       	eor	r1, r1
    10ee:	09 2e       	mov	r0, r25
    10f0:	00 0c       	add	r0, r0
    10f2:	aa 0b       	sbc	r26, r26
    10f4:	bb 0b       	sbc	r27, r27
    10f6:	29 81       	ldd	r18, Y+1	; 0x01
    10f8:	3a 81       	ldd	r19, Y+2	; 0x02
    10fa:	4b 81       	ldd	r20, Y+3	; 0x03
    10fc:	5c 81       	ldd	r21, Y+4	; 0x04
    10fe:	82 0f       	add	r24, r18
    1100:	93 1f       	adc	r25, r19
    1102:	a4 1f       	adc	r26, r20
    1104:	b5 1f       	adc	r27, r21
    1106:	89 83       	std	Y+1, r24	; 0x01
    1108:	9a 83       	std	Y+2, r25	; 0x02
    110a:	ab 83       	std	Y+3, r26	; 0x03
    110c:	bc 83       	std	Y+4, r27	; 0x04
	timestamp += hour * 3600;
    110e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1110:	48 2f       	mov	r20, r24
    1112:	50 e0       	ldi	r21, 0x00	; 0
    1114:	20 e1       	ldi	r18, 0x10	; 16
    1116:	3e e0       	ldi	r19, 0x0E	; 14
    1118:	42 9f       	mul	r20, r18
    111a:	c0 01       	movw	r24, r0
    111c:	43 9f       	mul	r20, r19
    111e:	90 0d       	add	r25, r0
    1120:	52 9f       	mul	r21, r18
    1122:	90 0d       	add	r25, r0
    1124:	11 24       	eor	r1, r1
    1126:	09 2e       	mov	r0, r25
    1128:	00 0c       	add	r0, r0
    112a:	aa 0b       	sbc	r26, r26
    112c:	bb 0b       	sbc	r27, r27
    112e:	29 81       	ldd	r18, Y+1	; 0x01
    1130:	3a 81       	ldd	r19, Y+2	; 0x02
    1132:	4b 81       	ldd	r20, Y+3	; 0x03
    1134:	5c 81       	ldd	r21, Y+4	; 0x04
    1136:	82 0f       	add	r24, r18
    1138:	93 1f       	adc	r25, r19
    113a:	a4 1f       	adc	r26, r20
    113c:	b5 1f       	adc	r27, r21
    113e:	89 83       	std	Y+1, r24	; 0x01
    1140:	9a 83       	std	Y+2, r25	; 0x02
    1142:	ab 83       	std	Y+3, r26	; 0x03
    1144:	bc 83       	std	Y+4, r27	; 0x04
	for (uint8_t i = 0; i < month - 1; i++) {
    1146:	1d 82       	std	Y+5, r1	; 0x05
    1148:	29 c0       	rjmp	.+82     	; 0x119c <convert_to_timestamp+0x192>
		timestamp += days_in_month[i] * 86400;
    114a:	8d 81       	ldd	r24, Y+5	; 0x05
    114c:	88 2f       	mov	r24, r24
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	9e 01       	movw	r18, r28
    1152:	23 5f       	subi	r18, 0xF3	; 243
    1154:	3f 4f       	sbci	r19, 0xFF	; 255
    1156:	82 0f       	add	r24, r18
    1158:	93 1f       	adc	r25, r19
    115a:	fc 01       	movw	r30, r24
    115c:	80 81       	ld	r24, Z
    115e:	88 2f       	mov	r24, r24
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	a0 e0       	ldi	r26, 0x00	; 0
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	9c 01       	movw	r18, r24
    1168:	ad 01       	movw	r20, r26
    116a:	60 e8       	ldi	r22, 0x80	; 128
    116c:	71 e5       	ldi	r23, 0x51	; 81
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	0e 94 98 26 	call	0x4d30	; 0x4d30 <__mulsi3>
    1176:	dc 01       	movw	r26, r24
    1178:	cb 01       	movw	r24, r22
    117a:	9c 01       	movw	r18, r24
    117c:	ad 01       	movw	r20, r26
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	9a 81       	ldd	r25, Y+2	; 0x02
    1182:	ab 81       	ldd	r26, Y+3	; 0x03
    1184:	bc 81       	ldd	r27, Y+4	; 0x04
    1186:	82 0f       	add	r24, r18
    1188:	93 1f       	adc	r25, r19
    118a:	a4 1f       	adc	r26, r20
    118c:	b5 1f       	adc	r27, r21
    118e:	89 83       	std	Y+1, r24	; 0x01
    1190:	9a 83       	std	Y+2, r25	; 0x02
    1192:	ab 83       	std	Y+3, r26	; 0x03
    1194:	bc 83       	std	Y+4, r27	; 0x04

	uint32_t timestamp = 0;
	timestamp += second;
	timestamp += minute * 60;
	timestamp += hour * 3600;
	for (uint8_t i = 0; i < month - 1; i++) {
    1196:	8d 81       	ldd	r24, Y+5	; 0x05
    1198:	8f 5f       	subi	r24, 0xFF	; 255
    119a:	8d 83       	std	Y+5, r24	; 0x05
    119c:	8d 81       	ldd	r24, Y+5	; 0x05
    119e:	28 2f       	mov	r18, r24
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	88 85       	ldd	r24, Y+8	; 0x08
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	28 17       	cp	r18, r24
    11ac:	39 07       	cpc	r19, r25
    11ae:	6c f2       	brlt	.-102    	; 0x114a <convert_to_timestamp+0x140>
		timestamp += days_in_month[i] * 86400;
	}

	for (uint8_t i = 0; i < year; i++) {
    11b0:	1e 82       	std	Y+6, r1	; 0x06
    11b2:	39 c0       	rjmp	.+114    	; 0x1226 <convert_to_timestamp+0x21c>
		if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0)) {
    11b4:	8e 81       	ldd	r24, Y+6	; 0x06
    11b6:	83 70       	andi	r24, 0x03	; 3
    11b8:	88 23       	and	r24, r24
    11ba:	81 f4       	brne	.+32     	; 0x11dc <convert_to_timestamp+0x1d2>
    11bc:	9e 81       	ldd	r25, Y+6	; 0x06
    11be:	89 e2       	ldi	r24, 0x29	; 41
    11c0:	98 9f       	mul	r25, r24
    11c2:	81 2d       	mov	r24, r1
    11c4:	11 24       	eor	r1, r1
    11c6:	82 95       	swap	r24
    11c8:	8f 70       	andi	r24, 0x0F	; 15
    11ca:	24 e6       	ldi	r18, 0x64	; 100
    11cc:	82 9f       	mul	r24, r18
    11ce:	80 2d       	mov	r24, r0
    11d0:	11 24       	eor	r1, r1
    11d2:	f9 2f       	mov	r31, r25
    11d4:	f8 1b       	sub	r31, r24
    11d6:	8f 2f       	mov	r24, r31
    11d8:	88 23       	and	r24, r24
    11da:	51 f4       	brne	.+20     	; 0x11f0 <convert_to_timestamp+0x1e6>
    11dc:	8e 81       	ldd	r24, Y+6	; 0x06
    11de:	88 2f       	mov	r24, r24
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	20 e9       	ldi	r18, 0x90	; 144
    11e4:	31 e0       	ldi	r19, 0x01	; 1
    11e6:	b9 01       	movw	r22, r18
    11e8:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <__divmodhi4>
    11ec:	89 2b       	or	r24, r25
    11ee:	61 f4       	brne	.+24     	; 0x1208 <convert_to_timestamp+0x1fe>
			timestamp += 31622400; 
    11f0:	89 81       	ldd	r24, Y+1	; 0x01
    11f2:	9a 81       	ldd	r25, Y+2	; 0x02
    11f4:	ab 81       	ldd	r26, Y+3	; 0x03
    11f6:	bc 81       	ldd	r27, Y+4	; 0x04
    11f8:	9b 57       	subi	r25, 0x7B	; 123
    11fa:	ad 41       	sbci	r26, 0x1D	; 29
    11fc:	be 4f       	sbci	r27, 0xFE	; 254
    11fe:	89 83       	std	Y+1, r24	; 0x01
    1200:	9a 83       	std	Y+2, r25	; 0x02
    1202:	ab 83       	std	Y+3, r26	; 0x03
    1204:	bc 83       	std	Y+4, r27	; 0x04
    1206:	0c c0       	rjmp	.+24     	; 0x1220 <convert_to_timestamp+0x216>
			} else {
			timestamp += 31536000; 
    1208:	89 81       	ldd	r24, Y+1	; 0x01
    120a:	9a 81       	ldd	r25, Y+2	; 0x02
    120c:	ab 81       	ldd	r26, Y+3	; 0x03
    120e:	bc 81       	ldd	r27, Y+4	; 0x04
    1210:	80 58       	subi	r24, 0x80	; 128
    1212:	9c 4c       	sbci	r25, 0xCC	; 204
    1214:	ae 41       	sbci	r26, 0x1E	; 30
    1216:	be 4f       	sbci	r27, 0xFE	; 254
    1218:	89 83       	std	Y+1, r24	; 0x01
    121a:	9a 83       	std	Y+2, r25	; 0x02
    121c:	ab 83       	std	Y+3, r26	; 0x03
    121e:	bc 83       	std	Y+4, r27	; 0x04
	timestamp += hour * 3600;
	for (uint8_t i = 0; i < month - 1; i++) {
		timestamp += days_in_month[i] * 86400;
	}

	for (uint8_t i = 0; i < year; i++) {
    1220:	8e 81       	ldd	r24, Y+6	; 0x06
    1222:	8f 5f       	subi	r24, 0xFF	; 255
    1224:	8e 83       	std	Y+6, r24	; 0x06
    1226:	9e 81       	ldd	r25, Y+6	; 0x06
    1228:	8f 81       	ldd	r24, Y+7	; 0x07
    122a:	98 17       	cp	r25, r24
    122c:	18 f2       	brcs	.-122    	; 0x11b4 <convert_to_timestamp+0x1aa>
			timestamp += 31622400; 
			} else {
			timestamp += 31536000; 
		}
	}
	timestamp += (day - 1) * 86400;
    122e:	89 85       	ldd	r24, Y+9	; 0x09
    1230:	88 2f       	mov	r24, r24
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	09 2e       	mov	r0, r25
    1238:	00 0c       	add	r0, r0
    123a:	aa 0b       	sbc	r26, r26
    123c:	bb 0b       	sbc	r27, r27
    123e:	9c 01       	movw	r18, r24
    1240:	ad 01       	movw	r20, r26
    1242:	60 e8       	ldi	r22, 0x80	; 128
    1244:	71 e5       	ldi	r23, 0x51	; 81
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 98 26 	call	0x4d30	; 0x4d30 <__mulsi3>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	9c 01       	movw	r18, r24
    1254:	ad 01       	movw	r20, r26
    1256:	89 81       	ldd	r24, Y+1	; 0x01
    1258:	9a 81       	ldd	r25, Y+2	; 0x02
    125a:	ab 81       	ldd	r26, Y+3	; 0x03
    125c:	bc 81       	ldd	r27, Y+4	; 0x04
    125e:	82 0f       	add	r24, r18
    1260:	93 1f       	adc	r25, r19
    1262:	a4 1f       	adc	r26, r20
    1264:	b5 1f       	adc	r27, r21
    1266:	89 83       	std	Y+1, r24	; 0x01
    1268:	9a 83       	std	Y+2, r25	; 0x02
    126a:	ab 83       	std	Y+3, r26	; 0x03
    126c:	bc 83       	std	Y+4, r27	; 0x04

	return timestamp;
    126e:	89 81       	ldd	r24, Y+1	; 0x01
    1270:	9a 81       	ldd	r25, Y+2	; 0x02
    1272:	ab 81       	ldd	r26, Y+3	; 0x03
    1274:	bc 81       	ldd	r27, Y+4	; 0x04
    1276:	bc 01       	movw	r22, r24
    1278:	cd 01       	movw	r24, r26
    127a:	6a 96       	adiw	r28, 0x1a	; 26
    127c:	0f b6       	in	r0, 0x3f	; 63
    127e:	f8 94       	cli
    1280:	de bf       	out	0x3e, r29	; 62
    1282:	0f be       	out	0x3f, r0	; 63
    1284:	cd bf       	out	0x3d, r28	; 61
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	08 95       	ret

0000128c <__vector_39>:
		result <<=1;
		result += gpio_get_pin_level(&spi_rx_pin);
		gpio_set_pin_level(&spi_clk_pin, false);
	}
	return result;
}
    128c:	1f 92       	push	r1
    128e:	0f 92       	push	r0
    1290:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1294:	0f 92       	push	r0
    1296:	11 24       	eor	r1, r1
    1298:	8f 93       	push	r24
    129a:	9f 93       	push	r25
    129c:	ef 93       	push	r30
    129e:	ff 93       	push	r31
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	8d ea       	ldi	r24, 0xAD	; 173
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	fc 01       	movw	r30, r24
    12ae:	80 81       	ld	r24, Z
    12b0:	88 2f       	mov	r24, r24
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	80 74       	andi	r24, 0x40	; 64
    12b6:	99 27       	eor	r25, r25
    12b8:	89 2b       	or	r24, r25
    12ba:	21 f0       	breq	.+8      	; 0x12c4 <__vector_39+0x38>
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <spi_txrx_done>
    12c2:	03 c0       	rjmp	.+6      	; 0x12ca <__vector_39+0x3e>
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <spi_txrx_done>
    12ca:	00 00       	nop
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	ff 91       	pop	r31
    12d2:	ef 91       	pop	r30
    12d4:	9f 91       	pop	r25
    12d6:	8f 91       	pop	r24
    12d8:	0f 90       	pop	r0
    12da:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    12de:	0f 90       	pop	r0
    12e0:	1f 90       	pop	r1
    12e2:	18 95       	reti

000012e4 <spi1_init>:
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	61 e0       	ldi	r22, 0x01	; 1
    12ee:	8c e0       	ldi	r24, 0x0C	; 12
    12f0:	91 e0       	ldi	r25, 0x01	; 1
    12f2:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    12f6:	61 e0       	ldi	r22, 0x01	; 1
    12f8:	8c e0       	ldi	r24, 0x0C	; 12
    12fa:	91 e0       	ldi	r25, 0x01	; 1
    12fc:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
    1300:	61 e0       	ldi	r22, 0x01	; 1
    1302:	82 e1       	ldi	r24, 0x12	; 18
    1304:	91 e0       	ldi	r25, 0x01	; 1
    1306:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    130a:	61 e0       	ldi	r22, 0x01	; 1
    130c:	82 e1       	ldi	r24, 0x12	; 18
    130e:	91 e0       	ldi	r25, 0x01	; 1
    1310:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
    1314:	61 e0       	ldi	r22, 0x01	; 1
    1316:	8f e0       	ldi	r24, 0x0F	; 15
    1318:	91 e0       	ldi	r25, 0x01	; 1
    131a:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	8f e0       	ldi	r24, 0x0F	; 15
    1322:	91 e0       	ldi	r25, 0x01	; 1
    1324:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
    1328:	8c ea       	ldi	r24, 0xAC	; 172
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	2c ea       	ldi	r18, 0xAC	; 172
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	f9 01       	movw	r30, r18
    1332:	20 81       	ld	r18, Z
    1334:	20 6d       	ori	r18, 0xD0	; 208
    1336:	fc 01       	movw	r30, r24
    1338:	20 83       	st	Z, r18
    133a:	8c ea       	ldi	r24, 0xAC	; 172
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	2c ea       	ldi	r18, 0xAC	; 172
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	f9 01       	movw	r30, r18
    1344:	20 81       	ld	r18, Z
    1346:	fc 01       	movw	r30, r24
    1348:	20 83       	st	Z, r18
    134a:	8d ea       	ldi	r24, 0xAD	; 173
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	2d ea       	ldi	r18, 0xAD	; 173
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	f9 01       	movw	r30, r18
    1354:	20 81       	ld	r18, Z
    1356:	21 60       	ori	r18, 0x01	; 1
    1358:	fc 01       	movw	r30, r24
    135a:	20 83       	st	Z, r18
    135c:	00 00       	nop
    135e:	df 91       	pop	r29
    1360:	cf 91       	pop	r28
    1362:	08 95       	ret

00001364 <spi1_tranfer>:

void spi1_tranfer(uint8_t *tx,uint16_t len){
    1364:	cf 93       	push	r28
    1366:	df 93       	push	r29
    1368:	00 d0       	rcall	.+0      	; 0x136a <spi1_tranfer+0x6>
    136a:	00 d0       	rcall	.+0      	; 0x136c <spi1_tranfer+0x8>
    136c:	00 d0       	rcall	.+0      	; 0x136e <spi1_tranfer+0xa>
    136e:	cd b7       	in	r28, 0x3d	; 61
    1370:	de b7       	in	r29, 0x3e	; 62
    1372:	9c 83       	std	Y+4, r25	; 0x04
    1374:	8b 83       	std	Y+3, r24	; 0x03
    1376:	7e 83       	std	Y+6, r23	; 0x06
    1378:	6d 83       	std	Y+5, r22	; 0x05
	for(uint16_t i=0; i < len;i++){
    137a:	1a 82       	std	Y+2, r1	; 0x02
    137c:	19 82       	std	Y+1, r1	; 0x01
    137e:	0d c0       	rjmp	.+26     	; 0x139a <spi1_tranfer+0x36>
		spi1_send(&tx[i]);
    1380:	2b 81       	ldd	r18, Y+3	; 0x03
    1382:	3c 81       	ldd	r19, Y+4	; 0x04
    1384:	89 81       	ldd	r24, Y+1	; 0x01
    1386:	9a 81       	ldd	r25, Y+2	; 0x02
    1388:	82 0f       	add	r24, r18
    138a:	93 1f       	adc	r25, r19
    138c:	0e 94 de 09 	call	0x13bc	; 0x13bc <spi1_send>
	}
	return result;
}

void spi1_tranfer(uint8_t *tx,uint16_t len){
	for(uint16_t i=0; i < len;i++){
    1390:	89 81       	ldd	r24, Y+1	; 0x01
    1392:	9a 81       	ldd	r25, Y+2	; 0x02
    1394:	01 96       	adiw	r24, 0x01	; 1
    1396:	9a 83       	std	Y+2, r25	; 0x02
    1398:	89 83       	std	Y+1, r24	; 0x01
    139a:	29 81       	ldd	r18, Y+1	; 0x01
    139c:	3a 81       	ldd	r19, Y+2	; 0x02
    139e:	8d 81       	ldd	r24, Y+5	; 0x05
    13a0:	9e 81       	ldd	r25, Y+6	; 0x06
    13a2:	28 17       	cp	r18, r24
    13a4:	39 07       	cpc	r19, r25
    13a6:	60 f3       	brcs	.-40     	; 0x1380 <spi1_tranfer+0x1c>
		spi1_send(&tx[i]);
	}
}
    13a8:	00 00       	nop
    13aa:	26 96       	adiw	r28, 0x06	; 6
    13ac:	0f b6       	in	r0, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	de bf       	out	0x3e, r29	; 62
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	cd bf       	out	0x3d, r28	; 61
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	08 95       	ret

000013bc <spi1_send>:

void spi1_send(uint8_t *tx){
    13bc:	cf 93       	push	r28
    13be:	df 93       	push	r29
    13c0:	00 d0       	rcall	.+0      	; 0x13c2 <spi1_send+0x6>
    13c2:	cd b7       	in	r28, 0x3d	; 61
    13c4:	de b7       	in	r29, 0x3e	; 62
    13c6:	9a 83       	std	Y+2, r25	; 0x02
    13c8:	89 83       	std	Y+1, r24	; 0x01
	spi_txrx_done = 0;
    13ca:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <spi_txrx_done>
	SPDR1 = *tx;
    13ce:	8e ea       	ldi	r24, 0xAE	; 174
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	29 81       	ldd	r18, Y+1	; 0x01
    13d4:	3a 81       	ldd	r19, Y+2	; 0x02
    13d6:	f9 01       	movw	r30, r18
    13d8:	20 81       	ld	r18, Z
    13da:	fc 01       	movw	r30, r24
    13dc:	20 83       	st	Z, r18
	while(spi_txrx_done == 0);
    13de:	00 00       	nop
    13e0:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <spi_txrx_done>
    13e4:	88 23       	and	r24, r24
    13e6:	e1 f3       	breq	.-8      	; 0x13e0 <spi1_send+0x24>
	
    13e8:	00 00       	nop
    13ea:	0f 90       	pop	r0
    13ec:	0f 90       	pop	r0
    13ee:	df 91       	pop	r29
    13f0:	cf 91       	pop	r28
    13f2:	08 95       	ret

000013f4 <__vector_40>:

#include "twi_hal1.h"

volatile uint8_t status = 0xF8;

ISR(TWI1_vect){
    13f4:	1f 92       	push	r1
    13f6:	0f 92       	push	r0
    13f8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    13fc:	0f 92       	push	r0
    13fe:	11 24       	eor	r1, r1
    1400:	8f 93       	push	r24
    1402:	9f 93       	push	r25
    1404:	ef 93       	push	r30
    1406:	ff 93       	push	r31
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	cd b7       	in	r28, 0x3d	; 61
    140e:	de b7       	in	r29, 0x3e	; 62
	status = (TWSR1 & 0xF8);
    1410:	89 ed       	ldi	r24, 0xD9	; 217
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	fc 01       	movw	r30, r24
    1416:	80 81       	ld	r24, Z
    1418:	88 7f       	andi	r24, 0xF8	; 248
    141a:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <status>
}
    141e:	00 00       	nop
    1420:	df 91       	pop	r29
    1422:	cf 91       	pop	r28
    1424:	ff 91       	pop	r31
    1426:	ef 91       	pop	r30
    1428:	9f 91       	pop	r25
    142a:	8f 91       	pop	r24
    142c:	0f 90       	pop	r0
    142e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1432:	0f 90       	pop	r0
    1434:	1f 90       	pop	r1
    1436:	18 95       	reti

00001438 <twi_start>:

static uint8_t twi_start(void){
    1438:	cf 93       	push	r28
    143a:	df 93       	push	r29
    143c:	00 d0       	rcall	.+0      	; 0x143e <twi_start+0x6>
    143e:	cd b7       	in	r28, 0x3d	; 61
    1440:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
    1442:	1a 82       	std	Y+2, r1	; 0x02
    1444:	19 82       	std	Y+1, r1	; 0x01
	TWCR1 = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN) | (1 << TWIE);
    1446:	8c ed       	ldi	r24, 0xDC	; 220
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	25 ea       	ldi	r18, 0xA5	; 165
    144c:	fc 01       	movw	r30, r24
    144e:	20 83       	st	Z, r18
	
	while(status != TWI_START){
    1450:	0c c0       	rjmp	.+24     	; 0x146a <twi_start+0x32>
		i++;
    1452:	89 81       	ldd	r24, Y+1	; 0x01
    1454:	9a 81       	ldd	r25, Y+2	; 0x02
    1456:	01 96       	adiw	r24, 0x01	; 1
    1458:	9a 83       	std	Y+2, r25	; 0x02
    145a:	89 83       	std	Y+1, r24	; 0x01
		if(i >= TWI_TIMEOUT){
    145c:	89 81       	ldd	r24, Y+1	; 0x01
    145e:	9a 81       	ldd	r25, Y+2	; 0x02
    1460:	80 34       	cpi	r24, 0x40	; 64
    1462:	96 40       	sbci	r25, 0x06	; 6
    1464:	10 f0       	brcs	.+4      	; 0x146a <twi_start+0x32>
			return TWI_ERROR_START;
    1466:	81 e0       	ldi	r24, 0x01	; 1
    1468:	05 c0       	rjmp	.+10     	; 0x1474 <twi_start+0x3c>

static uint8_t twi_start(void){
	uint16_t i = 0;
	TWCR1 = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN) | (1 << TWIE);
	
	while(status != TWI_START){
    146a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    146e:	88 30       	cpi	r24, 0x08	; 8
    1470:	81 f7       	brne	.-32     	; 0x1452 <twi_start+0x1a>
		i++;
		if(i >= TWI_TIMEOUT){
			return TWI_ERROR_START;
		}
	}
	return TWI_OK;
    1472:	80 e0       	ldi	r24, 0x00	; 0
}
    1474:	0f 90       	pop	r0
    1476:	0f 90       	pop	r0
    1478:	df 91       	pop	r29
    147a:	cf 91       	pop	r28
    147c:	08 95       	ret

0000147e <twi_stop>:

static void twi_stop(void){
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	cd b7       	in	r28, 0x3d	; 61
    1484:	de b7       	in	r29, 0x3e	; 62
	
	TWCR1 = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN) | (1 << TWIE);
    1486:	8c ed       	ldi	r24, 0xDC	; 220
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	25 e9       	ldi	r18, 0x95	; 149
    148c:	fc 01       	movw	r30, r24
    148e:	20 83       	st	Z, r18
}
    1490:	00 00       	nop
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	08 95       	ret

00001498 <twi_restart>:

static uint8_t twi_restart(void){
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	00 d0       	rcall	.+0      	; 0x149e <twi_restart+0x6>
    149e:	cd b7       	in	r28, 0x3d	; 61
    14a0:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
    14a2:	1a 82       	std	Y+2, r1	; 0x02
    14a4:	19 82       	std	Y+1, r1	; 0x01
	TWCR1 = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN) | (1 << TWIE);
    14a6:	8c ed       	ldi	r24, 0xDC	; 220
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	25 ea       	ldi	r18, 0xA5	; 165
    14ac:	fc 01       	movw	r30, r24
    14ae:	20 83       	st	Z, r18
	
	while(status != TWI_RSTART){
    14b0:	0c c0       	rjmp	.+24     	; 0x14ca <twi_restart+0x32>
		i++;
    14b2:	89 81       	ldd	r24, Y+1	; 0x01
    14b4:	9a 81       	ldd	r25, Y+2	; 0x02
    14b6:	01 96       	adiw	r24, 0x01	; 1
    14b8:	9a 83       	std	Y+2, r25	; 0x02
    14ba:	89 83       	std	Y+1, r24	; 0x01
		if(i >= TWI_TIMEOUT){
    14bc:	89 81       	ldd	r24, Y+1	; 0x01
    14be:	9a 81       	ldd	r25, Y+2	; 0x02
    14c0:	80 34       	cpi	r24, 0x40	; 64
    14c2:	96 40       	sbci	r25, 0x06	; 6
    14c4:	10 f0       	brcs	.+4      	; 0x14ca <twi_restart+0x32>
			return TWI_ERROR_START;
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	05 c0       	rjmp	.+10     	; 0x14d4 <twi_restart+0x3c>

static uint8_t twi_restart(void){
	uint16_t i = 0;
	TWCR1 = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN) | (1 << TWIE);
	
	while(status != TWI_RSTART){
    14ca:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    14ce:	80 31       	cpi	r24, 0x10	; 16
    14d0:	81 f7       	brne	.-32     	; 0x14b2 <twi_restart+0x1a>
		i++;
		if(i >= TWI_TIMEOUT){
			return TWI_ERROR_START;
		}
	}
	return TWI_OK;
    14d2:	80 e0       	ldi	r24, 0x00	; 0
}
    14d4:	0f 90       	pop	r0
    14d6:	0f 90       	pop	r0
    14d8:	df 91       	pop	r29
    14da:	cf 91       	pop	r28
    14dc:	08 95       	ret

000014de <twi_addr_write_ack>:

static uint8_t twi_addr_write_ack(void){
    14de:	cf 93       	push	r28
    14e0:	df 93       	push	r29
    14e2:	00 d0       	rcall	.+0      	; 0x14e4 <twi_addr_write_ack+0x6>
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
    14e8:	1a 82       	std	Y+2, r1	; 0x02
    14ea:	19 82       	std	Y+1, r1	; 0x01
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
    14ec:	8c ed       	ldi	r24, 0xDC	; 220
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	25 e8       	ldi	r18, 0x85	; 133
    14f2:	fc 01       	movw	r30, r24
    14f4:	20 83       	st	Z, r18
	while(status != TWIT_ADDR_ACK){
    14f6:	0c c0       	rjmp	.+24     	; 0x1510 <twi_addr_write_ack+0x32>
		i++;
    14f8:	89 81       	ldd	r24, Y+1	; 0x01
    14fa:	9a 81       	ldd	r25, Y+2	; 0x02
    14fc:	01 96       	adiw	r24, 0x01	; 1
    14fe:	9a 83       	std	Y+2, r25	; 0x02
    1500:	89 83       	std	Y+1, r24	; 0x01
		if(i >= TWI_TIMEOUT){
    1502:	89 81       	ldd	r24, Y+1	; 0x01
    1504:	9a 81       	ldd	r25, Y+2	; 0x02
    1506:	80 34       	cpi	r24, 0x40	; 64
    1508:	96 40       	sbci	r25, 0x06	; 6
    150a:	10 f0       	brcs	.+4      	; 0x1510 <twi_addr_write_ack+0x32>
			return TWI_ERROR_START;
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	05 c0       	rjmp	.+10     	; 0x151a <twi_addr_write_ack+0x3c>

static uint8_t twi_addr_write_ack(void){
	uint16_t i = 0;
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
	while(status != TWIT_ADDR_ACK){
    1510:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    1514:	88 31       	cpi	r24, 0x18	; 24
    1516:	81 f7       	brne	.-32     	; 0x14f8 <twi_addr_write_ack+0x1a>
		i++;
		if(i >= TWI_TIMEOUT){
			return TWI_ERROR_START;
		}
	}
	return TWI_OK;
    1518:	80 e0       	ldi	r24, 0x00	; 0
}
    151a:	0f 90       	pop	r0
    151c:	0f 90       	pop	r0
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	08 95       	ret

00001524 <twi_data_write_ack>:


static uint8_t twi_data_write_ack(void){
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
    1528:	00 d0       	rcall	.+0      	; 0x152a <twi_data_write_ack+0x6>
    152a:	cd b7       	in	r28, 0x3d	; 61
    152c:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
    152e:	1a 82       	std	Y+2, r1	; 0x02
    1530:	19 82       	std	Y+1, r1	; 0x01
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
    1532:	8c ed       	ldi	r24, 0xDC	; 220
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	25 e8       	ldi	r18, 0x85	; 133
    1538:	fc 01       	movw	r30, r24
    153a:	20 83       	st	Z, r18
	while(status != TWIT_DATA_ACK){
    153c:	0c c0       	rjmp	.+24     	; 0x1556 <twi_data_write_ack+0x32>
		i++;
    153e:	89 81       	ldd	r24, Y+1	; 0x01
    1540:	9a 81       	ldd	r25, Y+2	; 0x02
    1542:	01 96       	adiw	r24, 0x01	; 1
    1544:	9a 83       	std	Y+2, r25	; 0x02
    1546:	89 83       	std	Y+1, r24	; 0x01
		if(i >= TWI_TIMEOUT){
    1548:	89 81       	ldd	r24, Y+1	; 0x01
    154a:	9a 81       	ldd	r25, Y+2	; 0x02
    154c:	80 34       	cpi	r24, 0x40	; 64
    154e:	96 40       	sbci	r25, 0x06	; 6
    1550:	10 f0       	brcs	.+4      	; 0x1556 <twi_data_write_ack+0x32>
			return TWI_ERROR_START;
    1552:	81 e0       	ldi	r24, 0x01	; 1
    1554:	05 c0       	rjmp	.+10     	; 0x1560 <twi_data_write_ack+0x3c>

static uint8_t twi_data_write_ack(void){
	uint16_t i = 0;
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
	while(status != TWIT_DATA_ACK){
    1556:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    155a:	88 32       	cpi	r24, 0x28	; 40
    155c:	81 f7       	brne	.-32     	; 0x153e <twi_data_write_ack+0x1a>
		i++;
		if(i >= TWI_TIMEOUT){
			return TWI_ERROR_START;
		}
	}
	return TWI_OK;
    155e:	80 e0       	ldi	r24, 0x00	; 0
}
    1560:	0f 90       	pop	r0
    1562:	0f 90       	pop	r0
    1564:	df 91       	pop	r29
    1566:	cf 91       	pop	r28
    1568:	08 95       	ret

0000156a <twi_addr_read_ack>:


static uint8_t twi_addr_read_ack(void){
    156a:	cf 93       	push	r28
    156c:	df 93       	push	r29
    156e:	00 d0       	rcall	.+0      	; 0x1570 <twi_addr_read_ack+0x6>
    1570:	cd b7       	in	r28, 0x3d	; 61
    1572:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
    1574:	1a 82       	std	Y+2, r1	; 0x02
    1576:	19 82       	std	Y+1, r1	; 0x01
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
    1578:	8c ed       	ldi	r24, 0xDC	; 220
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	25 e8       	ldi	r18, 0x85	; 133
    157e:	fc 01       	movw	r30, r24
    1580:	20 83       	st	Z, r18
	while(status != TWIR_ADDR_ACK){
    1582:	0c c0       	rjmp	.+24     	; 0x159c <twi_addr_read_ack+0x32>
		i++;
    1584:	89 81       	ldd	r24, Y+1	; 0x01
    1586:	9a 81       	ldd	r25, Y+2	; 0x02
    1588:	01 96       	adiw	r24, 0x01	; 1
    158a:	9a 83       	std	Y+2, r25	; 0x02
    158c:	89 83       	std	Y+1, r24	; 0x01
		if(i >= TWI_TIMEOUT){
    158e:	89 81       	ldd	r24, Y+1	; 0x01
    1590:	9a 81       	ldd	r25, Y+2	; 0x02
    1592:	80 34       	cpi	r24, 0x40	; 64
    1594:	96 40       	sbci	r25, 0x06	; 6
    1596:	10 f0       	brcs	.+4      	; 0x159c <twi_addr_read_ack+0x32>
			return TWI_ERROR_START;
    1598:	81 e0       	ldi	r24, 0x01	; 1
    159a:	05 c0       	rjmp	.+10     	; 0x15a6 <twi_addr_read_ack+0x3c>

static uint8_t twi_addr_read_ack(void){
	uint16_t i = 0;
	
	TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
	while(status != TWIR_ADDR_ACK){
    159c:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    15a0:	80 34       	cpi	r24, 0x40	; 64
    15a2:	81 f7       	brne	.-32     	; 0x1584 <twi_addr_read_ack+0x1a>
		i++;
		if(i >= TWI_TIMEOUT){
			return TWI_ERROR_START;
		}
	}
	return TWI_OK;
    15a4:	80 e0       	ldi	r24, 0x00	; 0
}
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	df 91       	pop	r29
    15ac:	cf 91       	pop	r28
    15ae:	08 95       	ret

000015b0 <twi_data_read_ack>:


static uint8_t twi_data_read_ack(uint8_t ack){
    15b0:	cf 93       	push	r28
    15b2:	df 93       	push	r29
    15b4:	00 d0       	rcall	.+0      	; 0x15b6 <twi_data_read_ack+0x6>
    15b6:	1f 92       	push	r1
    15b8:	cd b7       	in	r28, 0x3d	; 61
    15ba:	de b7       	in	r29, 0x3e	; 62
    15bc:	8b 83       	std	Y+3, r24	; 0x03
	uint16_t i = 0;
    15be:	1a 82       	std	Y+2, r1	; 0x02
    15c0:	19 82       	std	Y+1, r1	; 0x01
	if(ack != 0){
    15c2:	8b 81       	ldd	r24, Y+3	; 0x03
    15c4:	88 23       	and	r24, r24
    15c6:	b9 f0       	breq	.+46     	; 0x15f6 <twi_data_read_ack+0x46>
		TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1 << TWEA);
    15c8:	8c ed       	ldi	r24, 0xDC	; 220
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	25 ec       	ldi	r18, 0xC5	; 197
    15ce:	fc 01       	movw	r30, r24
    15d0:	20 83       	st	Z, r18
		while(status != TWIR_DATA_ACK){
    15d2:	0c c0       	rjmp	.+24     	; 0x15ec <twi_data_read_ack+0x3c>
			i++;
    15d4:	89 81       	ldd	r24, Y+1	; 0x01
    15d6:	9a 81       	ldd	r25, Y+2	; 0x02
    15d8:	01 96       	adiw	r24, 0x01	; 1
    15da:	9a 83       	std	Y+2, r25	; 0x02
    15dc:	89 83       	std	Y+1, r24	; 0x01
			if(i >= TWI_TIMEOUT){
    15de:	89 81       	ldd	r24, Y+1	; 0x01
    15e0:	9a 81       	ldd	r25, Y+2	; 0x02
    15e2:	80 34       	cpi	r24, 0x40	; 64
    15e4:	96 40       	sbci	r25, 0x06	; 6
    15e6:	10 f0       	brcs	.+4      	; 0x15ec <twi_data_read_ack+0x3c>
				return TWI_ERROR_START;
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	1c c0       	rjmp	.+56     	; 0x1624 <twi_data_read_ack+0x74>

static uint8_t twi_data_read_ack(uint8_t ack){
	uint16_t i = 0;
	if(ack != 0){
		TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1 << TWEA);
		while(status != TWIR_DATA_ACK){
    15ec:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    15f0:	80 35       	cpi	r24, 0x50	; 80
    15f2:	81 f7       	brne	.-32     	; 0x15d4 <twi_data_read_ack+0x24>
    15f4:	16 c0       	rjmp	.+44     	; 0x1622 <twi_data_read_ack+0x72>
				return TWI_ERROR_START;
			}
		}
	}else{
		
		TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
    15f6:	8c ed       	ldi	r24, 0xDC	; 220
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	25 e8       	ldi	r18, 0x85	; 133
    15fc:	fc 01       	movw	r30, r24
    15fe:	20 83       	st	Z, r18
		while(status != TWIR_DATA_NACK){
    1600:	0c c0       	rjmp	.+24     	; 0x161a <twi_data_read_ack+0x6a>
			i++;
    1602:	89 81       	ldd	r24, Y+1	; 0x01
    1604:	9a 81       	ldd	r25, Y+2	; 0x02
    1606:	01 96       	adiw	r24, 0x01	; 1
    1608:	9a 83       	std	Y+2, r25	; 0x02
    160a:	89 83       	std	Y+1, r24	; 0x01
			if(i >= TWI_TIMEOUT){
    160c:	89 81       	ldd	r24, Y+1	; 0x01
    160e:	9a 81       	ldd	r25, Y+2	; 0x02
    1610:	80 34       	cpi	r24, 0x40	; 64
    1612:	96 40       	sbci	r25, 0x06	; 6
    1614:	10 f0       	brcs	.+4      	; 0x161a <twi_data_read_ack+0x6a>
				return TWI_ERROR_START;
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	05 c0       	rjmp	.+10     	; 0x1624 <twi_data_read_ack+0x74>
			}
		}
	}else{
		
		TWCR1 = (1 << TWINT) | (1 << TWEN) | (1 << TWIE);
		while(status != TWIR_DATA_NACK){
    161a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <status>
    161e:	88 35       	cpi	r24, 0x58	; 88
    1620:	81 f7       	brne	.-32     	; 0x1602 <twi_data_read_ack+0x52>
				return TWI_ERROR_START;
			}
		}
		
	}
	return TWI_OK;
    1622:	80 e0       	ldi	r24, 0x00	; 0
}
    1624:	0f 90       	pop	r0
    1626:	0f 90       	pop	r0
    1628:	0f 90       	pop	r0
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	08 95       	ret

00001630 <twi_read>:

uint8_t twi_read(uint8_t addr,uint8_t reg,uint8_t *data,uint16_t len){
    1630:	cf 93       	push	r28
    1632:	df 93       	push	r29
    1634:	cd b7       	in	r28, 0x3d	; 61
    1636:	de b7       	in	r29, 0x3e	; 62
    1638:	29 97       	sbiw	r28, 0x09	; 9
    163a:	0f b6       	in	r0, 0x3f	; 63
    163c:	f8 94       	cli
    163e:	de bf       	out	0x3e, r29	; 62
    1640:	0f be       	out	0x3f, r0	; 63
    1642:	cd bf       	out	0x3d, r28	; 61
    1644:	8c 83       	std	Y+4, r24	; 0x04
    1646:	6d 83       	std	Y+5, r22	; 0x05
    1648:	5f 83       	std	Y+7, r21	; 0x07
    164a:	4e 83       	std	Y+6, r20	; 0x06
    164c:	39 87       	std	Y+9, r19	; 0x09
    164e:	28 87       	std	Y+8, r18	; 0x08
	
	uint16_t i = 0;
    1650:	1a 82       	std	Y+2, r1	; 0x02
    1652:	19 82       	std	Y+1, r1	; 0x01
	uint8_t err = TWI_OK;
    1654:	1b 82       	std	Y+3, r1	; 0x03
	
	err = twi_start();
    1656:	0e 94 1c 0a 	call	0x1438	; 0x1438 <twi_start>
    165a:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    165c:	8b 81       	ldd	r24, Y+3	; 0x03
    165e:	88 23       	and	r24, r24
    1660:	21 f0       	breq	.+8      	; 0x166a <twi_read+0x3a>
		twi_stop();
    1662:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	80 c0       	rjmp	.+256    	; 0x176a <twi_read+0x13a>
	}
	TWDR1 = (addr << 1) | 0;
    166a:	8b ed       	ldi	r24, 0xDB	; 219
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	2c 81       	ldd	r18, Y+4	; 0x04
    1670:	22 0f       	add	r18, r18
    1672:	fc 01       	movw	r30, r24
    1674:	20 83       	st	Z, r18
	
	
	err = twi_addr_write_ack();
    1676:	0e 94 6f 0a 	call	0x14de	; 0x14de <twi_addr_write_ack>
    167a:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    167c:	8b 81       	ldd	r24, Y+3	; 0x03
    167e:	88 23       	and	r24, r24
    1680:	21 f0       	breq	.+8      	; 0x168a <twi_read+0x5a>
		twi_stop();
    1682:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    1686:	8b 81       	ldd	r24, Y+3	; 0x03
    1688:	70 c0       	rjmp	.+224    	; 0x176a <twi_read+0x13a>
	}
	
	TWDR1 = reg;
    168a:	8b ed       	ldi	r24, 0xDB	; 219
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	2d 81       	ldd	r18, Y+5	; 0x05
    1690:	fc 01       	movw	r30, r24
    1692:	20 83       	st	Z, r18
	err = twi_data_write_ack();
    1694:	0e 94 92 0a 	call	0x1524	; 0x1524 <twi_data_write_ack>
    1698:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    169a:	8b 81       	ldd	r24, Y+3	; 0x03
    169c:	88 23       	and	r24, r24
    169e:	21 f0       	breq	.+8      	; 0x16a8 <twi_read+0x78>
		twi_stop();
    16a0:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    16a4:	8b 81       	ldd	r24, Y+3	; 0x03
    16a6:	61 c0       	rjmp	.+194    	; 0x176a <twi_read+0x13a>
	}
	
	err = twi_restart();
    16a8:	0e 94 4c 0a 	call	0x1498	; 0x1498 <twi_restart>
    16ac:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    16ae:	8b 81       	ldd	r24, Y+3	; 0x03
    16b0:	88 23       	and	r24, r24
    16b2:	21 f0       	breq	.+8      	; 0x16bc <twi_read+0x8c>
		twi_stop();
    16b4:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    16b8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ba:	57 c0       	rjmp	.+174    	; 0x176a <twi_read+0x13a>
	}
	
	TWDR1 = (addr << 1) | 1;
    16bc:	8b ed       	ldi	r24, 0xDB	; 219
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	2c 81       	ldd	r18, Y+4	; 0x04
    16c2:	22 2f       	mov	r18, r18
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	22 0f       	add	r18, r18
    16c8:	33 1f       	adc	r19, r19
    16ca:	21 60       	ori	r18, 0x01	; 1
    16cc:	fc 01       	movw	r30, r24
    16ce:	20 83       	st	Z, r18

	err = twi_addr_read_ack();
    16d0:	0e 94 b5 0a 	call	0x156a	; 0x156a <twi_addr_read_ack>
    16d4:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    16d6:	8b 81       	ldd	r24, Y+3	; 0x03
    16d8:	88 23       	and	r24, r24
    16da:	21 f0       	breq	.+8      	; 0x16e4 <twi_read+0xb4>
		twi_stop();
    16dc:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    16e0:	8b 81       	ldd	r24, Y+3	; 0x03
    16e2:	43 c0       	rjmp	.+134    	; 0x176a <twi_read+0x13a>
	}
	
	for(i = 0; i < (len - 1);i++){
    16e4:	1a 82       	std	Y+2, r1	; 0x02
    16e6:	19 82       	std	Y+1, r1	; 0x01
    16e8:	1c c0       	rjmp	.+56     	; 0x1722 <twi_read+0xf2>
		err = twi_data_read_ack(1);
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <twi_data_read_ack>
    16f0:	8b 83       	std	Y+3, r24	; 0x03
		if(err != TWI_OK){
    16f2:	8b 81       	ldd	r24, Y+3	; 0x03
    16f4:	88 23       	and	r24, r24
    16f6:	21 f0       	breq	.+8      	; 0x1700 <twi_read+0xd0>
			twi_stop();
    16f8:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
			return err;
    16fc:	8b 81       	ldd	r24, Y+3	; 0x03
    16fe:	35 c0       	rjmp	.+106    	; 0x176a <twi_read+0x13a>
		}
		data[i] = TWDR1;
    1700:	2e 81       	ldd	r18, Y+6	; 0x06
    1702:	3f 81       	ldd	r19, Y+7	; 0x07
    1704:	89 81       	ldd	r24, Y+1	; 0x01
    1706:	9a 81       	ldd	r25, Y+2	; 0x02
    1708:	82 0f       	add	r24, r18
    170a:	93 1f       	adc	r25, r19
    170c:	2b ed       	ldi	r18, 0xDB	; 219
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	f9 01       	movw	r30, r18
    1712:	20 81       	ld	r18, Z
    1714:	fc 01       	movw	r30, r24
    1716:	20 83       	st	Z, r18
	if(err != TWI_OK){
		twi_stop();
		return err;
	}
	
	for(i = 0; i < (len - 1);i++){
    1718:	89 81       	ldd	r24, Y+1	; 0x01
    171a:	9a 81       	ldd	r25, Y+2	; 0x02
    171c:	01 96       	adiw	r24, 0x01	; 1
    171e:	9a 83       	std	Y+2, r25	; 0x02
    1720:	89 83       	std	Y+1, r24	; 0x01
    1722:	88 85       	ldd	r24, Y+8	; 0x08
    1724:	99 85       	ldd	r25, Y+9	; 0x09
    1726:	9c 01       	movw	r18, r24
    1728:	21 50       	subi	r18, 0x01	; 1
    172a:	31 09       	sbc	r19, r1
    172c:	89 81       	ldd	r24, Y+1	; 0x01
    172e:	9a 81       	ldd	r25, Y+2	; 0x02
    1730:	82 17       	cp	r24, r18
    1732:	93 07       	cpc	r25, r19
    1734:	d0 f2       	brcs	.-76     	; 0x16ea <twi_read+0xba>
			return err;
		}
		data[i] = TWDR1;
	}
	
	err = twi_data_read_ack(0);
    1736:	80 e0       	ldi	r24, 0x00	; 0
    1738:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <twi_data_read_ack>
    173c:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    173e:	8b 81       	ldd	r24, Y+3	; 0x03
    1740:	88 23       	and	r24, r24
    1742:	21 f0       	breq	.+8      	; 0x174c <twi_read+0x11c>
		twi_stop();
    1744:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    1748:	8b 81       	ldd	r24, Y+3	; 0x03
    174a:	0f c0       	rjmp	.+30     	; 0x176a <twi_read+0x13a>
	}
	data[i] = TWDR1;
    174c:	2e 81       	ldd	r18, Y+6	; 0x06
    174e:	3f 81       	ldd	r19, Y+7	; 0x07
    1750:	89 81       	ldd	r24, Y+1	; 0x01
    1752:	9a 81       	ldd	r25, Y+2	; 0x02
    1754:	82 0f       	add	r24, r18
    1756:	93 1f       	adc	r25, r19
    1758:	2b ed       	ldi	r18, 0xDB	; 219
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	f9 01       	movw	r30, r18
    175e:	20 81       	ld	r18, Z
    1760:	fc 01       	movw	r30, r24
    1762:	20 83       	st	Z, r18
	
	twi_stop();
    1764:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
	
	return err;
    1768:	8b 81       	ldd	r24, Y+3	; 0x03
}
    176a:	29 96       	adiw	r28, 0x09	; 9
    176c:	0f b6       	in	r0, 0x3f	; 63
    176e:	f8 94       	cli
    1770:	de bf       	out	0x3e, r29	; 62
    1772:	0f be       	out	0x3f, r0	; 63
    1774:	cd bf       	out	0x3d, r28	; 61
    1776:	df 91       	pop	r29
    1778:	cf 91       	pop	r28
    177a:	08 95       	ret

0000177c <twi_write>:


uint8_t twi_write(uint8_t addr,uint8_t reg,uint8_t *data,uint16_t len){
    177c:	cf 93       	push	r28
    177e:	df 93       	push	r29
    1780:	cd b7       	in	r28, 0x3d	; 61
    1782:	de b7       	in	r29, 0x3e	; 62
    1784:	29 97       	sbiw	r28, 0x09	; 9
    1786:	0f b6       	in	r0, 0x3f	; 63
    1788:	f8 94       	cli
    178a:	de bf       	out	0x3e, r29	; 62
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	cd bf       	out	0x3d, r28	; 61
    1790:	8c 83       	std	Y+4, r24	; 0x04
    1792:	6d 83       	std	Y+5, r22	; 0x05
    1794:	5f 83       	std	Y+7, r21	; 0x07
    1796:	4e 83       	std	Y+6, r20	; 0x06
    1798:	39 87       	std	Y+9, r19	; 0x09
    179a:	28 87       	std	Y+8, r18	; 0x08
	
	uint16_t i = 0;
    179c:	1a 82       	std	Y+2, r1	; 0x02
    179e:	19 82       	std	Y+1, r1	; 0x01
	uint8_t err = TWI_OK;
    17a0:	1b 82       	std	Y+3, r1	; 0x03
	
	err = twi_start();
    17a2:	0e 94 1c 0a 	call	0x1438	; 0x1438 <twi_start>
    17a6:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    17a8:	8b 81       	ldd	r24, Y+3	; 0x03
    17aa:	88 23       	and	r24, r24
    17ac:	21 f0       	breq	.+8      	; 0x17b6 <twi_write+0x3a>
		twi_stop();
    17ae:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    17b2:	8b 81       	ldd	r24, Y+3	; 0x03
    17b4:	47 c0       	rjmp	.+142    	; 0x1844 <twi_write+0xc8>
	}
	TWDR1 = (addr << 1) | 0;
    17b6:	8b ed       	ldi	r24, 0xDB	; 219
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	2c 81       	ldd	r18, Y+4	; 0x04
    17bc:	22 0f       	add	r18, r18
    17be:	fc 01       	movw	r30, r24
    17c0:	20 83       	st	Z, r18
	
	
	err = twi_addr_write_ack();
    17c2:	0e 94 6f 0a 	call	0x14de	; 0x14de <twi_addr_write_ack>
    17c6:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    17c8:	8b 81       	ldd	r24, Y+3	; 0x03
    17ca:	88 23       	and	r24, r24
    17cc:	21 f0       	breq	.+8      	; 0x17d6 <twi_write+0x5a>
		twi_stop();
    17ce:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    17d2:	8b 81       	ldd	r24, Y+3	; 0x03
    17d4:	37 c0       	rjmp	.+110    	; 0x1844 <twi_write+0xc8>
	}
	
	TWDR1 = reg;
    17d6:	8b ed       	ldi	r24, 0xDB	; 219
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	2d 81       	ldd	r18, Y+5	; 0x05
    17dc:	fc 01       	movw	r30, r24
    17de:	20 83       	st	Z, r18
	err = twi_data_write_ack();
    17e0:	0e 94 92 0a 	call	0x1524	; 0x1524 <twi_data_write_ack>
    17e4:	8b 83       	std	Y+3, r24	; 0x03
	if(err != TWI_OK){
    17e6:	8b 81       	ldd	r24, Y+3	; 0x03
    17e8:	88 23       	and	r24, r24
    17ea:	21 f0       	breq	.+8      	; 0x17f4 <twi_write+0x78>
		twi_stop();
    17ec:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
		return err;
    17f0:	8b 81       	ldd	r24, Y+3	; 0x03
    17f2:	28 c0       	rjmp	.+80     	; 0x1844 <twi_write+0xc8>
	}
	
	for(i = 0; i < len;i++){
    17f4:	1a 82       	std	Y+2, r1	; 0x02
    17f6:	19 82       	std	Y+1, r1	; 0x01
    17f8:	1b c0       	rjmp	.+54     	; 0x1830 <twi_write+0xb4>
		TWDR1 = data[i];
    17fa:	8b ed       	ldi	r24, 0xDB	; 219
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	4e 81       	ldd	r20, Y+6	; 0x06
    1800:	5f 81       	ldd	r21, Y+7	; 0x07
    1802:	29 81       	ldd	r18, Y+1	; 0x01
    1804:	3a 81       	ldd	r19, Y+2	; 0x02
    1806:	24 0f       	add	r18, r20
    1808:	35 1f       	adc	r19, r21
    180a:	f9 01       	movw	r30, r18
    180c:	20 81       	ld	r18, Z
    180e:	fc 01       	movw	r30, r24
    1810:	20 83       	st	Z, r18
		err = twi_data_write_ack();
    1812:	0e 94 92 0a 	call	0x1524	; 0x1524 <twi_data_write_ack>
    1816:	8b 83       	std	Y+3, r24	; 0x03
		if(err != TWI_OK){
    1818:	8b 81       	ldd	r24, Y+3	; 0x03
    181a:	88 23       	and	r24, r24
    181c:	21 f0       	breq	.+8      	; 0x1826 <twi_write+0xaa>
			twi_stop();
    181e:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
			return err;
    1822:	8b 81       	ldd	r24, Y+3	; 0x03
    1824:	0f c0       	rjmp	.+30     	; 0x1844 <twi_write+0xc8>
	if(err != TWI_OK){
		twi_stop();
		return err;
	}
	
	for(i = 0; i < len;i++){
    1826:	89 81       	ldd	r24, Y+1	; 0x01
    1828:	9a 81       	ldd	r25, Y+2	; 0x02
    182a:	01 96       	adiw	r24, 0x01	; 1
    182c:	9a 83       	std	Y+2, r25	; 0x02
    182e:	89 83       	std	Y+1, r24	; 0x01
    1830:	29 81       	ldd	r18, Y+1	; 0x01
    1832:	3a 81       	ldd	r19, Y+2	; 0x02
    1834:	88 85       	ldd	r24, Y+8	; 0x08
    1836:	99 85       	ldd	r25, Y+9	; 0x09
    1838:	28 17       	cp	r18, r24
    183a:	39 07       	cpc	r19, r25
    183c:	f0 f2       	brcs	.-68     	; 0x17fa <twi_write+0x7e>
			return err;
		}
	}
	
	
	twi_stop();
    183e:	0e 94 3f 0a 	call	0x147e	; 0x147e <twi_stop>
	
	return err;
    1842:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1844:	29 96       	adiw	r28, 0x09	; 9
    1846:	0f b6       	in	r0, 0x3f	; 63
    1848:	f8 94       	cli
    184a:	de bf       	out	0x3e, r29	; 62
    184c:	0f be       	out	0x3f, r0	; 63
    184e:	cd bf       	out	0x3d, r28	; 61
    1850:	df 91       	pop	r29
    1852:	cf 91       	pop	r28
    1854:	08 95       	ret

00001856 <twi_init>:





void twi_init(uint32_t speed){
    1856:	cf 93       	push	r28
    1858:	df 93       	push	r29
    185a:	cd b7       	in	r28, 0x3d	; 61
    185c:	de b7       	in	r29, 0x3e	; 62
    185e:	28 97       	sbiw	r28, 0x08	; 8
    1860:	0f b6       	in	r0, 0x3f	; 63
    1862:	f8 94       	cli
    1864:	de bf       	out	0x3e, r29	; 62
    1866:	0f be       	out	0x3f, r0	; 63
    1868:	cd bf       	out	0x3d, r28	; 61
    186a:	6d 83       	std	Y+5, r22	; 0x05
    186c:	7e 83       	std	Y+6, r23	; 0x06
    186e:	8f 83       	std	Y+7, r24	; 0x07
    1870:	98 87       	std	Y+8, r25	; 0x08
	
	uint32_t gen_t = 0;
    1872:	19 82       	std	Y+1, r1	; 0x01
    1874:	1a 82       	std	Y+2, r1	; 0x02
    1876:	1b 82       	std	Y+3, r1	; 0x03
    1878:	1c 82       	std	Y+4, r1	; 0x04
	gen_t = (((F_CPU/speed) - 16) / 2) & 0xFF;
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	94 e2       	ldi	r25, 0x24	; 36
    187e:	a4 ef       	ldi	r26, 0xF4	; 244
    1880:	b0 e0       	ldi	r27, 0x00	; 0
    1882:	2d 81       	ldd	r18, Y+5	; 0x05
    1884:	3e 81       	ldd	r19, Y+6	; 0x06
    1886:	4f 81       	ldd	r20, Y+7	; 0x07
    1888:	58 85       	ldd	r21, Y+8	; 0x08
    188a:	bc 01       	movw	r22, r24
    188c:	cd 01       	movw	r24, r26
    188e:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__udivmodsi4>
    1892:	da 01       	movw	r26, r20
    1894:	c9 01       	movw	r24, r18
    1896:	40 97       	sbiw	r24, 0x10	; 16
    1898:	a1 09       	sbc	r26, r1
    189a:	b1 09       	sbc	r27, r1
    189c:	b6 95       	lsr	r27
    189e:	a7 95       	ror	r26
    18a0:	97 95       	ror	r25
    18a2:	87 95       	ror	r24
    18a4:	99 27       	eor	r25, r25
    18a6:	aa 27       	eor	r26, r26
    18a8:	bb 27       	eor	r27, r27
    18aa:	89 83       	std	Y+1, r24	; 0x01
    18ac:	9a 83       	std	Y+2, r25	; 0x02
    18ae:	ab 83       	std	Y+3, r26	; 0x03
    18b0:	bc 83       	std	Y+4, r27	; 0x04
	TWBR1 = gen_t & 0xFF;
    18b2:	88 ed       	ldi	r24, 0xD8	; 216
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	29 81       	ldd	r18, Y+1	; 0x01
    18b8:	fc 01       	movw	r30, r24
    18ba:	20 83       	st	Z, r18
	TWCR1 = (1 << TWEN) | (1 << TWIE);
    18bc:	8c ed       	ldi	r24, 0xDC	; 220
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	25 e0       	ldi	r18, 0x05	; 5
    18c2:	fc 01       	movw	r30, r24
    18c4:	20 83       	st	Z, r18
	//PORTC |= (1 << PORTC5 | 1 << PORTC4);
	
}
    18c6:	00 00       	nop
    18c8:	28 96       	adiw	r28, 0x08	; 8
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	f8 94       	cli
    18ce:	de bf       	out	0x3e, r29	; 62
    18d0:	0f be       	out	0x3f, r0	; 63
    18d2:	cd bf       	out	0x3d, r28	; 61
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	08 95       	ret

000018da <__vector_18>:

void uart_send_array(uint8_t *c,uint16_t len){
	for(uint16_t i = 0; i < len;i++){
		uart_send_byte(c[i]);
	}
}
    18da:	1f 92       	push	r1
    18dc:	0f 92       	push	r0
    18de:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    18e2:	0f 92       	push	r0
    18e4:	11 24       	eor	r1, r1
    18e6:	2f 93       	push	r18
    18e8:	3f 93       	push	r19
    18ea:	8f 93       	push	r24
    18ec:	9f 93       	push	r25
    18ee:	ef 93       	push	r30
    18f0:	ff 93       	push	r31
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	cd b7       	in	r28, 0x3d	; 61
    18f8:	de b7       	in	r29, 0x3e	; 62
    18fa:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <rx_count>
    18fe:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <rx_count+0x1>
    1902:	26 ec       	ldi	r18, 0xC6	; 198
    1904:	30 e0       	ldi	r19, 0x00	; 0
    1906:	f9 01       	movw	r30, r18
    1908:	20 81       	ld	r18, Z
    190a:	87 56       	subi	r24, 0x67	; 103
    190c:	9d 4f       	sbci	r25, 0xFD	; 253
    190e:	fc 01       	movw	r30, r24
    1910:	20 83       	st	Z, r18
    1912:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <rx_count>
    1916:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <rx_count+0x1>
    191a:	87 56       	subi	r24, 0x67	; 103
    191c:	9d 4f       	sbci	r25, 0xFD	; 253
    191e:	fc 01       	movw	r30, r24
    1920:	80 81       	ld	r24, Z
    1922:	8d 30       	cpi	r24, 0x0D	; 13
    1924:	61 f4       	brne	.+24     	; 0x193e <__vector_18+0x64>
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <read_complete>
    192c:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <rx_count>
    1930:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <rx_count+0x1>
    1934:	01 96       	adiw	r24, 0x01	; 1
    1936:	87 56       	subi	r24, 0x67	; 103
    1938:	9d 4f       	sbci	r25, 0xFD	; 253
    193a:	fc 01       	movw	r30, r24
    193c:	10 82       	st	Z, r1
    193e:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <rx_count>
    1942:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <rx_count+0x1>
    1946:	01 96       	adiw	r24, 0x01	; 1
    1948:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <rx_count+0x1>
    194c:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <rx_count>
    1950:	00 00       	nop
    1952:	df 91       	pop	r29
    1954:	cf 91       	pop	r28
    1956:	ff 91       	pop	r31
    1958:	ef 91       	pop	r30
    195a:	9f 91       	pop	r25
    195c:	8f 91       	pop	r24
    195e:	3f 91       	pop	r19
    1960:	2f 91       	pop	r18
    1962:	0f 90       	pop	r0
    1964:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1968:	0f 90       	pop	r0
    196a:	1f 90       	pop	r1
    196c:	18 95       	reti

0000196e <__vector_20>:
    196e:	1f 92       	push	r1
    1970:	0f 92       	push	r0
    1972:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1976:	0f 92       	push	r0
    1978:	11 24       	eor	r1, r1
    197a:	8f 93       	push	r24
    197c:	cf 93       	push	r28
    197e:	df 93       	push	r29
    1980:	cd b7       	in	r28, 0x3d	; 61
    1982:	de b7       	in	r29, 0x3e	; 62
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <uart_tx_busy>
    198a:	00 00       	nop
    198c:	df 91       	pop	r29
    198e:	cf 91       	pop	r28
    1990:	8f 91       	pop	r24
    1992:	0f 90       	pop	r0
    1994:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1998:	0f 90       	pop	r0
    199a:	1f 90       	pop	r1
    199c:	18 95       	reti

0000199e <uart_init>:
    199e:	cf 93       	push	r28
    19a0:	df 93       	push	r29
    19a2:	00 d0       	rcall	.+0      	; 0x19a4 <uart_init+0x6>
    19a4:	00 d0       	rcall	.+0      	; 0x19a6 <uart_init+0x8>
    19a6:	00 d0       	rcall	.+0      	; 0x19a8 <uart_init+0xa>
    19a8:	cd b7       	in	r28, 0x3d	; 61
    19aa:	de b7       	in	r29, 0x3e	; 62
    19ac:	6a 83       	std	Y+2, r22	; 0x02
    19ae:	7b 83       	std	Y+3, r23	; 0x03
    19b0:	8c 83       	std	Y+4, r24	; 0x04
    19b2:	9d 83       	std	Y+5, r25	; 0x05
    19b4:	4e 83       	std	Y+6, r20	; 0x06
    19b6:	80 e1       	ldi	r24, 0x10	; 16
    19b8:	89 83       	std	Y+1, r24	; 0x01
    19ba:	8e 81       	ldd	r24, Y+6	; 0x06
    19bc:	88 23       	and	r24, r24
    19be:	59 f0       	breq	.+22     	; 0x19d6 <uart_init+0x38>
    19c0:	88 e0       	ldi	r24, 0x08	; 8
    19c2:	89 83       	std	Y+1, r24	; 0x01
    19c4:	80 ec       	ldi	r24, 0xC0	; 192
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	20 ec       	ldi	r18, 0xC0	; 192
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	f9 01       	movw	r30, r18
    19ce:	20 81       	ld	r18, Z
    19d0:	22 60       	ori	r18, 0x02	; 2
    19d2:	fc 01       	movw	r30, r24
    19d4:	20 83       	st	Z, r18
    19d6:	89 81       	ldd	r24, Y+1	; 0x01
    19d8:	28 2f       	mov	r18, r24
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	40 e0       	ldi	r20, 0x00	; 0
    19de:	50 e0       	ldi	r21, 0x00	; 0
    19e0:	8a 81       	ldd	r24, Y+2	; 0x02
    19e2:	9b 81       	ldd	r25, Y+3	; 0x03
    19e4:	ac 81       	ldd	r26, Y+4	; 0x04
    19e6:	bd 81       	ldd	r27, Y+5	; 0x05
    19e8:	bc 01       	movw	r22, r24
    19ea:	cd 01       	movw	r24, r26
    19ec:	0e 94 98 26 	call	0x4d30	; 0x4d30 <__mulsi3>
    19f0:	9b 01       	movw	r18, r22
    19f2:	ac 01       	movw	r20, r24
    19f4:	80 e0       	ldi	r24, 0x00	; 0
    19f6:	94 e2       	ldi	r25, 0x24	; 36
    19f8:	a4 ef       	ldi	r26, 0xF4	; 244
    19fa:	b0 e0       	ldi	r27, 0x00	; 0
    19fc:	bc 01       	movw	r22, r24
    19fe:	cd 01       	movw	r24, r26
    1a00:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__udivmodsi4>
    1a04:	da 01       	movw	r26, r20
    1a06:	c9 01       	movw	r24, r18
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	a1 09       	sbc	r26, r1
    1a0c:	b1 09       	sbc	r27, r1
    1a0e:	8a 83       	std	Y+2, r24	; 0x02
    1a10:	9b 83       	std	Y+3, r25	; 0x03
    1a12:	ac 83       	std	Y+4, r26	; 0x04
    1a14:	bd 83       	std	Y+5, r27	; 0x05
    1a16:	25 ec       	ldi	r18, 0xC5	; 197
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a1c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a1e:	ac 81       	ldd	r26, Y+4	; 0x04
    1a20:	bd 81       	ldd	r27, Y+5	; 0x05
    1a22:	88 27       	eor	r24, r24
    1a24:	9f 70       	andi	r25, 0x0F	; 15
    1a26:	aa 27       	eor	r26, r26
    1a28:	bb 27       	eor	r27, r27
    1a2a:	89 2f       	mov	r24, r25
    1a2c:	9a 2f       	mov	r25, r26
    1a2e:	ab 2f       	mov	r26, r27
    1a30:	bb 27       	eor	r27, r27
    1a32:	f9 01       	movw	r30, r18
    1a34:	80 83       	st	Z, r24
    1a36:	84 ec       	ldi	r24, 0xC4	; 196
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	2a 81       	ldd	r18, Y+2	; 0x02
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	20 83       	st	Z, r18
    1a40:	81 ec       	ldi	r24, 0xC1	; 193
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	21 ec       	ldi	r18, 0xC1	; 193
    1a46:	30 e0       	ldi	r19, 0x00	; 0
    1a48:	f9 01       	movw	r30, r18
    1a4a:	20 81       	ld	r18, Z
    1a4c:	28 6d       	ori	r18, 0xD8	; 216
    1a4e:	fc 01       	movw	r30, r24
    1a50:	20 83       	st	Z, r18
    1a52:	82 ec       	ldi	r24, 0xC2	; 194
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	26 e8       	ldi	r18, 0x86	; 134
    1a58:	fc 01       	movw	r30, r24
    1a5a:	20 83       	st	Z, r18
    1a5c:	00 00       	nop
    1a5e:	26 96       	adiw	r28, 0x06	; 6
    1a60:	0f b6       	in	r0, 0x3f	; 63
    1a62:	f8 94       	cli
    1a64:	de bf       	out	0x3e, r29	; 62
    1a66:	0f be       	out	0x3f, r0	; 63
    1a68:	cd bf       	out	0x3d, r28	; 61
    1a6a:	df 91       	pop	r29
    1a6c:	cf 91       	pop	r28
    1a6e:	08 95       	ret

00001a70 <uart_send_byte>:
    1a70:	cf 93       	push	r28
    1a72:	df 93       	push	r29
    1a74:	1f 92       	push	r1
    1a76:	cd b7       	in	r28, 0x3d	; 61
    1a78:	de b7       	in	r29, 0x3e	; 62
    1a7a:	89 83       	std	Y+1, r24	; 0x01
    1a7c:	00 00       	nop
    1a7e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <uart_tx_busy>
    1a82:	88 23       	and	r24, r24
    1a84:	e1 f3       	breq	.-8      	; 0x1a7e <uart_send_byte+0xe>
    1a86:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <uart_tx_busy>
    1a8a:	86 ec       	ldi	r24, 0xC6	; 198
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	29 81       	ldd	r18, Y+1	; 0x01
    1a90:	fc 01       	movw	r30, r24
    1a92:	20 83       	st	Z, r18
    1a94:	00 00       	nop
    1a96:	0f 90       	pop	r0
    1a98:	df 91       	pop	r29
    1a9a:	cf 91       	pop	r28
    1a9c:	08 95       	ret

00001a9e <uart_send_string>:

void uart_send_string(uint8_t *c){
    1a9e:	cf 93       	push	r28
    1aa0:	df 93       	push	r29
    1aa2:	00 d0       	rcall	.+0      	; 0x1aa4 <uart_send_string+0x6>
    1aa4:	00 d0       	rcall	.+0      	; 0x1aa6 <uart_send_string+0x8>
    1aa6:	cd b7       	in	r28, 0x3d	; 61
    1aa8:	de b7       	in	r29, 0x3e	; 62
    1aaa:	9c 83       	std	Y+4, r25	; 0x04
    1aac:	8b 83       	std	Y+3, r24	; 0x03
	uint16_t i = 0;
    1aae:	1a 82       	std	Y+2, r1	; 0x02
    1ab0:	19 82       	std	Y+1, r1	; 0x01
	do{
		uart_send_byte(c[i]);
    1ab2:	2b 81       	ldd	r18, Y+3	; 0x03
    1ab4:	3c 81       	ldd	r19, Y+4	; 0x04
    1ab6:	89 81       	ldd	r24, Y+1	; 0x01
    1ab8:	9a 81       	ldd	r25, Y+2	; 0x02
    1aba:	82 0f       	add	r24, r18
    1abc:	93 1f       	adc	r25, r19
    1abe:	fc 01       	movw	r30, r24
    1ac0:	80 81       	ld	r24, Z
    1ac2:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <uart_send_byte>
		i++;
    1ac6:	89 81       	ldd	r24, Y+1	; 0x01
    1ac8:	9a 81       	ldd	r25, Y+2	; 0x02
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	9a 83       	std	Y+2, r25	; 0x02
    1ace:	89 83       	std	Y+1, r24	; 0x01
		
	}while(c[i] != '\0');
    1ad0:	2b 81       	ldd	r18, Y+3	; 0x03
    1ad2:	3c 81       	ldd	r19, Y+4	; 0x04
    1ad4:	89 81       	ldd	r24, Y+1	; 0x01
    1ad6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ad8:	82 0f       	add	r24, r18
    1ada:	93 1f       	adc	r25, r19
    1adc:	fc 01       	movw	r30, r24
    1ade:	80 81       	ld	r24, Z
    1ae0:	88 23       	and	r24, r24
    1ae2:	39 f7       	brne	.-50     	; 0x1ab2 <uart_send_string+0x14>
	//uart_send_byte(c[i]);
}
    1ae4:	00 00       	nop
    1ae6:	0f 90       	pop	r0
    1ae8:	0f 90       	pop	r0
    1aea:	0f 90       	pop	r0
    1aec:	0f 90       	pop	r0
    1aee:	df 91       	pop	r29
    1af0:	cf 91       	pop	r28
    1af2:	08 95       	ret

00001af4 <__vector_1>:
uint8_t rtc_int_request = 0;
uint16_t BAT_VOLT = 0;



ISR(INT0_vect){
    1af4:	1f 92       	push	r1
    1af6:	0f 92       	push	r0
    1af8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1afc:	0f 92       	push	r0
    1afe:	11 24       	eor	r1, r1
    1b00:	8f 93       	push	r24
    1b02:	cf 93       	push	r28
    1b04:	df 93       	push	r29
    1b06:	cd b7       	in	r28, 0x3d	; 61
    1b08:	de b7       	in	r29, 0x3e	; 62
	rtc_int_request=1;
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <rtc_int_request>
}
    1b10:	00 00       	nop
    1b12:	df 91       	pop	r29
    1b14:	cf 91       	pop	r28
    1b16:	8f 91       	pop	r24
    1b18:	0f 90       	pop	r0
    1b1a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1b1e:	0f 90       	pop	r0
    1b20:	1f 90       	pop	r1
    1b22:	18 95       	reti

00001b24 <main>:



int main(void)
{
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	cd b7       	in	r28, 0x3d	; 61
    1b2a:	de b7       	in	r29, 0x3e	; 62
    1b2c:	c2 59       	subi	r28, 0x92	; 146
    1b2e:	d1 09       	sbc	r29, r1
    1b30:	0f b6       	in	r0, 0x3f	; 63
    1b32:	f8 94       	cli
    1b34:	de bf       	out	0x3e, r29	; 62
    1b36:	0f be       	out	0x3f, r0	; 63
    1b38:	cd bf       	out	0x3d, r28	; 61
    char char_array[128]="\0";
    1b3a:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <sys_rtc+0x87>
    1b3e:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <sys_rtc+0x88>
    1b42:	9c 8b       	std	Y+20, r25	; 0x14
    1b44:	8b 8b       	std	Y+19, r24	; 0x13
    1b46:	2e e7       	ldi	r18, 0x7E	; 126
    1b48:	ce 01       	movw	r24, r28
    1b4a:	45 96       	adiw	r24, 0x15	; 21
    1b4c:	fc 01       	movw	r30, r24
    1b4e:	32 2f       	mov	r19, r18
    1b50:	11 92       	st	Z+, r1
    1b52:	3a 95       	dec	r19
    1b54:	e9 f7       	brne	.-6      	; 0x1b50 <main+0x2c>

    
    uart_init(250000,1);
    1b56:	41 e0       	ldi	r20, 0x01	; 1
    1b58:	60 e9       	ldi	r22, 0x90	; 144
    1b5a:	70 ed       	ldi	r23, 0xD0	; 208
    1b5c:	83 e0       	ldi	r24, 0x03	; 3
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	0e 94 cf 0c 	call	0x199e	; 0x199e <uart_init>
    twi_init(400000);
    1b64:	60 e8       	ldi	r22, 0x80	; 128
    1b66:	7a e1       	ldi	r23, 0x1A	; 26
    1b68:	86 e0       	ldi	r24, 0x06	; 6
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	0e 94 2b 0c 	call	0x1856	; 0x1856 <twi_init>
    gpio_set_pin_direction(&lcd_blk , PORT_DIR_OUT); gpio_set_pin_level(&lcd_blk, false);
    1b70:	61 e0       	ldi	r22, 0x01	; 1
    1b72:	89 e2       	ldi	r24, 0x29	; 41
    1b74:	91 e0       	ldi	r25, 0x01	; 1
    1b76:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    1b7a:	60 e0       	ldi	r22, 0x00	; 0
    1b7c:	89 e2       	ldi	r24, 0x29	; 41
    1b7e:	91 e0       	ldi	r25, 0x01	; 1
    1b80:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
	gpio_set_pin_direction(&ext_led , PORT_DIR_OUT); gpio_set_pin_level(&ext_led, false);
    1b84:	61 e0       	ldi	r22, 0x01	; 1
    1b86:	8c e2       	ldi	r24, 0x2C	; 44
    1b88:	91 e0       	ldi	r25, 0x01	; 1
    1b8a:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    1b8e:	60 e0       	ldi	r22, 0x00	; 0
    1b90:	8c e2       	ldi	r24, 0x2C	; 44
    1b92:	91 e0       	ldi	r25, 0x01	; 1
    1b94:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
	gpio_set_pin_direction(&deb_led , PORT_DIR_OUT); gpio_set_pin_level(&deb_led, false);
    1b98:	61 e0       	ldi	r22, 0x01	; 1
    1b9a:	8f e2       	ldi	r24, 0x2F	; 47
    1b9c:	91 e0       	ldi	r25, 0x01	; 1
    1b9e:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    1ba2:	60 e0       	ldi	r22, 0x00	; 0
    1ba4:	8f e2       	ldi	r24, 0x2F	; 47
    1ba6:	91 e0       	ldi	r25, 0x01	; 1
    1ba8:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
    gpio_set_pin_direction(&rtc_int, PORT_DIR_IN);
    1bac:	60 e0       	ldi	r22, 0x00	; 0
    1bae:	86 e2       	ldi	r24, 0x26	; 38
    1bb0:	91 e0       	ldi	r25, 0x01	; 1
    1bb2:	0e 94 d4 06 	call	0xda8	; 0xda8 <gpio_set_pin_direction>
    EICRA |= (0b10 << ISC00);
    1bb6:	89 e6       	ldi	r24, 0x69	; 105
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	29 e6       	ldi	r18, 0x69	; 105
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	f9 01       	movw	r30, r18
    1bc0:	20 81       	ld	r18, Z
    1bc2:	22 60       	ori	r18, 0x02	; 2
    1bc4:	fc 01       	movw	r30, r24
    1bc6:	20 83       	st	Z, r18
    EIMSK = 0x01; //0b00000001
    1bc8:	8d e3       	ldi	r24, 0x3D	; 61
    1bca:	90 e0       	ldi	r25, 0x00	; 0
    1bcc:	21 e0       	ldi	r18, 0x01	; 1
    1bce:	fc 01       	movw	r30, r24
    1bd0:	20 83       	st	Z, r18
	
	sei();
    1bd2:	78 94       	sei
	stdout = &mystdout;
    1bd4:	88 e1       	ldi	r24, 0x18	; 24
    1bd6:	91 e0       	ldi	r25, 0x01	; 1
    1bd8:	90 93 d5 07 	sts	0x07D5, r25	; 0x8007d5 <__iob+0x3>
    1bdc:	80 93 d4 07 	sts	0x07D4, r24	; 0x8007d4 <__iob+0x2>
	//rtc_set(&sys_rtc);
	rtc_int_enable(&sys_rtc ,0);
    1be0:	60 e0       	ldi	r22, 0x00	; 0
    1be2:	70 e0       	ldi	r23, 0x00	; 0
    1be4:	82 e3       	ldi	r24, 0x32	; 50
    1be6:	91 e0       	ldi	r25, 0x01	; 1
    1be8:	0e 94 66 07 	call	0xecc	; 0xecc <rtc_int_enable>
	adc_init();
    1bec:	0e 94 3e 05 	call	0xa7c	; 0xa7c <adc_init>
	spi1_init();
    1bf0:	0e 94 72 09 	call	0x12e4	; 0x12e4 <spi1_init>
	lcd_gpio_init();
    1bf4:	0e 94 28 06 	call	0xc50	; 0xc50 <lcd_gpio_init>
	u8g2_Setup_st7565_zolen_128x64_f( &lcd, U8G2_MIRROR_VERTICAL, lcd_hw_spi, fake_delay_fn);
    1bf8:	2e e6       	ldi	r18, 0x6E	; 110
    1bfa:	36 e0       	ldi	r19, 0x06	; 6
    1bfc:	40 ee       	ldi	r20, 0xE0	; 224
    1bfe:	55 e0       	ldi	r21, 0x05	; 5
    1c00:	69 e3       	ldi	r22, 0x39	; 57
    1c02:	72 e0       	ldi	r23, 0x02	; 2
    1c04:	8c e1       	ldi	r24, 0x1C	; 28
    1c06:	97 e0       	ldi	r25, 0x07	; 7
    1c08:	0e 94 a8 10 	call	0x2150	; 0x2150 <u8g2_Setup_st7565_zolen_128x64_f>
	//u8g2_Setup_st7565_zolen_128x64_f(&lcd, U8G2_MIRROR_VERTICAL, u8x8_byte_4wire_sw_spi, lcd_software_spi);
	
	
	
	sleep_enable();
    1c0c:	83 e5       	ldi	r24, 0x53	; 83
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	23 e5       	ldi	r18, 0x53	; 83
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	f9 01       	movw	r30, r18
    1c16:	20 81       	ld	r18, Z
    1c18:	21 60       	ori	r18, 0x01	; 1
    1c1a:	fc 01       	movw	r30, r24
    1c1c:	20 83       	st	Z, r18
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
    1c1e:	83 e5       	ldi	r24, 0x53	; 83
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	23 e5       	ldi	r18, 0x53	; 83
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	f9 01       	movw	r30, r18
    1c28:	20 81       	ld	r18, Z
    1c2a:	21 7f       	andi	r18, 0xF1	; 241
    1c2c:	24 60       	ori	r18, 0x04	; 4
    1c2e:	fc 01       	movw	r30, r24
    1c30:	20 83       	st	Z, r18
	uart_send_string((uint8_t *)"\rReady\n\r");
    1c32:	82 e6       	ldi	r24, 0x62	; 98
    1c34:	91 e0       	ldi	r25, 0x01	; 1
    1c36:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <uart_send_string>
	u8g2_InitDisplay(&lcd);
    1c3a:	8c e1       	ldi	r24, 0x1C	; 28
    1c3c:	97 e0       	ldi	r25, 0x07	; 7
    1c3e:	0e 94 c9 22 	call	0x4592	; 0x4592 <u8x8_InitDisplay>
	u8g2_SetPowerSave(&lcd, 0);
    1c42:	60 e0       	ldi	r22, 0x00	; 0
    1c44:	8c e1       	ldi	r24, 0x1C	; 28
    1c46:	97 e0       	ldi	r25, 0x07	; 7
    1c48:	0e 94 e4 22 	call	0x45c8	; 0x45c8 <u8x8_SetPowerSave>
	u8g2_SetFlipMode(&lcd, 1);
    1c4c:	61 e0       	ldi	r22, 0x01	; 1
    1c4e:	8c e1       	ldi	r24, 0x1C	; 28
    1c50:	97 e0       	ldi	r25, 0x07	; 7
    1c52:	0e 94 02 23 	call	0x4604	; 0x4604 <u8x8_SetFlipMode>
	u8g2_SetContrast(&lcd, 120);
    1c56:	68 e7       	ldi	r22, 0x78	; 120
    1c58:	8c e1       	ldi	r24, 0x1C	; 28
    1c5a:	97 e0       	ldi	r25, 0x07	; 7
    1c5c:	0e 94 20 23 	call	0x4640	; 0x4640 <u8x8_SetContrast>
	u8g2_ClearBuffer(&lcd);
    1c60:	8c e1       	ldi	r24, 0x1C	; 28
    1c62:	97 e0       	ldi	r25, 0x07	; 7
    1c64:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <u8g2_ClearBuffer>
	//u8g2_SetFont(&u8g2, u8g2_font_5x8_t_cyrillic);
	u8g2_SetFont(&lcd, u8g2_font_6x10_mf);
    1c68:	64 eb       	ldi	r22, 0xB4	; 180
    1c6a:	70 e0       	ldi	r23, 0x00	; 0
    1c6c:	8c e1       	ldi	r24, 0x1C	; 28
    1c6e:	97 e0       	ldi	r25, 0x07	; 7
    1c70:	0e 94 db 19 	call	0x33b6	; 0x33b6 <u8g2_SetFont>
	u8g2_DrawStr(&lcd, 1, 10, (void *)"RX MODULE");
    1c74:	2b e6       	ldi	r18, 0x6B	; 107
    1c76:	31 e0       	ldi	r19, 0x01	; 1
    1c78:	4a e0       	ldi	r20, 0x0A	; 10
    1c7a:	50 e0       	ldi	r21, 0x00	; 0
    1c7c:	61 e0       	ldi	r22, 0x01	; 1
    1c7e:	70 e0       	ldi	r23, 0x00	; 0
    1c80:	8c e1       	ldi	r24, 0x1C	; 28
    1c82:	97 e0       	ldi	r25, 0x07	; 7
    1c84:	0e 94 c5 18 	call	0x318a	; 0x318a <u8g2_DrawStr>
	u8g2_SendBuffer(&lcd);
    1c88:	8c e1       	ldi	r24, 0x1C	; 28
    1c8a:	97 e0       	ldi	r25, 0x07	; 7
    1c8c:	0e 94 80 10 	call	0x2100	; 0x2100 <u8g2_SendBuffer>
    while (1) 
    {
		if (rtc_int_request != 0){
    1c90:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <rtc_int_request>
    1c94:	88 23       	and	r24, r24
    1c96:	09 f4       	brne	.+2      	; 0x1c9a <main+0x176>
    1c98:	5b c1       	rjmp	.+694    	; 0x1f50 <main+0x42c>
			
			rtc_sync(&sys_rtc);
    1c9a:	82 e3       	ldi	r24, 0x32	; 50
    1c9c:	91 e0       	ldi	r25, 0x01	; 1
    1c9e:	0e 94 9a 07 	call	0xf34	; 0xf34 <rtc_sync>
			BAT_VOLT = get_mVolt(ADC5_PIN);
    1ca2:	85 e0       	ldi	r24, 0x05	; 5
    1ca4:	0e 94 b8 05 	call	0xb70	; 0xb70 <get_mVolt>
    1ca8:	90 93 1b 03 	sts	0x031B, r25	; 0x80031b <BAT_VOLT+0x1>
    1cac:	80 93 1a 03 	sts	0x031A, r24	; 0x80031a <BAT_VOLT>
			rtc_int_request = 0;
    1cb0:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <rtc_int_request>
			//sprintf(char_array, "Time: %02d-%02d-20%02d; %02d:%02d:%02d; BAT: %03d\r\n", sys_rtc.date, sys_rtc.month, sys_rtc.year, sys_rtc.hour, sys_rtc.minute, sys_rtc.second, BAT_VOLT);
			sprintf(char_array, "Date: %02d-%02d-20%02d", sys_rtc.date, sys_rtc.month, sys_rtc.year);
    1cb4:	40 91 37 01 	lds	r20, 0x0137	; 0x800137 <sys_rtc+0x5>
    1cb8:	50 91 38 01 	lds	r21, 0x0138	; 0x800138 <sys_rtc+0x6>
    1cbc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <sys_rtc+0x4>
    1cc0:	28 2f       	mov	r18, r24
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sys_rtc+0x3>
    1cc8:	88 2f       	mov	r24, r24
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	65 2f       	mov	r22, r21
    1cce:	6f 93       	push	r22
    1cd0:	4f 93       	push	r20
    1cd2:	43 2f       	mov	r20, r19
    1cd4:	4f 93       	push	r20
    1cd6:	2f 93       	push	r18
    1cd8:	29 2f       	mov	r18, r25
    1cda:	2f 93       	push	r18
    1cdc:	8f 93       	push	r24
    1cde:	85 e7       	ldi	r24, 0x75	; 117
    1ce0:	91 e0       	ldi	r25, 0x01	; 1
    1ce2:	89 2f       	mov	r24, r25
    1ce4:	8f 93       	push	r24
    1ce6:	85 e7       	ldi	r24, 0x75	; 117
    1ce8:	91 e0       	ldi	r25, 0x01	; 1
    1cea:	8f 93       	push	r24
    1cec:	ce 01       	movw	r24, r28
    1cee:	43 96       	adiw	r24, 0x13	; 19
    1cf0:	29 2f       	mov	r18, r25
    1cf2:	2f 93       	push	r18
    1cf4:	8f 93       	push	r24
    1cf6:	0e 94 13 27 	call	0x4e26	; 0x4e26 <sprintf>
    1cfa:	2d b7       	in	r18, 0x3d	; 61
    1cfc:	3e b7       	in	r19, 0x3e	; 62
    1cfe:	26 5f       	subi	r18, 0xF6	; 246
    1d00:	3f 4f       	sbci	r19, 0xFF	; 255
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	de bf       	out	0x3e, r29	; 62
    1d08:	0f be       	out	0x3f, r0	; 63
    1d0a:	cd bf       	out	0x3d, r28	; 61
			u8g2_DrawStr(&lcd, 1, 10, (void *)char_array);
    1d0c:	ce 01       	movw	r24, r28
    1d0e:	43 96       	adiw	r24, 0x13	; 19
    1d10:	9c 01       	movw	r18, r24
    1d12:	4a e0       	ldi	r20, 0x0A	; 10
    1d14:	50 e0       	ldi	r21, 0x00	; 0
    1d16:	61 e0       	ldi	r22, 0x01	; 1
    1d18:	70 e0       	ldi	r23, 0x00	; 0
    1d1a:	8c e1       	ldi	r24, 0x1C	; 28
    1d1c:	97 e0       	ldi	r25, 0x07	; 7
    1d1e:	0e 94 c5 18 	call	0x318a	; 0x318a <u8g2_DrawStr>
			
			sprintf(char_array, "Time: %02d:%02d:%02d", sys_rtc.hour, sys_rtc.minute, sys_rtc.second);
    1d22:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <sys_rtc>
    1d26:	48 2f       	mov	r20, r24
    1d28:	50 e0       	ldi	r21, 0x00	; 0
    1d2a:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <sys_rtc+0x1>
    1d2e:	28 2f       	mov	r18, r24
    1d30:	30 e0       	ldi	r19, 0x00	; 0
    1d32:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <sys_rtc+0x2>
    1d36:	88 2f       	mov	r24, r24
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	65 2f       	mov	r22, r21
    1d3c:	6f 93       	push	r22
    1d3e:	4f 93       	push	r20
    1d40:	43 2f       	mov	r20, r19
    1d42:	4f 93       	push	r20
    1d44:	2f 93       	push	r18
    1d46:	29 2f       	mov	r18, r25
    1d48:	2f 93       	push	r18
    1d4a:	8f 93       	push	r24
    1d4c:	8c e8       	ldi	r24, 0x8C	; 140
    1d4e:	91 e0       	ldi	r25, 0x01	; 1
    1d50:	89 2f       	mov	r24, r25
    1d52:	8f 93       	push	r24
    1d54:	8c e8       	ldi	r24, 0x8C	; 140
    1d56:	91 e0       	ldi	r25, 0x01	; 1
    1d58:	8f 93       	push	r24
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	43 96       	adiw	r24, 0x13	; 19
    1d5e:	29 2f       	mov	r18, r25
    1d60:	2f 93       	push	r18
    1d62:	8f 93       	push	r24
    1d64:	0e 94 13 27 	call	0x4e26	; 0x4e26 <sprintf>
    1d68:	8d b7       	in	r24, 0x3d	; 61
    1d6a:	9e b7       	in	r25, 0x3e	; 62
    1d6c:	0a 96       	adiw	r24, 0x0a	; 10
    1d6e:	0f b6       	in	r0, 0x3f	; 63
    1d70:	f8 94       	cli
    1d72:	de bf       	out	0x3e, r29	; 62
    1d74:	0f be       	out	0x3f, r0	; 63
    1d76:	cd bf       	out	0x3d, r28	; 61
			u8g2_DrawStr(&lcd, 1, 20, (void *)char_array);
    1d78:	ce 01       	movw	r24, r28
    1d7a:	43 96       	adiw	r24, 0x13	; 19
    1d7c:	9c 01       	movw	r18, r24
    1d7e:	44 e1       	ldi	r20, 0x14	; 20
    1d80:	50 e0       	ldi	r21, 0x00	; 0
    1d82:	61 e0       	ldi	r22, 0x01	; 1
    1d84:	70 e0       	ldi	r23, 0x00	; 0
    1d86:	8c e1       	ldi	r24, 0x1C	; 28
    1d88:	97 e0       	ldi	r25, 0x07	; 7
    1d8a:	0e 94 c5 18 	call	0x318a	; 0x318a <u8g2_DrawStr>
			
			sprintf(char_array, "BAT: %03d", BAT_VOLT);
    1d8e:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <BAT_VOLT>
    1d92:	90 91 1b 03 	lds	r25, 0x031B	; 0x80031b <BAT_VOLT+0x1>
    1d96:	29 2f       	mov	r18, r25
    1d98:	2f 93       	push	r18
    1d9a:	8f 93       	push	r24
    1d9c:	81 ea       	ldi	r24, 0xA1	; 161
    1d9e:	91 e0       	ldi	r25, 0x01	; 1
    1da0:	89 2f       	mov	r24, r25
    1da2:	8f 93       	push	r24
    1da4:	81 ea       	ldi	r24, 0xA1	; 161
    1da6:	91 e0       	ldi	r25, 0x01	; 1
    1da8:	8f 93       	push	r24
    1daa:	ce 01       	movw	r24, r28
    1dac:	43 96       	adiw	r24, 0x13	; 19
    1dae:	29 2f       	mov	r18, r25
    1db0:	2f 93       	push	r18
    1db2:	8f 93       	push	r24
    1db4:	0e 94 13 27 	call	0x4e26	; 0x4e26 <sprintf>
    1db8:	0f 90       	pop	r0
    1dba:	0f 90       	pop	r0
    1dbc:	0f 90       	pop	r0
    1dbe:	0f 90       	pop	r0
    1dc0:	0f 90       	pop	r0
    1dc2:	0f 90       	pop	r0
			u8g2_DrawStr(&lcd, 1, 30, (void *)char_array);
    1dc4:	ce 01       	movw	r24, r28
    1dc6:	43 96       	adiw	r24, 0x13	; 19
    1dc8:	9c 01       	movw	r18, r24
    1dca:	4e e1       	ldi	r20, 0x1E	; 30
    1dcc:	50 e0       	ldi	r21, 0x00	; 0
    1dce:	61 e0       	ldi	r22, 0x01	; 1
    1dd0:	70 e0       	ldi	r23, 0x00	; 0
    1dd2:	8c e1       	ldi	r24, 0x1C	; 28
    1dd4:	97 e0       	ldi	r25, 0x07	; 7
    1dd6:	0e 94 c5 18 	call	0x318a	; 0x318a <u8g2_DrawStr>
			
			uint32_t UNIXtime = convert_to_timestamp(&sys_rtc);
    1dda:	82 e3       	ldi	r24, 0x32	; 50
    1ddc:	91 e0       	ldi	r25, 0x01	; 1
    1dde:	0e 94 05 08 	call	0x100a	; 0x100a <convert_to_timestamp>
    1de2:	dc 01       	movw	r26, r24
    1de4:	cb 01       	movw	r24, r22
    1de6:	89 83       	std	Y+1, r24	; 0x01
    1de8:	9a 83       	std	Y+2, r25	; 0x02
    1dea:	ab 83       	std	Y+3, r26	; 0x03
    1dec:	bc 83       	std	Y+4, r27	; 0x04
			sprintf(char_array, "UNIX time %lu", UNIXtime);
    1dee:	8c 81       	ldd	r24, Y+4	; 0x04
    1df0:	8f 93       	push	r24
    1df2:	8b 81       	ldd	r24, Y+3	; 0x03
    1df4:	8f 93       	push	r24
    1df6:	8a 81       	ldd	r24, Y+2	; 0x02
    1df8:	8f 93       	push	r24
    1dfa:	89 81       	ldd	r24, Y+1	; 0x01
    1dfc:	8f 93       	push	r24
    1dfe:	8b ea       	ldi	r24, 0xAB	; 171
    1e00:	91 e0       	ldi	r25, 0x01	; 1
    1e02:	89 2f       	mov	r24, r25
    1e04:	8f 93       	push	r24
    1e06:	8b ea       	ldi	r24, 0xAB	; 171
    1e08:	91 e0       	ldi	r25, 0x01	; 1
    1e0a:	8f 93       	push	r24
    1e0c:	ce 01       	movw	r24, r28
    1e0e:	43 96       	adiw	r24, 0x13	; 19
    1e10:	29 2f       	mov	r18, r25
    1e12:	2f 93       	push	r18
    1e14:	8f 93       	push	r24
    1e16:	0e 94 13 27 	call	0x4e26	; 0x4e26 <sprintf>
    1e1a:	ed b7       	in	r30, 0x3d	; 61
    1e1c:	fe b7       	in	r31, 0x3e	; 62
    1e1e:	38 96       	adiw	r30, 0x08	; 8
    1e20:	0f b6       	in	r0, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	de bf       	out	0x3e, r29	; 62
    1e26:	0f be       	out	0x3f, r0	; 63
    1e28:	cd bf       	out	0x3d, r28	; 61
			u8g2_DrawStr(&lcd, 1, 40, (void *)char_array);
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	43 96       	adiw	r24, 0x13	; 19
    1e2e:	9c 01       	movw	r18, r24
    1e30:	48 e2       	ldi	r20, 0x28	; 40
    1e32:	50 e0       	ldi	r21, 0x00	; 0
    1e34:	61 e0       	ldi	r22, 0x01	; 1
    1e36:	70 e0       	ldi	r23, 0x00	; 0
    1e38:	8c e1       	ldi	r24, 0x1C	; 28
    1e3a:	97 e0       	ldi	r25, 0x07	; 7
    1e3c:	0e 94 c5 18 	call	0x318a	; 0x318a <u8g2_DrawStr>
			
			
			//printf("UNIX time %lu\r\n", UNIXtime);
			
			
			if(BAT_VOLT < BAT_LOW_LEVEL){
    1e40:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <BAT_VOLT>
    1e44:	90 91 1b 03 	lds	r25, 0x031B	; 0x80031b <BAT_VOLT+0x1>
    1e48:	82 37       	cpi	r24, 0x72	; 114
    1e4a:	91 40       	sbci	r25, 0x01	; 1
    1e4c:	08 f0       	brcs	.+2      	; 0x1e50 <main+0x32c>
    1e4e:	72 c0       	rjmp	.+228    	; 0x1f34 <main+0x410>
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	a0 e4       	ldi	r26, 0x40	; 64
    1e56:	b0 e4       	ldi	r27, 0x40	; 64
    1e58:	8d 83       	std	Y+5, r24	; 0x05
    1e5a:	9e 83       	std	Y+6, r25	; 0x06
    1e5c:	af 83       	std	Y+7, r26	; 0x07
    1e5e:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e60:	20 e0       	ldi	r18, 0x00	; 0
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	4a e7       	ldi	r20, 0x7A	; 122
    1e66:	55 e4       	ldi	r21, 0x45	; 69
    1e68:	6d 81       	ldd	r22, Y+5	; 0x05
    1e6a:	7e 81       	ldd	r23, Y+6	; 0x06
    1e6c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e6e:	98 85       	ldd	r25, Y+8	; 0x08
    1e70:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__mulsf3>
    1e74:	dc 01       	movw	r26, r24
    1e76:	cb 01       	movw	r24, r22
    1e78:	89 87       	std	Y+9, r24	; 0x09
    1e7a:	9a 87       	std	Y+10, r25	; 0x0a
    1e7c:	ab 87       	std	Y+11, r26	; 0x0b
    1e7e:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e8       	ldi	r20, 0x80	; 128
    1e86:	5f e3       	ldi	r21, 0x3F	; 63
    1e88:	69 85       	ldd	r22, Y+9	; 0x09
    1e8a:	7a 85       	ldd	r23, Y+10	; 0x0a
    1e8c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e8e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e90:	0e 94 40 25 	call	0x4a80	; 0x4a80 <__cmpsf2>
    1e94:	88 23       	and	r24, r24
    1e96:	2c f4       	brge	.+10     	; 0x1ea2 <main+0x37e>
		__ticks = 1;
    1e98:	81 e0       	ldi	r24, 0x01	; 1
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	9e 87       	std	Y+14, r25	; 0x0e
    1e9e:	8d 87       	std	Y+13, r24	; 0x0d
    1ea0:	3f c0       	rjmp	.+126    	; 0x1f20 <main+0x3fc>
	else if (__tmp > 65535)
    1ea2:	20 e0       	ldi	r18, 0x00	; 0
    1ea4:	3f ef       	ldi	r19, 0xFF	; 255
    1ea6:	4f e7       	ldi	r20, 0x7F	; 127
    1ea8:	57 e4       	ldi	r21, 0x47	; 71
    1eaa:	69 85       	ldd	r22, Y+9	; 0x09
    1eac:	7a 85       	ldd	r23, Y+10	; 0x0a
    1eae:	8b 85       	ldd	r24, Y+11	; 0x0b
    1eb0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1eb2:	0e 94 fe 25 	call	0x4bfc	; 0x4bfc <__gesf2>
    1eb6:	18 16       	cp	r1, r24
    1eb8:	4c f5       	brge	.+82     	; 0x1f0c <main+0x3e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eba:	20 e0       	ldi	r18, 0x00	; 0
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	40 e2       	ldi	r20, 0x20	; 32
    1ec0:	51 e4       	ldi	r21, 0x41	; 65
    1ec2:	6d 81       	ldd	r22, Y+5	; 0x05
    1ec4:	7e 81       	ldd	r23, Y+6	; 0x06
    1ec6:	8f 81       	ldd	r24, Y+7	; 0x07
    1ec8:	98 85       	ldd	r25, Y+8	; 0x08
    1eca:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__mulsf3>
    1ece:	dc 01       	movw	r26, r24
    1ed0:	cb 01       	movw	r24, r22
    1ed2:	bc 01       	movw	r22, r24
    1ed4:	cd 01       	movw	r24, r26
    1ed6:	0e 94 45 25 	call	0x4a8a	; 0x4a8a <__fixunssfsi>
    1eda:	dc 01       	movw	r26, r24
    1edc:	cb 01       	movw	r24, r22
    1ede:	9e 87       	std	Y+14, r25	; 0x0e
    1ee0:	8d 87       	std	Y+13, r24	; 0x0d
    1ee2:	0f c0       	rjmp	.+30     	; 0x1f02 <main+0x3de>
    1ee4:	80 e9       	ldi	r24, 0x90	; 144
    1ee6:	91 e0       	ldi	r25, 0x01	; 1
    1ee8:	98 8b       	std	Y+16, r25	; 0x10
    1eea:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1eec:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eee:	98 89       	ldd	r25, Y+16	; 0x10
    1ef0:	01 97       	sbiw	r24, 0x01	; 1
    1ef2:	f1 f7       	brne	.-4      	; 0x1ef0 <main+0x3cc>
    1ef4:	98 8b       	std	Y+16, r25	; 0x10
    1ef6:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ef8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1efa:	9e 85       	ldd	r25, Y+14	; 0x0e
    1efc:	01 97       	sbiw	r24, 0x01	; 1
    1efe:	9e 87       	std	Y+14, r25	; 0x0e
    1f00:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f02:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f04:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f06:	89 2b       	or	r24, r25
    1f08:	69 f7       	brne	.-38     	; 0x1ee4 <main+0x3c0>
    1f0a:	14 c0       	rjmp	.+40     	; 0x1f34 <main+0x410>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f0c:	69 85       	ldd	r22, Y+9	; 0x09
    1f0e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1f10:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f12:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f14:	0e 94 45 25 	call	0x4a8a	; 0x4a8a <__fixunssfsi>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	9e 87       	std	Y+14, r25	; 0x0e
    1f1e:	8d 87       	std	Y+13, r24	; 0x0d
    1f20:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f22:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f24:	9a 8b       	std	Y+18, r25	; 0x12
    1f26:	89 8b       	std	Y+17, r24	; 0x11
    1f28:	89 89       	ldd	r24, Y+17	; 0x11
    1f2a:	9a 89       	ldd	r25, Y+18	; 0x12
    1f2c:	01 97       	sbiw	r24, 0x01	; 1
    1f2e:	f1 f7       	brne	.-4      	; 0x1f2c <main+0x408>
    1f30:	9a 8b       	std	Y+18, r25	; 0x12
    1f32:	89 8b       	std	Y+17, r24	; 0x11
				_delay_ms(3);	
			}
			gpio_set_pin_level(&ext_led , true);
    1f34:	61 e0       	ldi	r22, 0x01	; 1
    1f36:	8c e2       	ldi	r24, 0x2C	; 44
    1f38:	91 e0       	ldi	r25, 0x01	; 1
    1f3a:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
			u8g2_SendBuffer(&lcd);
    1f3e:	8c e1       	ldi	r24, 0x1C	; 28
    1f40:	97 e0       	ldi	r25, 0x07	; 7
    1f42:	0e 94 80 10 	call	0x2100	; 0x2100 <u8g2_SendBuffer>
			gpio_set_pin_level(&ext_led , false);
    1f46:	60 e0       	ldi	r22, 0x00	; 0
    1f48:	8c e2       	ldi	r24, 0x2C	; 44
    1f4a:	91 e0       	ldi	r25, 0x01	; 1
    1f4c:	0e 94 85 06 	call	0xd0a	; 0xd0a <gpio_set_pin_level>
			
		}
		
		sleep_cpu();	
    1f50:	88 95       	sleep
    }
    1f52:	9e ce       	rjmp	.-708    	; 0x1c90 <main+0x16c>

00001f54 <u8g2_ClearBuffer>:
#include "u8g2.h"
#include <string.h>

/*============================================*/
void u8g2_ClearBuffer(u8g2_t *u8g2)
{
    1f54:	cf 93       	push	r28
    1f56:	df 93       	push	r29
    1f58:	00 d0       	rcall	.+0      	; 0x1f5a <u8g2_ClearBuffer+0x6>
    1f5a:	00 d0       	rcall	.+0      	; 0x1f5c <u8g2_ClearBuffer+0x8>
    1f5c:	cd b7       	in	r28, 0x3d	; 61
    1f5e:	de b7       	in	r29, 0x3e	; 62
    1f60:	9c 83       	std	Y+4, r25	; 0x04
    1f62:	8b 83       	std	Y+3, r24	; 0x03
  size_t cnt;
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1f64:	8b 81       	ldd	r24, Y+3	; 0x03
    1f66:	9c 81       	ldd	r25, Y+4	; 0x04
    1f68:	fc 01       	movw	r30, r24
    1f6a:	80 81       	ld	r24, Z
    1f6c:	91 81       	ldd	r25, Z+1	; 0x01
    1f6e:	fc 01       	movw	r30, r24
    1f70:	80 89       	ldd	r24, Z+16	; 0x10
    1f72:	88 2f       	mov	r24, r24
    1f74:	90 e0       	ldi	r25, 0x00	; 0
    1f76:	9a 83       	std	Y+2, r25	; 0x02
    1f78:	89 83       	std	Y+1, r24	; 0x01
  cnt *= u8g2->tile_buf_height;
    1f7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f7e:	fc 01       	movw	r30, r24
    1f80:	84 a1       	ldd	r24, Z+36	; 0x24
    1f82:	28 2f       	mov	r18, r24
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	49 81       	ldd	r20, Y+1	; 0x01
    1f88:	5a 81       	ldd	r21, Y+2	; 0x02
    1f8a:	42 9f       	mul	r20, r18
    1f8c:	c0 01       	movw	r24, r0
    1f8e:	43 9f       	mul	r20, r19
    1f90:	90 0d       	add	r25, r0
    1f92:	52 9f       	mul	r21, r18
    1f94:	90 0d       	add	r25, r0
    1f96:	11 24       	eor	r1, r1
    1f98:	9a 83       	std	Y+2, r25	; 0x02
    1f9a:	89 83       	std	Y+1, r24	; 0x01
  cnt *= 8;
    1f9c:	89 81       	ldd	r24, Y+1	; 0x01
    1f9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa0:	88 0f       	add	r24, r24
    1fa2:	99 1f       	adc	r25, r25
    1fa4:	88 0f       	add	r24, r24
    1fa6:	99 1f       	adc	r25, r25
    1fa8:	88 0f       	add	r24, r24
    1faa:	99 1f       	adc	r25, r25
    1fac:	9a 83       	std	Y+2, r25	; 0x02
    1fae:	89 83       	std	Y+1, r24	; 0x01
  memset(u8g2->tile_buf_ptr, 0, cnt);
    1fb0:	8b 81       	ldd	r24, Y+3	; 0x03
    1fb2:	9c 81       	ldd	r25, Y+4	; 0x04
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	82 a1       	ldd	r24, Z+34	; 0x22
    1fb8:	93 a1       	ldd	r25, Z+35	; 0x23
    1fba:	29 81       	ldd	r18, Y+1	; 0x01
    1fbc:	3a 81       	ldd	r19, Y+2	; 0x02
    1fbe:	a9 01       	movw	r20, r18
    1fc0:	60 e0       	ldi	r22, 0x00	; 0
    1fc2:	70 e0       	ldi	r23, 0x00	; 0
    1fc4:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <memset>
}
    1fc8:	00 00       	nop
    1fca:	0f 90       	pop	r0
    1fcc:	0f 90       	pop	r0
    1fce:	0f 90       	pop	r0
    1fd0:	0f 90       	pop	r0
    1fd2:	df 91       	pop	r29
    1fd4:	cf 91       	pop	r28
    1fd6:	08 95       	ret

00001fd8 <u8g2_send_tile_row>:

/*============================================*/

static void u8g2_send_tile_row(u8g2_t *u8g2, uint8_t src_tile_row, uint8_t dest_tile_row)
{
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	cf 93       	push	r28
    1fde:	df 93       	push	r29
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	29 97       	sbiw	r28, 0x09	; 9
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	de bf       	out	0x3e, r29	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	cd bf       	out	0x3d, r28	; 61
    1ff0:	9f 83       	std	Y+7, r25	; 0x07
    1ff2:	8e 83       	std	Y+6, r24	; 0x06
    1ff4:	68 87       	std	Y+8, r22	; 0x08
    1ff6:	49 87       	std	Y+9, r20	; 0x09
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1ff8:	8e 81       	ldd	r24, Y+6	; 0x06
    1ffa:	9f 81       	ldd	r25, Y+7	; 0x07
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	80 81       	ld	r24, Z
    2000:	91 81       	ldd	r25, Z+1	; 0x01
    2002:	fc 01       	movw	r30, r24
    2004:	80 89       	ldd	r24, Z+16	; 0x10
    2006:	89 83       	std	Y+1, r24	; 0x01
  offset = src_tile_row;
    2008:	88 85       	ldd	r24, Y+8	; 0x08
    200a:	88 2f       	mov	r24, r24
    200c:	90 e0       	ldi	r25, 0x00	; 0
    200e:	9b 83       	std	Y+3, r25	; 0x03
    2010:	8a 83       	std	Y+2, r24	; 0x02
  ptr = u8g2->tile_buf_ptr;
    2012:	8e 81       	ldd	r24, Y+6	; 0x06
    2014:	9f 81       	ldd	r25, Y+7	; 0x07
    2016:	fc 01       	movw	r30, r24
    2018:	82 a1       	ldd	r24, Z+34	; 0x22
    201a:	93 a1       	ldd	r25, Z+35	; 0x23
    201c:	9d 83       	std	Y+5, r25	; 0x05
    201e:	8c 83       	std	Y+4, r24	; 0x04
  offset *= w;
    2020:	89 81       	ldd	r24, Y+1	; 0x01
    2022:	28 2f       	mov	r18, r24
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	4a 81       	ldd	r20, Y+2	; 0x02
    2028:	5b 81       	ldd	r21, Y+3	; 0x03
    202a:	42 9f       	mul	r20, r18
    202c:	c0 01       	movw	r24, r0
    202e:	43 9f       	mul	r20, r19
    2030:	90 0d       	add	r25, r0
    2032:	52 9f       	mul	r21, r18
    2034:	90 0d       	add	r25, r0
    2036:	11 24       	eor	r1, r1
    2038:	9b 83       	std	Y+3, r25	; 0x03
    203a:	8a 83       	std	Y+2, r24	; 0x02
  offset *= 8;
    203c:	8a 81       	ldd	r24, Y+2	; 0x02
    203e:	9b 81       	ldd	r25, Y+3	; 0x03
    2040:	88 0f       	add	r24, r24
    2042:	99 1f       	adc	r25, r25
    2044:	88 0f       	add	r24, r24
    2046:	99 1f       	adc	r25, r25
    2048:	88 0f       	add	r24, r24
    204a:	99 1f       	adc	r25, r25
    204c:	9b 83       	std	Y+3, r25	; 0x03
    204e:	8a 83       	std	Y+2, r24	; 0x02
  ptr += offset;
    2050:	2c 81       	ldd	r18, Y+4	; 0x04
    2052:	3d 81       	ldd	r19, Y+5	; 0x05
    2054:	8a 81       	ldd	r24, Y+2	; 0x02
    2056:	9b 81       	ldd	r25, Y+3	; 0x03
    2058:	82 0f       	add	r24, r18
    205a:	93 1f       	adc	r25, r19
    205c:	9d 83       	std	Y+5, r25	; 0x05
    205e:	8c 83       	std	Y+4, r24	; 0x04
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
    2060:	2c 81       	ldd	r18, Y+4	; 0x04
    2062:	3d 81       	ldd	r19, Y+5	; 0x05
    2064:	8e 81       	ldd	r24, Y+6	; 0x06
    2066:	9f 81       	ldd	r25, Y+7	; 0x07
    2068:	89 01       	movw	r16, r18
    206a:	29 81       	ldd	r18, Y+1	; 0x01
    206c:	49 85       	ldd	r20, Y+9	; 0x09
    206e:	60 e0       	ldi	r22, 0x00	; 0
    2070:	0e 94 77 22 	call	0x44ee	; 0x44ee <u8x8_DrawTile>
}
    2074:	00 00       	nop
    2076:	29 96       	adiw	r28, 0x09	; 9
    2078:	0f b6       	in	r0, 0x3f	; 63
    207a:	f8 94       	cli
    207c:	de bf       	out	0x3e, r29	; 62
    207e:	0f be       	out	0x3f, r0	; 63
    2080:	cd bf       	out	0x3d, r28	; 61
    2082:	df 91       	pop	r29
    2084:	cf 91       	pop	r28
    2086:	1f 91       	pop	r17
    2088:	0f 91       	pop	r16
    208a:	08 95       	ret

0000208c <u8g2_send_buffer>:
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    208c:	cf 93       	push	r28
    208e:	df 93       	push	r29
    2090:	00 d0       	rcall	.+0      	; 0x2092 <u8g2_send_buffer+0x6>
    2092:	00 d0       	rcall	.+0      	; 0x2094 <u8g2_send_buffer+0x8>
    2094:	00 d0       	rcall	.+0      	; 0x2096 <u8g2_send_buffer+0xa>
    2096:	cd b7       	in	r28, 0x3d	; 61
    2098:	de b7       	in	r29, 0x3e	; 62
    209a:	9e 83       	std	Y+6, r25	; 0x06
    209c:	8d 83       	std	Y+5, r24	; 0x05
  uint8_t src_row;
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
    209e:	19 82       	std	Y+1, r1	; 0x01
  src_max = u8g2->tile_buf_height;
    20a0:	8d 81       	ldd	r24, Y+5	; 0x05
    20a2:	9e 81       	ldd	r25, Y+6	; 0x06
    20a4:	fc 01       	movw	r30, r24
    20a6:	84 a1       	ldd	r24, Z+36	; 0x24
    20a8:	8b 83       	std	Y+3, r24	; 0x03
  dest_row = u8g2->tile_curr_row;
    20aa:	8d 81       	ldd	r24, Y+5	; 0x05
    20ac:	9e 81       	ldd	r25, Y+6	; 0x06
    20ae:	fc 01       	movw	r30, r24
    20b0:	85 a1       	ldd	r24, Z+37	; 0x25
    20b2:	8a 83       	std	Y+2, r24	; 0x02
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    20b4:	8d 81       	ldd	r24, Y+5	; 0x05
    20b6:	9e 81       	ldd	r25, Y+6	; 0x06
    20b8:	fc 01       	movw	r30, r24
    20ba:	80 81       	ld	r24, Z
    20bc:	91 81       	ldd	r25, Z+1	; 0x01
    20be:	fc 01       	movw	r30, r24
    20c0:	81 89       	ldd	r24, Z+17	; 0x11
    20c2:	8c 83       	std	Y+4, r24	; 0x04
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    20c4:	8d 81       	ldd	r24, Y+5	; 0x05
    20c6:	9e 81       	ldd	r25, Y+6	; 0x06
    20c8:	4a 81       	ldd	r20, Y+2	; 0x02
    20ca:	69 81       	ldd	r22, Y+1	; 0x01
    20cc:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <u8g2_send_tile_row>
    src_row++;
    20d0:	89 81       	ldd	r24, Y+1	; 0x01
    20d2:	8f 5f       	subi	r24, 0xFF	; 255
    20d4:	89 83       	std	Y+1, r24	; 0x01
    dest_row++;
    20d6:	8a 81       	ldd	r24, Y+2	; 0x02
    20d8:	8f 5f       	subi	r24, 0xFF	; 255
    20da:	8a 83       	std	Y+2, r24	; 0x02
  } while( src_row < src_max && dest_row < dest_max );
    20dc:	99 81       	ldd	r25, Y+1	; 0x01
    20de:	8b 81       	ldd	r24, Y+3	; 0x03
    20e0:	98 17       	cp	r25, r24
    20e2:	20 f4       	brcc	.+8      	; 0x20ec <u8g2_send_buffer+0x60>
    20e4:	9a 81       	ldd	r25, Y+2	; 0x02
    20e6:	8c 81       	ldd	r24, Y+4	; 0x04
    20e8:	98 17       	cp	r25, r24
    20ea:	60 f3       	brcs	.-40     	; 0x20c4 <u8g2_send_buffer+0x38>
}
    20ec:	00 00       	nop
    20ee:	26 96       	adiw	r28, 0x06	; 6
    20f0:	0f b6       	in	r0, 0x3f	; 63
    20f2:	f8 94       	cli
    20f4:	de bf       	out	0x3e, r29	; 62
    20f6:	0f be       	out	0x3f, r0	; 63
    20f8:	cd bf       	out	0x3d, r28	; 61
    20fa:	df 91       	pop	r29
    20fc:	cf 91       	pop	r28
    20fe:	08 95       	ret

00002100 <u8g2_SendBuffer>:

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
    2100:	cf 93       	push	r28
    2102:	df 93       	push	r29
    2104:	00 d0       	rcall	.+0      	; 0x2106 <u8g2_SendBuffer+0x6>
    2106:	cd b7       	in	r28, 0x3d	; 61
    2108:	de b7       	in	r29, 0x3e	; 62
    210a:	9a 83       	std	Y+2, r25	; 0x02
    210c:	89 83       	std	Y+1, r24	; 0x01
  u8g2_send_buffer(u8g2);
    210e:	89 81       	ldd	r24, Y+1	; 0x01
    2110:	9a 81       	ldd	r25, Y+2	; 0x02
    2112:	0e 94 46 10 	call	0x208c	; 0x208c <u8g2_send_buffer>
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    2116:	89 81       	ldd	r24, Y+1	; 0x01
    2118:	9a 81       	ldd	r25, Y+2	; 0x02
    211a:	0e 94 3e 23 	call	0x467c	; 0x467c <u8x8_RefreshDisplay>
}
    211e:	00 00       	nop
    2120:	0f 90       	pop	r0
    2122:	0f 90       	pop	r0
    2124:	df 91       	pop	r29
    2126:	cf 91       	pop	r28
    2128:	08 95       	ret

0000212a <u8g2_m_16_8_f>:
  *page_cnt = 2;
  return buf;
  #endif
}
uint8_t *u8g2_m_16_8_f(uint8_t *page_cnt)
{
    212a:	cf 93       	push	r28
    212c:	df 93       	push	r29
    212e:	00 d0       	rcall	.+0      	; 0x2130 <u8g2_m_16_8_f+0x6>
    2130:	cd b7       	in	r28, 0x3d	; 61
    2132:	de b7       	in	r29, 0x3e	; 62
    2134:	9a 83       	std	Y+2, r25	; 0x02
    2136:	89 83       	std	Y+1, r24	; 0x01
  #ifdef U8G2_USE_DYNAMIC_ALLOC
  *page_cnt = 8;
  return 0;
  #else
  static uint8_t buf[1024];
  *page_cnt = 8;
    2138:	89 81       	ldd	r24, Y+1	; 0x01
    213a:	9a 81       	ldd	r25, Y+2	; 0x02
    213c:	28 e0       	ldi	r18, 0x08	; 8
    213e:	fc 01       	movw	r30, r24
    2140:	20 83       	st	Z, r18
  return buf;
    2142:	8c e1       	ldi	r24, 0x1C	; 28
    2144:	93 e0       	ldi	r25, 0x03	; 3
  #endif
}
    2146:	0f 90       	pop	r0
    2148:	0f 90       	pop	r0
    214a:	df 91       	pop	r29
    214c:	cf 91       	pop	r28
    214e:	08 95       	ret

00002150 <u8g2_Setup_st7565_zolen_128x64_f>:
  u8g2_SetupDisplay(u8g2, u8x8_d_st7565_64128n, u8x8_cad_001, byte_cb, gpio_and_delay_cb);
  buf = u8g2_m_16_8_f(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
}
void u8g2_Setup_st7565_zolen_128x64_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    2150:	0f 93       	push	r16
    2152:	1f 93       	push	r17
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	cd b7       	in	r28, 0x3d	; 61
    215a:	de b7       	in	r29, 0x3e	; 62
    215c:	2b 97       	sbiw	r28, 0x0b	; 11
    215e:	0f b6       	in	r0, 0x3f	; 63
    2160:	f8 94       	cli
    2162:	de bf       	out	0x3e, r29	; 62
    2164:	0f be       	out	0x3f, r0	; 63
    2166:	cd bf       	out	0x3d, r28	; 61
    2168:	9d 83       	std	Y+5, r25	; 0x05
    216a:	8c 83       	std	Y+4, r24	; 0x04
    216c:	7f 83       	std	Y+7, r23	; 0x07
    216e:	6e 83       	std	Y+6, r22	; 0x06
    2170:	59 87       	std	Y+9, r21	; 0x09
    2172:	48 87       	std	Y+8, r20	; 0x08
    2174:	3b 87       	std	Y+11, r19	; 0x0b
    2176:	2a 87       	std	Y+10, r18	; 0x0a
  uint8_t tile_buf_height;
  uint8_t *buf;
  u8g2_SetupDisplay(u8g2, u8x8_d_st7565_zolen_128x64, u8x8_cad_001, byte_cb, gpio_and_delay_cb);
    2178:	4a 85       	ldd	r20, Y+10	; 0x0a
    217a:	5b 85       	ldd	r21, Y+11	; 0x0b
    217c:	28 85       	ldd	r18, Y+8	; 0x08
    217e:	39 85       	ldd	r19, Y+9	; 0x09
    2180:	8c 81       	ldd	r24, Y+4	; 0x04
    2182:	9d 81       	ldd	r25, Y+5	; 0x05
    2184:	8a 01       	movw	r16, r20
    2186:	46 e9       	ldi	r20, 0x96	; 150
    2188:	51 e2       	ldi	r21, 0x21	; 33
    218a:	64 e1       	ldi	r22, 0x14	; 20
    218c:	74 e2       	ldi	r23, 0x24	; 36
    218e:	0e 94 fa 24 	call	0x49f4	; 0x49f4 <u8x8_Setup>
  buf = u8g2_m_16_8_f(&tile_buf_height);
    2192:	ce 01       	movw	r24, r28
    2194:	03 96       	adiw	r24, 0x03	; 3
    2196:	0e 94 95 10 	call	0x212a	; 0x212a <u8g2_m_16_8_f>
    219a:	9a 83       	std	Y+2, r25	; 0x02
    219c:	89 83       	std	Y+1, r24	; 0x01
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
    219e:	4b 81       	ldd	r20, Y+3	; 0x03
    21a0:	2e 81       	ldd	r18, Y+6	; 0x06
    21a2:	3f 81       	ldd	r19, Y+7	; 0x07
    21a4:	69 81       	ldd	r22, Y+1	; 0x01
    21a6:	7a 81       	ldd	r23, Y+2	; 0x02
    21a8:	8c 81       	ldd	r24, Y+4	; 0x04
    21aa:	9d 81       	ldd	r25, Y+5	; 0x05
    21ac:	89 01       	movw	r16, r18
    21ae:	2e e3       	ldi	r18, 0x3E	; 62
    21b0:	3c e1       	ldi	r19, 0x1C	; 28
    21b2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <u8g2_SetupBuffer>
}
    21b6:	00 00       	nop
    21b8:	2b 96       	adiw	r28, 0x0b	; 11
    21ba:	0f b6       	in	r0, 0x3f	; 63
    21bc:	f8 94       	cli
    21be:	de bf       	out	0x3e, r29	; 62
    21c0:	0f be       	out	0x3f, r0	; 63
    21c2:	cd bf       	out	0x3d, r28	; 61
    21c4:	df 91       	pop	r29
    21c6:	cf 91       	pop	r28
    21c8:	1f 91       	pop	r17
    21ca:	0f 91       	pop	r16
    21cc:	08 95       	ret

000021ce <u8g2_font_get_byte>:
}

void u8g2_SetFontPosCenter(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_center;
}
    21ce:	cf 93       	push	r28
    21d0:	df 93       	push	r29
    21d2:	00 d0       	rcall	.+0      	; 0x21d4 <u8g2_font_get_byte+0x6>
    21d4:	00 d0       	rcall	.+0      	; 0x21d6 <u8g2_font_get_byte+0x8>
    21d6:	00 d0       	rcall	.+0      	; 0x21d8 <u8g2_font_get_byte+0xa>
    21d8:	cd b7       	in	r28, 0x3d	; 61
    21da:	de b7       	in	r29, 0x3e	; 62
    21dc:	9d 83       	std	Y+5, r25	; 0x05
    21de:	8c 83       	std	Y+4, r24	; 0x04
    21e0:	6e 83       	std	Y+6, r22	; 0x06
    21e2:	8e 81       	ldd	r24, Y+6	; 0x06
    21e4:	88 2f       	mov	r24, r24
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	2c 81       	ldd	r18, Y+4	; 0x04
    21ea:	3d 81       	ldd	r19, Y+5	; 0x05
    21ec:	82 0f       	add	r24, r18
    21ee:	93 1f       	adc	r25, r19
    21f0:	9d 83       	std	Y+5, r25	; 0x05
    21f2:	8c 83       	std	Y+4, r24	; 0x04
    21f4:	8c 81       	ldd	r24, Y+4	; 0x04
    21f6:	9d 81       	ldd	r25, Y+5	; 0x05
    21f8:	9a 83       	std	Y+2, r25	; 0x02
    21fa:	89 83       	std	Y+1, r24	; 0x01
    21fc:	89 81       	ldd	r24, Y+1	; 0x01
    21fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2200:	fc 01       	movw	r30, r24
    2202:	84 91       	lpm	r24, Z
    2204:	8b 83       	std	Y+3, r24	; 0x03
    2206:	8b 81       	ldd	r24, Y+3	; 0x03
    2208:	26 96       	adiw	r28, 0x06	; 6
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	f8 94       	cli
    220e:	de bf       	out	0x3e, r29	; 62
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	cd bf       	out	0x3d, r28	; 61
    2214:	df 91       	pop	r29
    2216:	cf 91       	pop	r28
    2218:	08 95       	ret

0000221a <u8g2_font_get_word>:
    221a:	cf 93       	push	r28
    221c:	df 93       	push	r29
    221e:	cd b7       	in	r28, 0x3d	; 61
    2220:	de b7       	in	r29, 0x3e	; 62
    2222:	2b 97       	sbiw	r28, 0x0b	; 11
    2224:	0f b6       	in	r0, 0x3f	; 63
    2226:	f8 94       	cli
    2228:	de bf       	out	0x3e, r29	; 62
    222a:	0f be       	out	0x3f, r0	; 63
    222c:	cd bf       	out	0x3d, r28	; 61
    222e:	9a 87       	std	Y+10, r25	; 0x0a
    2230:	89 87       	std	Y+9, r24	; 0x09
    2232:	6b 87       	std	Y+11, r22	; 0x0b
    2234:	8b 85       	ldd	r24, Y+11	; 0x0b
    2236:	88 2f       	mov	r24, r24
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	29 85       	ldd	r18, Y+9	; 0x09
    223c:	3a 85       	ldd	r19, Y+10	; 0x0a
    223e:	82 0f       	add	r24, r18
    2240:	93 1f       	adc	r25, r19
    2242:	9a 87       	std	Y+10, r25	; 0x0a
    2244:	89 87       	std	Y+9, r24	; 0x09
    2246:	89 85       	ldd	r24, Y+9	; 0x09
    2248:	9a 85       	ldd	r25, Y+10	; 0x0a
    224a:	9a 83       	std	Y+2, r25	; 0x02
    224c:	89 83       	std	Y+1, r24	; 0x01
    224e:	89 81       	ldd	r24, Y+1	; 0x01
    2250:	9a 81       	ldd	r25, Y+2	; 0x02
    2252:	fc 01       	movw	r30, r24
    2254:	84 91       	lpm	r24, Z
    2256:	8b 83       	std	Y+3, r24	; 0x03
    2258:	8b 81       	ldd	r24, Y+3	; 0x03
    225a:	88 2f       	mov	r24, r24
    225c:	90 e0       	ldi	r25, 0x00	; 0
    225e:	9d 83       	std	Y+5, r25	; 0x05
    2260:	8c 83       	std	Y+4, r24	; 0x04
    2262:	89 85       	ldd	r24, Y+9	; 0x09
    2264:	9a 85       	ldd	r25, Y+10	; 0x0a
    2266:	01 96       	adiw	r24, 0x01	; 1
    2268:	9a 87       	std	Y+10, r25	; 0x0a
    226a:	89 87       	std	Y+9, r24	; 0x09
    226c:	8c 81       	ldd	r24, Y+4	; 0x04
    226e:	9d 81       	ldd	r25, Y+5	; 0x05
    2270:	98 2f       	mov	r25, r24
    2272:	88 27       	eor	r24, r24
    2274:	9d 83       	std	Y+5, r25	; 0x05
    2276:	8c 83       	std	Y+4, r24	; 0x04
    2278:	89 85       	ldd	r24, Y+9	; 0x09
    227a:	9a 85       	ldd	r25, Y+10	; 0x0a
    227c:	9f 83       	std	Y+7, r25	; 0x07
    227e:	8e 83       	std	Y+6, r24	; 0x06
    2280:	8e 81       	ldd	r24, Y+6	; 0x06
    2282:	9f 81       	ldd	r25, Y+7	; 0x07
    2284:	fc 01       	movw	r30, r24
    2286:	84 91       	lpm	r24, Z
    2288:	88 87       	std	Y+8, r24	; 0x08
    228a:	88 85       	ldd	r24, Y+8	; 0x08
    228c:	88 2f       	mov	r24, r24
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	2c 81       	ldd	r18, Y+4	; 0x04
    2292:	3d 81       	ldd	r19, Y+5	; 0x05
    2294:	82 0f       	add	r24, r18
    2296:	93 1f       	adc	r25, r19
    2298:	9d 83       	std	Y+5, r25	; 0x05
    229a:	8c 83       	std	Y+4, r24	; 0x04
    229c:	8c 81       	ldd	r24, Y+4	; 0x04
    229e:	9d 81       	ldd	r25, Y+5	; 0x05
    22a0:	2b 96       	adiw	r28, 0x0b	; 11
    22a2:	0f b6       	in	r0, 0x3f	; 63
    22a4:	f8 94       	cli
    22a6:	de bf       	out	0x3e, r29	; 62
    22a8:	0f be       	out	0x3f, r0	; 63
    22aa:	cd bf       	out	0x3d, r28	; 61
    22ac:	df 91       	pop	r29
    22ae:	cf 91       	pop	r28
    22b0:	08 95       	ret

000022b2 <u8g2_read_font_info>:
    22b2:	cf 93       	push	r28
    22b4:	df 93       	push	r29
    22b6:	00 d0       	rcall	.+0      	; 0x22b8 <u8g2_read_font_info+0x6>
    22b8:	00 d0       	rcall	.+0      	; 0x22ba <u8g2_read_font_info+0x8>
    22ba:	cd b7       	in	r28, 0x3d	; 61
    22bc:	de b7       	in	r29, 0x3e	; 62
    22be:	9a 83       	std	Y+2, r25	; 0x02
    22c0:	89 83       	std	Y+1, r24	; 0x01
    22c2:	7c 83       	std	Y+4, r23	; 0x04
    22c4:	6b 83       	std	Y+3, r22	; 0x03
    22c6:	8b 81       	ldd	r24, Y+3	; 0x03
    22c8:	9c 81       	ldd	r25, Y+4	; 0x04
    22ca:	60 e0       	ldi	r22, 0x00	; 0
    22cc:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    22d0:	28 2f       	mov	r18, r24
    22d2:	89 81       	ldd	r24, Y+1	; 0x01
    22d4:	9a 81       	ldd	r25, Y+2	; 0x02
    22d6:	fc 01       	movw	r30, r24
    22d8:	20 83       	st	Z, r18
    22da:	8b 81       	ldd	r24, Y+3	; 0x03
    22dc:	9c 81       	ldd	r25, Y+4	; 0x04
    22de:	61 e0       	ldi	r22, 0x01	; 1
    22e0:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    22e4:	28 2f       	mov	r18, r24
    22e6:	89 81       	ldd	r24, Y+1	; 0x01
    22e8:	9a 81       	ldd	r25, Y+2	; 0x02
    22ea:	fc 01       	movw	r30, r24
    22ec:	21 83       	std	Z+1, r18	; 0x01
    22ee:	8b 81       	ldd	r24, Y+3	; 0x03
    22f0:	9c 81       	ldd	r25, Y+4	; 0x04
    22f2:	62 e0       	ldi	r22, 0x02	; 2
    22f4:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    22f8:	28 2f       	mov	r18, r24
    22fa:	89 81       	ldd	r24, Y+1	; 0x01
    22fc:	9a 81       	ldd	r25, Y+2	; 0x02
    22fe:	fc 01       	movw	r30, r24
    2300:	22 83       	std	Z+2, r18	; 0x02
    2302:	8b 81       	ldd	r24, Y+3	; 0x03
    2304:	9c 81       	ldd	r25, Y+4	; 0x04
    2306:	63 e0       	ldi	r22, 0x03	; 3
    2308:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    230c:	28 2f       	mov	r18, r24
    230e:	89 81       	ldd	r24, Y+1	; 0x01
    2310:	9a 81       	ldd	r25, Y+2	; 0x02
    2312:	fc 01       	movw	r30, r24
    2314:	23 83       	std	Z+3, r18	; 0x03
    2316:	8b 81       	ldd	r24, Y+3	; 0x03
    2318:	9c 81       	ldd	r25, Y+4	; 0x04
    231a:	64 e0       	ldi	r22, 0x04	; 4
    231c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2320:	28 2f       	mov	r18, r24
    2322:	89 81       	ldd	r24, Y+1	; 0x01
    2324:	9a 81       	ldd	r25, Y+2	; 0x02
    2326:	fc 01       	movw	r30, r24
    2328:	24 83       	std	Z+4, r18	; 0x04
    232a:	8b 81       	ldd	r24, Y+3	; 0x03
    232c:	9c 81       	ldd	r25, Y+4	; 0x04
    232e:	65 e0       	ldi	r22, 0x05	; 5
    2330:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2334:	28 2f       	mov	r18, r24
    2336:	89 81       	ldd	r24, Y+1	; 0x01
    2338:	9a 81       	ldd	r25, Y+2	; 0x02
    233a:	fc 01       	movw	r30, r24
    233c:	25 83       	std	Z+5, r18	; 0x05
    233e:	8b 81       	ldd	r24, Y+3	; 0x03
    2340:	9c 81       	ldd	r25, Y+4	; 0x04
    2342:	66 e0       	ldi	r22, 0x06	; 6
    2344:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2348:	28 2f       	mov	r18, r24
    234a:	89 81       	ldd	r24, Y+1	; 0x01
    234c:	9a 81       	ldd	r25, Y+2	; 0x02
    234e:	fc 01       	movw	r30, r24
    2350:	26 83       	std	Z+6, r18	; 0x06
    2352:	8b 81       	ldd	r24, Y+3	; 0x03
    2354:	9c 81       	ldd	r25, Y+4	; 0x04
    2356:	67 e0       	ldi	r22, 0x07	; 7
    2358:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    235c:	28 2f       	mov	r18, r24
    235e:	89 81       	ldd	r24, Y+1	; 0x01
    2360:	9a 81       	ldd	r25, Y+2	; 0x02
    2362:	fc 01       	movw	r30, r24
    2364:	27 83       	std	Z+7, r18	; 0x07
    2366:	8b 81       	ldd	r24, Y+3	; 0x03
    2368:	9c 81       	ldd	r25, Y+4	; 0x04
    236a:	68 e0       	ldi	r22, 0x08	; 8
    236c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2370:	28 2f       	mov	r18, r24
    2372:	89 81       	ldd	r24, Y+1	; 0x01
    2374:	9a 81       	ldd	r25, Y+2	; 0x02
    2376:	fc 01       	movw	r30, r24
    2378:	20 87       	std	Z+8, r18	; 0x08
    237a:	8b 81       	ldd	r24, Y+3	; 0x03
    237c:	9c 81       	ldd	r25, Y+4	; 0x04
    237e:	69 e0       	ldi	r22, 0x09	; 9
    2380:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2384:	28 2f       	mov	r18, r24
    2386:	89 81       	ldd	r24, Y+1	; 0x01
    2388:	9a 81       	ldd	r25, Y+2	; 0x02
    238a:	fc 01       	movw	r30, r24
    238c:	21 87       	std	Z+9, r18	; 0x09
    238e:	8b 81       	ldd	r24, Y+3	; 0x03
    2390:	9c 81       	ldd	r25, Y+4	; 0x04
    2392:	6a e0       	ldi	r22, 0x0A	; 10
    2394:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2398:	28 2f       	mov	r18, r24
    239a:	89 81       	ldd	r24, Y+1	; 0x01
    239c:	9a 81       	ldd	r25, Y+2	; 0x02
    239e:	fc 01       	movw	r30, r24
    23a0:	22 87       	std	Z+10, r18	; 0x0a
    23a2:	8b 81       	ldd	r24, Y+3	; 0x03
    23a4:	9c 81       	ldd	r25, Y+4	; 0x04
    23a6:	6b e0       	ldi	r22, 0x0B	; 11
    23a8:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    23ac:	28 2f       	mov	r18, r24
    23ae:	89 81       	ldd	r24, Y+1	; 0x01
    23b0:	9a 81       	ldd	r25, Y+2	; 0x02
    23b2:	fc 01       	movw	r30, r24
    23b4:	23 87       	std	Z+11, r18	; 0x0b
    23b6:	8b 81       	ldd	r24, Y+3	; 0x03
    23b8:	9c 81       	ldd	r25, Y+4	; 0x04
    23ba:	6c e0       	ldi	r22, 0x0C	; 12
    23bc:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    23c0:	28 2f       	mov	r18, r24
    23c2:	89 81       	ldd	r24, Y+1	; 0x01
    23c4:	9a 81       	ldd	r25, Y+2	; 0x02
    23c6:	fc 01       	movw	r30, r24
    23c8:	24 87       	std	Z+12, r18	; 0x0c
    23ca:	8b 81       	ldd	r24, Y+3	; 0x03
    23cc:	9c 81       	ldd	r25, Y+4	; 0x04
    23ce:	6d e0       	ldi	r22, 0x0D	; 13
    23d0:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    23d4:	28 2f       	mov	r18, r24
    23d6:	89 81       	ldd	r24, Y+1	; 0x01
    23d8:	9a 81       	ldd	r25, Y+2	; 0x02
    23da:	fc 01       	movw	r30, r24
    23dc:	25 87       	std	Z+13, r18	; 0x0d
    23de:	8b 81       	ldd	r24, Y+3	; 0x03
    23e0:	9c 81       	ldd	r25, Y+4	; 0x04
    23e2:	6e e0       	ldi	r22, 0x0E	; 14
    23e4:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    23e8:	28 2f       	mov	r18, r24
    23ea:	89 81       	ldd	r24, Y+1	; 0x01
    23ec:	9a 81       	ldd	r25, Y+2	; 0x02
    23ee:	fc 01       	movw	r30, r24
    23f0:	26 87       	std	Z+14, r18	; 0x0e
    23f2:	8b 81       	ldd	r24, Y+3	; 0x03
    23f4:	9c 81       	ldd	r25, Y+4	; 0x04
    23f6:	6f e0       	ldi	r22, 0x0F	; 15
    23f8:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    23fc:	28 2f       	mov	r18, r24
    23fe:	89 81       	ldd	r24, Y+1	; 0x01
    2400:	9a 81       	ldd	r25, Y+2	; 0x02
    2402:	fc 01       	movw	r30, r24
    2404:	27 87       	std	Z+15, r18	; 0x0f
    2406:	8b 81       	ldd	r24, Y+3	; 0x03
    2408:	9c 81       	ldd	r25, Y+4	; 0x04
    240a:	60 e1       	ldi	r22, 0x10	; 16
    240c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <u8g2_font_get_byte>
    2410:	28 2f       	mov	r18, r24
    2412:	89 81       	ldd	r24, Y+1	; 0x01
    2414:	9a 81       	ldd	r25, Y+2	; 0x02
    2416:	fc 01       	movw	r30, r24
    2418:	20 8b       	std	Z+16, r18	; 0x10
    241a:	8b 81       	ldd	r24, Y+3	; 0x03
    241c:	9c 81       	ldd	r25, Y+4	; 0x04
    241e:	61 e1       	ldi	r22, 0x11	; 17
    2420:	0e 94 0d 11 	call	0x221a	; 0x221a <u8g2_font_get_word>
    2424:	9c 01       	movw	r18, r24
    2426:	89 81       	ldd	r24, Y+1	; 0x01
    2428:	9a 81       	ldd	r25, Y+2	; 0x02
    242a:	fc 01       	movw	r30, r24
    242c:	32 8b       	std	Z+18, r19	; 0x12
    242e:	21 8b       	std	Z+17, r18	; 0x11
    2430:	8b 81       	ldd	r24, Y+3	; 0x03
    2432:	9c 81       	ldd	r25, Y+4	; 0x04
    2434:	63 e1       	ldi	r22, 0x13	; 19
    2436:	0e 94 0d 11 	call	0x221a	; 0x221a <u8g2_font_get_word>
    243a:	9c 01       	movw	r18, r24
    243c:	89 81       	ldd	r24, Y+1	; 0x01
    243e:	9a 81       	ldd	r25, Y+2	; 0x02
    2440:	fc 01       	movw	r30, r24
    2442:	34 8b       	std	Z+20, r19	; 0x14
    2444:	23 8b       	std	Z+19, r18	; 0x13
    2446:	8b 81       	ldd	r24, Y+3	; 0x03
    2448:	9c 81       	ldd	r25, Y+4	; 0x04
    244a:	65 e1       	ldi	r22, 0x15	; 21
    244c:	0e 94 0d 11 	call	0x221a	; 0x221a <u8g2_font_get_word>
    2450:	9c 01       	movw	r18, r24
    2452:	89 81       	ldd	r24, Y+1	; 0x01
    2454:	9a 81       	ldd	r25, Y+2	; 0x02
    2456:	fc 01       	movw	r30, r24
    2458:	36 8b       	std	Z+22, r19	; 0x16
    245a:	25 8b       	std	Z+21, r18	; 0x15
    245c:	00 00       	nop
    245e:	0f 90       	pop	r0
    2460:	0f 90       	pop	r0
    2462:	0f 90       	pop	r0
    2464:	0f 90       	pop	r0
    2466:	df 91       	pop	r29
    2468:	cf 91       	pop	r28
    246a:	08 95       	ret

0000246c <u8g2_font_decode_get_unsigned_bits>:
    246c:	cf 93       	push	r28
    246e:	df 93       	push	r29
    2470:	cd b7       	in	r28, 0x3d	; 61
    2472:	de b7       	in	r29, 0x3e	; 62
    2474:	2d 97       	sbiw	r28, 0x0d	; 13
    2476:	0f b6       	in	r0, 0x3f	; 63
    2478:	f8 94       	cli
    247a:	de bf       	out	0x3e, r29	; 62
    247c:	0f be       	out	0x3f, r0	; 63
    247e:	cd bf       	out	0x3d, r28	; 61
    2480:	9c 87       	std	Y+12, r25	; 0x0c
    2482:	8b 87       	std	Y+11, r24	; 0x0b
    2484:	6d 87       	std	Y+13, r22	; 0x0d
    2486:	8b 85       	ldd	r24, Y+11	; 0x0b
    2488:	9c 85       	ldd	r25, Y+12	; 0x0c
    248a:	fc 01       	movw	r30, r24
    248c:	82 85       	ldd	r24, Z+10	; 0x0a
    248e:	8b 83       	std	Y+3, r24	; 0x03
    2490:	8b 85       	ldd	r24, Y+11	; 0x0b
    2492:	9c 85       	ldd	r25, Y+12	; 0x0c
    2494:	fc 01       	movw	r30, r24
    2496:	80 81       	ld	r24, Z
    2498:	91 81       	ldd	r25, Z+1	; 0x01
    249a:	9d 83       	std	Y+5, r25	; 0x05
    249c:	8c 83       	std	Y+4, r24	; 0x04
    249e:	8c 81       	ldd	r24, Y+4	; 0x04
    24a0:	9d 81       	ldd	r25, Y+5	; 0x05
    24a2:	fc 01       	movw	r30, r24
    24a4:	84 91       	lpm	r24, Z
    24a6:	8e 83       	std	Y+6, r24	; 0x06
    24a8:	8e 81       	ldd	r24, Y+6	; 0x06
    24aa:	89 83       	std	Y+1, r24	; 0x01
    24ac:	89 81       	ldd	r24, Y+1	; 0x01
    24ae:	88 2f       	mov	r24, r24
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	2b 81       	ldd	r18, Y+3	; 0x03
    24b4:	22 2f       	mov	r18, r18
    24b6:	30 e0       	ldi	r19, 0x00	; 0
    24b8:	02 c0       	rjmp	.+4      	; 0x24be <u8g2_font_decode_get_unsigned_bits+0x52>
    24ba:	95 95       	asr	r25
    24bc:	87 95       	ror	r24
    24be:	2a 95       	dec	r18
    24c0:	e2 f7       	brpl	.-8      	; 0x24ba <u8g2_font_decode_get_unsigned_bits+0x4e>
    24c2:	89 83       	std	Y+1, r24	; 0x01
    24c4:	8b 81       	ldd	r24, Y+3	; 0x03
    24c6:	8a 83       	std	Y+2, r24	; 0x02
    24c8:	9a 81       	ldd	r25, Y+2	; 0x02
    24ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    24cc:	89 0f       	add	r24, r25
    24ce:	8a 83       	std	Y+2, r24	; 0x02
    24d0:	8a 81       	ldd	r24, Y+2	; 0x02
    24d2:	88 30       	cpi	r24, 0x08	; 8
    24d4:	98 f1       	brcs	.+102    	; 0x253c <u8g2_font_decode_get_unsigned_bits+0xd0>
    24d6:	88 e0       	ldi	r24, 0x08	; 8
    24d8:	8f 83       	std	Y+7, r24	; 0x07
    24da:	9f 81       	ldd	r25, Y+7	; 0x07
    24dc:	8b 81       	ldd	r24, Y+3	; 0x03
    24de:	f9 2f       	mov	r31, r25
    24e0:	f8 1b       	sub	r31, r24
    24e2:	8f 2f       	mov	r24, r31
    24e4:	8f 83       	std	Y+7, r24	; 0x07
    24e6:	8b 85       	ldd	r24, Y+11	; 0x0b
    24e8:	9c 85       	ldd	r25, Y+12	; 0x0c
    24ea:	fc 01       	movw	r30, r24
    24ec:	80 81       	ld	r24, Z
    24ee:	91 81       	ldd	r25, Z+1	; 0x01
    24f0:	9c 01       	movw	r18, r24
    24f2:	2f 5f       	subi	r18, 0xFF	; 255
    24f4:	3f 4f       	sbci	r19, 0xFF	; 255
    24f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    24f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    24fa:	fc 01       	movw	r30, r24
    24fc:	31 83       	std	Z+1, r19	; 0x01
    24fe:	20 83       	st	Z, r18
    2500:	8b 85       	ldd	r24, Y+11	; 0x0b
    2502:	9c 85       	ldd	r25, Y+12	; 0x0c
    2504:	fc 01       	movw	r30, r24
    2506:	80 81       	ld	r24, Z
    2508:	91 81       	ldd	r25, Z+1	; 0x01
    250a:	99 87       	std	Y+9, r25	; 0x09
    250c:	88 87       	std	Y+8, r24	; 0x08
    250e:	88 85       	ldd	r24, Y+8	; 0x08
    2510:	99 85       	ldd	r25, Y+9	; 0x09
    2512:	fc 01       	movw	r30, r24
    2514:	84 91       	lpm	r24, Z
    2516:	8a 87       	std	Y+10, r24	; 0x0a
    2518:	8a 85       	ldd	r24, Y+10	; 0x0a
    251a:	88 2f       	mov	r24, r24
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	2f 81       	ldd	r18, Y+7	; 0x07
    2520:	22 2f       	mov	r18, r18
    2522:	30 e0       	ldi	r19, 0x00	; 0
    2524:	02 c0       	rjmp	.+4      	; 0x252a <u8g2_font_decode_get_unsigned_bits+0xbe>
    2526:	88 0f       	add	r24, r24
    2528:	99 1f       	adc	r25, r25
    252a:	2a 95       	dec	r18
    252c:	e2 f7       	brpl	.-8      	; 0x2526 <u8g2_font_decode_get_unsigned_bits+0xba>
    252e:	98 2f       	mov	r25, r24
    2530:	89 81       	ldd	r24, Y+1	; 0x01
    2532:	89 2b       	or	r24, r25
    2534:	89 83       	std	Y+1, r24	; 0x01
    2536:	8a 81       	ldd	r24, Y+2	; 0x02
    2538:	88 50       	subi	r24, 0x08	; 8
    253a:	8a 83       	std	Y+2, r24	; 0x02
    253c:	8d 85       	ldd	r24, Y+13	; 0x0d
    253e:	28 2f       	mov	r18, r24
    2540:	30 e0       	ldi	r19, 0x00	; 0
    2542:	81 e0       	ldi	r24, 0x01	; 1
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	02 c0       	rjmp	.+4      	; 0x254c <u8g2_font_decode_get_unsigned_bits+0xe0>
    2548:	88 0f       	add	r24, r24
    254a:	99 1f       	adc	r25, r25
    254c:	2a 95       	dec	r18
    254e:	e2 f7       	brpl	.-8      	; 0x2548 <u8g2_font_decode_get_unsigned_bits+0xdc>
    2550:	81 50       	subi	r24, 0x01	; 1
    2552:	99 81       	ldd	r25, Y+1	; 0x01
    2554:	89 23       	and	r24, r25
    2556:	89 83       	std	Y+1, r24	; 0x01
    2558:	8b 85       	ldd	r24, Y+11	; 0x0b
    255a:	9c 85       	ldd	r25, Y+12	; 0x0c
    255c:	2a 81       	ldd	r18, Y+2	; 0x02
    255e:	fc 01       	movw	r30, r24
    2560:	22 87       	std	Z+10, r18	; 0x0a
    2562:	89 81       	ldd	r24, Y+1	; 0x01
    2564:	2d 96       	adiw	r28, 0x0d	; 13
    2566:	0f b6       	in	r0, 0x3f	; 63
    2568:	f8 94       	cli
    256a:	de bf       	out	0x3e, r29	; 62
    256c:	0f be       	out	0x3f, r0	; 63
    256e:	cd bf       	out	0x3d, r28	; 61
    2570:	df 91       	pop	r29
    2572:	cf 91       	pop	r28
    2574:	08 95       	ret

00002576 <u8g2_font_decode_get_signed_bits>:
    2576:	cf 93       	push	r28
    2578:	df 93       	push	r29
    257a:	00 d0       	rcall	.+0      	; 0x257c <u8g2_font_decode_get_signed_bits+0x6>
    257c:	00 d0       	rcall	.+0      	; 0x257e <u8g2_font_decode_get_signed_bits+0x8>
    257e:	1f 92       	push	r1
    2580:	cd b7       	in	r28, 0x3d	; 61
    2582:	de b7       	in	r29, 0x3e	; 62
    2584:	9c 83       	std	Y+4, r25	; 0x04
    2586:	8b 83       	std	Y+3, r24	; 0x03
    2588:	6d 83       	std	Y+5, r22	; 0x05
    258a:	8b 81       	ldd	r24, Y+3	; 0x03
    258c:	9c 81       	ldd	r25, Y+4	; 0x04
    258e:	6d 81       	ldd	r22, Y+5	; 0x05
    2590:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2594:	89 83       	std	Y+1, r24	; 0x01
    2596:	81 e0       	ldi	r24, 0x01	; 1
    2598:	8a 83       	std	Y+2, r24	; 0x02
    259a:	8d 81       	ldd	r24, Y+5	; 0x05
    259c:	81 50       	subi	r24, 0x01	; 1
    259e:	8d 83       	std	Y+5, r24	; 0x05
    25a0:	8a 81       	ldd	r24, Y+2	; 0x02
    25a2:	08 2e       	mov	r0, r24
    25a4:	00 0c       	add	r0, r0
    25a6:	99 0b       	sbc	r25, r25
    25a8:	2d 81       	ldd	r18, Y+5	; 0x05
    25aa:	22 2f       	mov	r18, r18
    25ac:	30 e0       	ldi	r19, 0x00	; 0
    25ae:	02 c0       	rjmp	.+4      	; 0x25b4 <u8g2_font_decode_get_signed_bits+0x3e>
    25b0:	88 0f       	add	r24, r24
    25b2:	99 1f       	adc	r25, r25
    25b4:	2a 95       	dec	r18
    25b6:	e2 f7       	brpl	.-8      	; 0x25b0 <u8g2_font_decode_get_signed_bits+0x3a>
    25b8:	8a 83       	std	Y+2, r24	; 0x02
    25ba:	99 81       	ldd	r25, Y+1	; 0x01
    25bc:	8a 81       	ldd	r24, Y+2	; 0x02
    25be:	29 2f       	mov	r18, r25
    25c0:	28 1b       	sub	r18, r24
    25c2:	82 2f       	mov	r24, r18
    25c4:	89 83       	std	Y+1, r24	; 0x01
    25c6:	89 81       	ldd	r24, Y+1	; 0x01
    25c8:	0f 90       	pop	r0
    25ca:	0f 90       	pop	r0
    25cc:	0f 90       	pop	r0
    25ce:	0f 90       	pop	r0
    25d0:	0f 90       	pop	r0
    25d2:	df 91       	pop	r29
    25d4:	cf 91       	pop	r28
    25d6:	08 95       	ret

000025d8 <u8g2_add_vector_y>:
    25d8:	cf 93       	push	r28
    25da:	df 93       	push	r29
    25dc:	00 d0       	rcall	.+0      	; 0x25de <u8g2_add_vector_y+0x6>
    25de:	00 d0       	rcall	.+0      	; 0x25e0 <u8g2_add_vector_y+0x8>
    25e0:	1f 92       	push	r1
    25e2:	cd b7       	in	r28, 0x3d	; 61
    25e4:	de b7       	in	r29, 0x3e	; 62
    25e6:	9a 83       	std	Y+2, r25	; 0x02
    25e8:	89 83       	std	Y+1, r24	; 0x01
    25ea:	6b 83       	std	Y+3, r22	; 0x03
    25ec:	4c 83       	std	Y+4, r20	; 0x04
    25ee:	2d 83       	std	Y+5, r18	; 0x05
    25f0:	8d 81       	ldd	r24, Y+5	; 0x05
    25f2:	88 2f       	mov	r24, r24
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	81 30       	cpi	r24, 0x01	; 1
    25f8:	91 05       	cpc	r25, r1
    25fa:	81 f0       	breq	.+32     	; 0x261c <u8g2_add_vector_y+0x44>
    25fc:	82 30       	cpi	r24, 0x02	; 2
    25fe:	91 05       	cpc	r25, r1
    2600:	c1 f0       	breq	.+48     	; 0x2632 <u8g2_add_vector_y+0x5a>
    2602:	89 2b       	or	r24, r25
    2604:	19 f5       	brne	.+70     	; 0x264c <u8g2_add_vector_y+0x74>
    2606:	8c 81       	ldd	r24, Y+4	; 0x04
    2608:	08 2e       	mov	r0, r24
    260a:	00 0c       	add	r0, r0
    260c:	99 0b       	sbc	r25, r25
    260e:	29 81       	ldd	r18, Y+1	; 0x01
    2610:	3a 81       	ldd	r19, Y+2	; 0x02
    2612:	82 0f       	add	r24, r18
    2614:	93 1f       	adc	r25, r19
    2616:	9a 83       	std	Y+2, r25	; 0x02
    2618:	89 83       	std	Y+1, r24	; 0x01
    261a:	25 c0       	rjmp	.+74     	; 0x2666 <u8g2_add_vector_y+0x8e>
    261c:	8b 81       	ldd	r24, Y+3	; 0x03
    261e:	08 2e       	mov	r0, r24
    2620:	00 0c       	add	r0, r0
    2622:	99 0b       	sbc	r25, r25
    2624:	29 81       	ldd	r18, Y+1	; 0x01
    2626:	3a 81       	ldd	r19, Y+2	; 0x02
    2628:	82 0f       	add	r24, r18
    262a:	93 1f       	adc	r25, r19
    262c:	9a 83       	std	Y+2, r25	; 0x02
    262e:	89 83       	std	Y+1, r24	; 0x01
    2630:	1a c0       	rjmp	.+52     	; 0x2666 <u8g2_add_vector_y+0x8e>
    2632:	8c 81       	ldd	r24, Y+4	; 0x04
    2634:	08 2e       	mov	r0, r24
    2636:	00 0c       	add	r0, r0
    2638:	99 0b       	sbc	r25, r25
    263a:	29 81       	ldd	r18, Y+1	; 0x01
    263c:	3a 81       	ldd	r19, Y+2	; 0x02
    263e:	a9 01       	movw	r20, r18
    2640:	48 1b       	sub	r20, r24
    2642:	59 0b       	sbc	r21, r25
    2644:	ca 01       	movw	r24, r20
    2646:	9a 83       	std	Y+2, r25	; 0x02
    2648:	89 83       	std	Y+1, r24	; 0x01
    264a:	0d c0       	rjmp	.+26     	; 0x2666 <u8g2_add_vector_y+0x8e>
    264c:	8b 81       	ldd	r24, Y+3	; 0x03
    264e:	08 2e       	mov	r0, r24
    2650:	00 0c       	add	r0, r0
    2652:	99 0b       	sbc	r25, r25
    2654:	29 81       	ldd	r18, Y+1	; 0x01
    2656:	3a 81       	ldd	r19, Y+2	; 0x02
    2658:	a9 01       	movw	r20, r18
    265a:	48 1b       	sub	r20, r24
    265c:	59 0b       	sbc	r21, r25
    265e:	ca 01       	movw	r24, r20
    2660:	9a 83       	std	Y+2, r25	; 0x02
    2662:	89 83       	std	Y+1, r24	; 0x01
    2664:	00 00       	nop
    2666:	89 81       	ldd	r24, Y+1	; 0x01
    2668:	9a 81       	ldd	r25, Y+2	; 0x02
    266a:	0f 90       	pop	r0
    266c:	0f 90       	pop	r0
    266e:	0f 90       	pop	r0
    2670:	0f 90       	pop	r0
    2672:	0f 90       	pop	r0
    2674:	df 91       	pop	r29
    2676:	cf 91       	pop	r28
    2678:	08 95       	ret

0000267a <u8g2_add_vector_x>:
    267a:	cf 93       	push	r28
    267c:	df 93       	push	r29
    267e:	00 d0       	rcall	.+0      	; 0x2680 <u8g2_add_vector_x+0x6>
    2680:	00 d0       	rcall	.+0      	; 0x2682 <u8g2_add_vector_x+0x8>
    2682:	1f 92       	push	r1
    2684:	cd b7       	in	r28, 0x3d	; 61
    2686:	de b7       	in	r29, 0x3e	; 62
    2688:	9a 83       	std	Y+2, r25	; 0x02
    268a:	89 83       	std	Y+1, r24	; 0x01
    268c:	6b 83       	std	Y+3, r22	; 0x03
    268e:	4c 83       	std	Y+4, r20	; 0x04
    2690:	2d 83       	std	Y+5, r18	; 0x05
    2692:	8d 81       	ldd	r24, Y+5	; 0x05
    2694:	88 2f       	mov	r24, r24
    2696:	90 e0       	ldi	r25, 0x00	; 0
    2698:	81 30       	cpi	r24, 0x01	; 1
    269a:	91 05       	cpc	r25, r1
    269c:	81 f0       	breq	.+32     	; 0x26be <u8g2_add_vector_x+0x44>
    269e:	82 30       	cpi	r24, 0x02	; 2
    26a0:	91 05       	cpc	r25, r1
    26a2:	d1 f0       	breq	.+52     	; 0x26d8 <u8g2_add_vector_x+0x5e>
    26a4:	89 2b       	or	r24, r25
    26a6:	29 f5       	brne	.+74     	; 0x26f2 <u8g2_add_vector_x+0x78>
    26a8:	8b 81       	ldd	r24, Y+3	; 0x03
    26aa:	08 2e       	mov	r0, r24
    26ac:	00 0c       	add	r0, r0
    26ae:	99 0b       	sbc	r25, r25
    26b0:	29 81       	ldd	r18, Y+1	; 0x01
    26b2:	3a 81       	ldd	r19, Y+2	; 0x02
    26b4:	82 0f       	add	r24, r18
    26b6:	93 1f       	adc	r25, r19
    26b8:	9a 83       	std	Y+2, r25	; 0x02
    26ba:	89 83       	std	Y+1, r24	; 0x01
    26bc:	25 c0       	rjmp	.+74     	; 0x2708 <u8g2_add_vector_x+0x8e>
    26be:	8c 81       	ldd	r24, Y+4	; 0x04
    26c0:	08 2e       	mov	r0, r24
    26c2:	00 0c       	add	r0, r0
    26c4:	99 0b       	sbc	r25, r25
    26c6:	29 81       	ldd	r18, Y+1	; 0x01
    26c8:	3a 81       	ldd	r19, Y+2	; 0x02
    26ca:	a9 01       	movw	r20, r18
    26cc:	48 1b       	sub	r20, r24
    26ce:	59 0b       	sbc	r21, r25
    26d0:	ca 01       	movw	r24, r20
    26d2:	9a 83       	std	Y+2, r25	; 0x02
    26d4:	89 83       	std	Y+1, r24	; 0x01
    26d6:	18 c0       	rjmp	.+48     	; 0x2708 <u8g2_add_vector_x+0x8e>
    26d8:	8b 81       	ldd	r24, Y+3	; 0x03
    26da:	08 2e       	mov	r0, r24
    26dc:	00 0c       	add	r0, r0
    26de:	99 0b       	sbc	r25, r25
    26e0:	29 81       	ldd	r18, Y+1	; 0x01
    26e2:	3a 81       	ldd	r19, Y+2	; 0x02
    26e4:	a9 01       	movw	r20, r18
    26e6:	48 1b       	sub	r20, r24
    26e8:	59 0b       	sbc	r21, r25
    26ea:	ca 01       	movw	r24, r20
    26ec:	9a 83       	std	Y+2, r25	; 0x02
    26ee:	89 83       	std	Y+1, r24	; 0x01
    26f0:	0b c0       	rjmp	.+22     	; 0x2708 <u8g2_add_vector_x+0x8e>
    26f2:	8c 81       	ldd	r24, Y+4	; 0x04
    26f4:	08 2e       	mov	r0, r24
    26f6:	00 0c       	add	r0, r0
    26f8:	99 0b       	sbc	r25, r25
    26fa:	29 81       	ldd	r18, Y+1	; 0x01
    26fc:	3a 81       	ldd	r19, Y+2	; 0x02
    26fe:	82 0f       	add	r24, r18
    2700:	93 1f       	adc	r25, r19
    2702:	9a 83       	std	Y+2, r25	; 0x02
    2704:	89 83       	std	Y+1, r24	; 0x01
    2706:	00 00       	nop
    2708:	89 81       	ldd	r24, Y+1	; 0x01
    270a:	9a 81       	ldd	r25, Y+2	; 0x02
    270c:	0f 90       	pop	r0
    270e:	0f 90       	pop	r0
    2710:	0f 90       	pop	r0
    2712:	0f 90       	pop	r0
    2714:	0f 90       	pop	r0
    2716:	df 91       	pop	r29
    2718:	cf 91       	pop	r28
    271a:	08 95       	ret

0000271c <u8g2_font_decode_len>:
    271c:	0f 93       	push	r16
    271e:	cf 93       	push	r28
    2720:	df 93       	push	r29
    2722:	cd b7       	in	r28, 0x3d	; 61
    2724:	de b7       	in	r29, 0x3e	; 62
    2726:	2f 97       	sbiw	r28, 0x0f	; 15
    2728:	0f b6       	in	r0, 0x3f	; 63
    272a:	f8 94       	cli
    272c:	de bf       	out	0x3e, r29	; 62
    272e:	0f be       	out	0x3f, r0	; 63
    2730:	cd bf       	out	0x3d, r28	; 61
    2732:	9d 87       	std	Y+13, r25	; 0x0d
    2734:	8c 87       	std	Y+12, r24	; 0x0c
    2736:	6e 87       	std	Y+14, r22	; 0x0e
    2738:	4f 87       	std	Y+15, r20	; 0x0f
    273a:	8c 85       	ldd	r24, Y+12	; 0x0c
    273c:	9d 85       	ldd	r25, Y+13	; 0x0d
    273e:	88 5b       	subi	r24, 0xB8	; 184
    2740:	9f 4f       	sbci	r25, 0xFF	; 255
    2742:	9e 83       	std	Y+6, r25	; 0x06
    2744:	8d 83       	std	Y+5, r24	; 0x05
    2746:	8e 85       	ldd	r24, Y+14	; 0x0e
    2748:	89 83       	std	Y+1, r24	; 0x01
    274a:	8d 81       	ldd	r24, Y+5	; 0x05
    274c:	9e 81       	ldd	r25, Y+6	; 0x06
    274e:	dc 01       	movw	r26, r24
    2750:	16 96       	adiw	r26, 0x06	; 6
    2752:	8c 91       	ld	r24, X
    2754:	8b 83       	std	Y+3, r24	; 0x03
    2756:	8d 81       	ldd	r24, Y+5	; 0x05
    2758:	9e 81       	ldd	r25, Y+6	; 0x06
    275a:	fc 01       	movw	r30, r24
    275c:	87 81       	ldd	r24, Z+7	; 0x07
    275e:	8c 83       	std	Y+4, r24	; 0x04
    2760:	8d 81       	ldd	r24, Y+5	; 0x05
    2762:	9e 81       	ldd	r25, Y+6	; 0x06
    2764:	dc 01       	movw	r26, r24
    2766:	18 96       	adiw	r26, 0x08	; 8
    2768:	8c 91       	ld	r24, X
    276a:	8f 83       	std	Y+7, r24	; 0x07
    276c:	9f 81       	ldd	r25, Y+7	; 0x07
    276e:	8b 81       	ldd	r24, Y+3	; 0x03
    2770:	b9 2f       	mov	r27, r25
    2772:	b8 1b       	sub	r27, r24
    2774:	8b 2f       	mov	r24, r27
    2776:	8f 83       	std	Y+7, r24	; 0x07
    2778:	8f 81       	ldd	r24, Y+7	; 0x07
    277a:	8a 83       	std	Y+2, r24	; 0x02
    277c:	99 81       	ldd	r25, Y+1	; 0x01
    277e:	8f 81       	ldd	r24, Y+7	; 0x07
    2780:	98 17       	cp	r25, r24
    2782:	10 f4       	brcc	.+4      	; 0x2788 <u8g2_font_decode_len+0x6c>
    2784:	89 81       	ldd	r24, Y+1	; 0x01
    2786:	8a 83       	std	Y+2, r24	; 0x02
    2788:	8d 81       	ldd	r24, Y+5	; 0x05
    278a:	9e 81       	ldd	r25, Y+6	; 0x06
    278c:	fc 01       	movw	r30, r24
    278e:	82 81       	ldd	r24, Z+2	; 0x02
    2790:	93 81       	ldd	r25, Z+3	; 0x03
    2792:	99 87       	std	Y+9, r25	; 0x09
    2794:	88 87       	std	Y+8, r24	; 0x08
    2796:	8d 81       	ldd	r24, Y+5	; 0x05
    2798:	9e 81       	ldd	r25, Y+6	; 0x06
    279a:	dc 01       	movw	r26, r24
    279c:	14 96       	adiw	r26, 0x04	; 4
    279e:	8d 91       	ld	r24, X+
    27a0:	9c 91       	ld	r25, X
    27a2:	15 97       	sbiw	r26, 0x05	; 5
    27a4:	9b 87       	std	Y+11, r25	; 0x0b
    27a6:	8a 87       	std	Y+10, r24	; 0x0a
    27a8:	8d 81       	ldd	r24, Y+5	; 0x05
    27aa:	9e 81       	ldd	r25, Y+6	; 0x06
    27ac:	fc 01       	movw	r30, r24
    27ae:	26 85       	ldd	r18, Z+14	; 0x0e
    27b0:	4c 81       	ldd	r20, Y+4	; 0x04
    27b2:	3b 81       	ldd	r19, Y+3	; 0x03
    27b4:	88 85       	ldd	r24, Y+8	; 0x08
    27b6:	99 85       	ldd	r25, Y+9	; 0x09
    27b8:	63 2f       	mov	r22, r19
    27ba:	0e 94 3d 13 	call	0x267a	; 0x267a <u8g2_add_vector_x>
    27be:	99 87       	std	Y+9, r25	; 0x09
    27c0:	88 87       	std	Y+8, r24	; 0x08
    27c2:	8d 81       	ldd	r24, Y+5	; 0x05
    27c4:	9e 81       	ldd	r25, Y+6	; 0x06
    27c6:	dc 01       	movw	r26, r24
    27c8:	1e 96       	adiw	r26, 0x0e	; 14
    27ca:	2c 91       	ld	r18, X
    27cc:	4c 81       	ldd	r20, Y+4	; 0x04
    27ce:	3b 81       	ldd	r19, Y+3	; 0x03
    27d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    27d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    27d4:	63 2f       	mov	r22, r19
    27d6:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <u8g2_add_vector_y>
    27da:	9b 87       	std	Y+11, r25	; 0x0b
    27dc:	8a 87       	std	Y+10, r24	; 0x0a
    27de:	8f 85       	ldd	r24, Y+15	; 0x0f
    27e0:	88 23       	and	r24, r24
    27e2:	e1 f0       	breq	.+56     	; 0x281c <u8g2_font_decode_len+0x100>
    27e4:	8d 81       	ldd	r24, Y+5	; 0x05
    27e6:	9e 81       	ldd	r25, Y+6	; 0x06
    27e8:	fc 01       	movw	r30, r24
    27ea:	24 85       	ldd	r18, Z+12	; 0x0c
    27ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    27ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    27f0:	8c 58       	subi	r24, 0x8C	; 140
    27f2:	9f 4f       	sbci	r25, 0xFF	; 255
    27f4:	dc 01       	movw	r26, r24
    27f6:	2c 93       	st	X, r18
    27f8:	8d 81       	ldd	r24, Y+5	; 0x05
    27fa:	9e 81       	ldd	r25, Y+6	; 0x06
    27fc:	dc 01       	movw	r26, r24
    27fe:	1e 96       	adiw	r26, 0x0e	; 14
    2800:	ec 91       	ld	r30, X
    2802:	8a 81       	ldd	r24, Y+2	; 0x02
    2804:	28 2f       	mov	r18, r24
    2806:	30 e0       	ldi	r19, 0x00	; 0
    2808:	4a 85       	ldd	r20, Y+10	; 0x0a
    280a:	5b 85       	ldd	r21, Y+11	; 0x0b
    280c:	68 85       	ldd	r22, Y+8	; 0x08
    280e:	79 85       	ldd	r23, Y+9	; 0x09
    2810:	8c 85       	ldd	r24, Y+12	; 0x0c
    2812:	9d 85       	ldd	r25, Y+13	; 0x0d
    2814:	0e 2f       	mov	r16, r30
    2816:	0e 94 dc 1a 	call	0x35b8	; 0x35b8 <u8g2_DrawHVLine>
    281a:	22 c0       	rjmp	.+68     	; 0x2860 <u8g2_font_decode_len+0x144>
    281c:	8d 81       	ldd	r24, Y+5	; 0x05
    281e:	9e 81       	ldd	r25, Y+6	; 0x06
    2820:	fc 01       	movw	r30, r24
    2822:	83 85       	ldd	r24, Z+11	; 0x0b
    2824:	88 23       	and	r24, r24
    2826:	e1 f4       	brne	.+56     	; 0x2860 <u8g2_font_decode_len+0x144>
    2828:	8d 81       	ldd	r24, Y+5	; 0x05
    282a:	9e 81       	ldd	r25, Y+6	; 0x06
    282c:	dc 01       	movw	r26, r24
    282e:	1d 96       	adiw	r26, 0x0d	; 13
    2830:	2c 91       	ld	r18, X
    2832:	8c 85       	ldd	r24, Y+12	; 0x0c
    2834:	9d 85       	ldd	r25, Y+13	; 0x0d
    2836:	8c 58       	subi	r24, 0x8C	; 140
    2838:	9f 4f       	sbci	r25, 0xFF	; 255
    283a:	fc 01       	movw	r30, r24
    283c:	20 83       	st	Z, r18
    283e:	8d 81       	ldd	r24, Y+5	; 0x05
    2840:	9e 81       	ldd	r25, Y+6	; 0x06
    2842:	dc 01       	movw	r26, r24
    2844:	1e 96       	adiw	r26, 0x0e	; 14
    2846:	ec 91       	ld	r30, X
    2848:	8a 81       	ldd	r24, Y+2	; 0x02
    284a:	28 2f       	mov	r18, r24
    284c:	30 e0       	ldi	r19, 0x00	; 0
    284e:	4a 85       	ldd	r20, Y+10	; 0x0a
    2850:	5b 85       	ldd	r21, Y+11	; 0x0b
    2852:	68 85       	ldd	r22, Y+8	; 0x08
    2854:	79 85       	ldd	r23, Y+9	; 0x09
    2856:	8c 85       	ldd	r24, Y+12	; 0x0c
    2858:	9d 85       	ldd	r25, Y+13	; 0x0d
    285a:	0e 2f       	mov	r16, r30
    285c:	0e 94 dc 1a 	call	0x35b8	; 0x35b8 <u8g2_DrawHVLine>
    2860:	99 81       	ldd	r25, Y+1	; 0x01
    2862:	8f 81       	ldd	r24, Y+7	; 0x07
    2864:	98 17       	cp	r25, r24
    2866:	58 f0       	brcs	.+22     	; 0x287e <u8g2_font_decode_len+0x162>
    2868:	99 81       	ldd	r25, Y+1	; 0x01
    286a:	8f 81       	ldd	r24, Y+7	; 0x07
    286c:	b9 2f       	mov	r27, r25
    286e:	b8 1b       	sub	r27, r24
    2870:	8b 2f       	mov	r24, r27
    2872:	89 83       	std	Y+1, r24	; 0x01
    2874:	1b 82       	std	Y+3, r1	; 0x03
    2876:	8c 81       	ldd	r24, Y+4	; 0x04
    2878:	8f 5f       	subi	r24, 0xFF	; 255
    287a:	8c 83       	std	Y+4, r24	; 0x04
    287c:	71 cf       	rjmp	.-286    	; 0x2760 <u8g2_font_decode_len+0x44>
    287e:	00 00       	nop
    2880:	9b 81       	ldd	r25, Y+3	; 0x03
    2882:	89 81       	ldd	r24, Y+1	; 0x01
    2884:	89 0f       	add	r24, r25
    2886:	8b 83       	std	Y+3, r24	; 0x03
    2888:	2b 81       	ldd	r18, Y+3	; 0x03
    288a:	8d 81       	ldd	r24, Y+5	; 0x05
    288c:	9e 81       	ldd	r25, Y+6	; 0x06
    288e:	fc 01       	movw	r30, r24
    2890:	26 83       	std	Z+6, r18	; 0x06
    2892:	2c 81       	ldd	r18, Y+4	; 0x04
    2894:	8d 81       	ldd	r24, Y+5	; 0x05
    2896:	9e 81       	ldd	r25, Y+6	; 0x06
    2898:	dc 01       	movw	r26, r24
    289a:	17 96       	adiw	r26, 0x07	; 7
    289c:	2c 93       	st	X, r18
    289e:	00 00       	nop
    28a0:	2f 96       	adiw	r28, 0x0f	; 15
    28a2:	0f b6       	in	r0, 0x3f	; 63
    28a4:	f8 94       	cli
    28a6:	de bf       	out	0x3e, r29	; 62
    28a8:	0f be       	out	0x3f, r0	; 63
    28aa:	cd bf       	out	0x3d, r28	; 61
    28ac:	df 91       	pop	r29
    28ae:	cf 91       	pop	r28
    28b0:	0f 91       	pop	r16
    28b2:	08 95       	ret

000028b4 <u8g2_font_setup_decode>:
    28b4:	cf 93       	push	r28
    28b6:	df 93       	push	r29
    28b8:	00 d0       	rcall	.+0      	; 0x28ba <u8g2_font_setup_decode+0x6>
    28ba:	00 d0       	rcall	.+0      	; 0x28bc <u8g2_font_setup_decode+0x8>
    28bc:	00 d0       	rcall	.+0      	; 0x28be <u8g2_font_setup_decode+0xa>
    28be:	cd b7       	in	r28, 0x3d	; 61
    28c0:	de b7       	in	r29, 0x3e	; 62
    28c2:	9c 83       	std	Y+4, r25	; 0x04
    28c4:	8b 83       	std	Y+3, r24	; 0x03
    28c6:	7e 83       	std	Y+6, r23	; 0x06
    28c8:	6d 83       	std	Y+5, r22	; 0x05
    28ca:	8b 81       	ldd	r24, Y+3	; 0x03
    28cc:	9c 81       	ldd	r25, Y+4	; 0x04
    28ce:	88 5b       	subi	r24, 0xB8	; 184
    28d0:	9f 4f       	sbci	r25, 0xFF	; 255
    28d2:	9a 83       	std	Y+2, r25	; 0x02
    28d4:	89 83       	std	Y+1, r24	; 0x01
    28d6:	89 81       	ldd	r24, Y+1	; 0x01
    28d8:	9a 81       	ldd	r25, Y+2	; 0x02
    28da:	2d 81       	ldd	r18, Y+5	; 0x05
    28dc:	3e 81       	ldd	r19, Y+6	; 0x06
    28de:	fc 01       	movw	r30, r24
    28e0:	31 83       	std	Z+1, r19	; 0x01
    28e2:	20 83       	st	Z, r18
    28e4:	89 81       	ldd	r24, Y+1	; 0x01
    28e6:	9a 81       	ldd	r25, Y+2	; 0x02
    28e8:	fc 01       	movw	r30, r24
    28ea:	12 86       	std	Z+10, r1	; 0x0a
    28ec:	8b 81       	ldd	r24, Y+3	; 0x03
    28ee:	9c 81       	ldd	r25, Y+4	; 0x04
    28f0:	85 5a       	subi	r24, 0xA5	; 165
    28f2:	9f 4f       	sbci	r25, 0xFF	; 255
    28f4:	fc 01       	movw	r30, r24
    28f6:	20 81       	ld	r18, Z
    28f8:	89 81       	ldd	r24, Y+1	; 0x01
    28fa:	9a 81       	ldd	r25, Y+2	; 0x02
    28fc:	62 2f       	mov	r22, r18
    28fe:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2902:	28 2f       	mov	r18, r24
    2904:	89 81       	ldd	r24, Y+1	; 0x01
    2906:	9a 81       	ldd	r25, Y+2	; 0x02
    2908:	fc 01       	movw	r30, r24
    290a:	20 87       	std	Z+8, r18	; 0x08
    290c:	8b 81       	ldd	r24, Y+3	; 0x03
    290e:	9c 81       	ldd	r25, Y+4	; 0x04
    2910:	84 5a       	subi	r24, 0xA4	; 164
    2912:	9f 4f       	sbci	r25, 0xFF	; 255
    2914:	fc 01       	movw	r30, r24
    2916:	20 81       	ld	r18, Z
    2918:	89 81       	ldd	r24, Y+1	; 0x01
    291a:	9a 81       	ldd	r25, Y+2	; 0x02
    291c:	62 2f       	mov	r22, r18
    291e:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2922:	28 2f       	mov	r18, r24
    2924:	89 81       	ldd	r24, Y+1	; 0x01
    2926:	9a 81       	ldd	r25, Y+2	; 0x02
    2928:	fc 01       	movw	r30, r24
    292a:	21 87       	std	Z+9, r18	; 0x09
    292c:	8b 81       	ldd	r24, Y+3	; 0x03
    292e:	9c 81       	ldd	r25, Y+4	; 0x04
    2930:	8c 58       	subi	r24, 0x8C	; 140
    2932:	9f 4f       	sbci	r25, 0xFF	; 255
    2934:	fc 01       	movw	r30, r24
    2936:	20 81       	ld	r18, Z
    2938:	89 81       	ldd	r24, Y+1	; 0x01
    293a:	9a 81       	ldd	r25, Y+2	; 0x02
    293c:	fc 01       	movw	r30, r24
    293e:	24 87       	std	Z+12, r18	; 0x0c
    2940:	89 81       	ldd	r24, Y+1	; 0x01
    2942:	9a 81       	ldd	r25, Y+2	; 0x02
    2944:	fc 01       	movw	r30, r24
    2946:	94 85       	ldd	r25, Z+12	; 0x0c
    2948:	81 e0       	ldi	r24, 0x01	; 1
    294a:	99 23       	and	r25, r25
    294c:	09 f0       	breq	.+2      	; 0x2950 <u8g2_font_setup_decode+0x9c>
    294e:	80 e0       	ldi	r24, 0x00	; 0
    2950:	28 2f       	mov	r18, r24
    2952:	89 81       	ldd	r24, Y+1	; 0x01
    2954:	9a 81       	ldd	r25, Y+2	; 0x02
    2956:	fc 01       	movw	r30, r24
    2958:	25 87       	std	Z+13, r18	; 0x0d
    295a:	00 00       	nop
    295c:	26 96       	adiw	r28, 0x06	; 6
    295e:	0f b6       	in	r0, 0x3f	; 63
    2960:	f8 94       	cli
    2962:	de bf       	out	0x3e, r29	; 62
    2964:	0f be       	out	0x3f, r0	; 63
    2966:	cd bf       	out	0x3d, r28	; 61
    2968:	df 91       	pop	r29
    296a:	cf 91       	pop	r28
    296c:	08 95       	ret

0000296e <u8g2_font_decode_glyph>:
    296e:	0f 93       	push	r16
    2970:	1f 93       	push	r17
    2972:	cf 93       	push	r28
    2974:	df 93       	push	r29
    2976:	cd b7       	in	r28, 0x3d	; 61
    2978:	de b7       	in	r29, 0x3e	; 62
    297a:	64 97       	sbiw	r28, 0x14	; 20
    297c:	0f b6       	in	r0, 0x3f	; 63
    297e:	f8 94       	cli
    2980:	de bf       	out	0x3e, r29	; 62
    2982:	0f be       	out	0x3f, r0	; 63
    2984:	cd bf       	out	0x3d, r28	; 61
    2986:	9a 8b       	std	Y+18, r25	; 0x12
    2988:	89 8b       	std	Y+17, r24	; 0x11
    298a:	7c 8b       	std	Y+20, r23	; 0x14
    298c:	6b 8b       	std	Y+19, r22	; 0x13
    298e:	89 89       	ldd	r24, Y+17	; 0x11
    2990:	9a 89       	ldd	r25, Y+18	; 0x12
    2992:	88 5b       	subi	r24, 0xB8	; 184
    2994:	9f 4f       	sbci	r25, 0xFF	; 255
    2996:	9a 87       	std	Y+10, r25	; 0x0a
    2998:	89 87       	std	Y+9, r24	; 0x09
    299a:	2b 89       	ldd	r18, Y+19	; 0x13
    299c:	3c 89       	ldd	r19, Y+20	; 0x14
    299e:	89 89       	ldd	r24, Y+17	; 0x11
    29a0:	9a 89       	ldd	r25, Y+18	; 0x12
    29a2:	b9 01       	movw	r22, r18
    29a4:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <u8g2_font_setup_decode>
    29a8:	89 89       	ldd	r24, Y+17	; 0x11
    29aa:	9a 89       	ldd	r25, Y+18	; 0x12
    29ac:	8f 5a       	subi	r24, 0xAF	; 175
    29ae:	9f 4f       	sbci	r25, 0xFF	; 255
    29b0:	fc 01       	movw	r30, r24
    29b2:	80 81       	ld	r24, Z
    29b4:	8b 87       	std	Y+11, r24	; 0x0b
    29b6:	89 89       	ldd	r24, Y+17	; 0x11
    29b8:	9a 89       	ldd	r25, Y+18	; 0x12
    29ba:	83 5a       	subi	r24, 0xA3	; 163
    29bc:	9f 4f       	sbci	r25, 0xFF	; 255
    29be:	fc 01       	movw	r30, r24
    29c0:	20 81       	ld	r18, Z
    29c2:	89 85       	ldd	r24, Y+9	; 0x09
    29c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    29c6:	62 2f       	mov	r22, r18
    29c8:	0e 94 bb 12 	call	0x2576	; 0x2576 <u8g2_font_decode_get_signed_bits>
    29cc:	8c 87       	std	Y+12, r24	; 0x0c
    29ce:	89 89       	ldd	r24, Y+17	; 0x11
    29d0:	9a 89       	ldd	r25, Y+18	; 0x12
    29d2:	82 5a       	subi	r24, 0xA2	; 162
    29d4:	9f 4f       	sbci	r25, 0xFF	; 255
    29d6:	fc 01       	movw	r30, r24
    29d8:	20 81       	ld	r18, Z
    29da:	89 85       	ldd	r24, Y+9	; 0x09
    29dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    29de:	62 2f       	mov	r22, r18
    29e0:	0e 94 bb 12 	call	0x2576	; 0x2576 <u8g2_font_decode_get_signed_bits>
    29e4:	8d 87       	std	Y+13, r24	; 0x0d
    29e6:	89 89       	ldd	r24, Y+17	; 0x11
    29e8:	9a 89       	ldd	r25, Y+18	; 0x12
    29ea:	81 5a       	subi	r24, 0xA1	; 161
    29ec:	9f 4f       	sbci	r25, 0xFF	; 255
    29ee:	fc 01       	movw	r30, r24
    29f0:	20 81       	ld	r18, Z
    29f2:	89 85       	ldd	r24, Y+9	; 0x09
    29f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    29f6:	62 2f       	mov	r22, r18
    29f8:	0e 94 bb 12 	call	0x2576	; 0x2576 <u8g2_font_decode_get_signed_bits>
    29fc:	8e 87       	std	Y+14, r24	; 0x0e
    29fe:	89 85       	ldd	r24, Y+9	; 0x09
    2a00:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a02:	fc 01       	movw	r30, r24
    2a04:	80 85       	ldd	r24, Z+8	; 0x08
    2a06:	18 16       	cp	r1, r24
    2a08:	0c f0       	brlt	.+2      	; 0x2a0c <u8g2_font_decode_glyph+0x9e>
    2a0a:	44 c1       	rjmp	.+648    	; 0x2c94 <u8g2_font_decode_glyph+0x326>
    2a0c:	89 85       	ldd	r24, Y+9	; 0x09
    2a0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a10:	fc 01       	movw	r30, r24
    2a12:	26 85       	ldd	r18, Z+14	; 0x0e
    2a14:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a16:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a18:	89 0f       	add	r24, r25
    2a1a:	81 95       	neg	r24
    2a1c:	38 2f       	mov	r19, r24
    2a1e:	89 85       	ldd	r24, Y+9	; 0x09
    2a20:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a22:	fc 01       	movw	r30, r24
    2a24:	82 81       	ldd	r24, Z+2	; 0x02
    2a26:	93 81       	ldd	r25, Z+3	; 0x03
    2a28:	43 2f       	mov	r20, r19
    2a2a:	6c 85       	ldd	r22, Y+12	; 0x0c
    2a2c:	0e 94 3d 13 	call	0x267a	; 0x267a <u8g2_add_vector_x>
    2a30:	9c 01       	movw	r18, r24
    2a32:	89 85       	ldd	r24, Y+9	; 0x09
    2a34:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a36:	fc 01       	movw	r30, r24
    2a38:	33 83       	std	Z+3, r19	; 0x03
    2a3a:	22 83       	std	Z+2, r18	; 0x02
    2a3c:	89 85       	ldd	r24, Y+9	; 0x09
    2a3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a40:	fc 01       	movw	r30, r24
    2a42:	26 85       	ldd	r18, Z+14	; 0x0e
    2a44:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a46:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a48:	89 0f       	add	r24, r25
    2a4a:	81 95       	neg	r24
    2a4c:	38 2f       	mov	r19, r24
    2a4e:	89 85       	ldd	r24, Y+9	; 0x09
    2a50:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a52:	fc 01       	movw	r30, r24
    2a54:	84 81       	ldd	r24, Z+4	; 0x04
    2a56:	95 81       	ldd	r25, Z+5	; 0x05
    2a58:	43 2f       	mov	r20, r19
    2a5a:	6c 85       	ldd	r22, Y+12	; 0x0c
    2a5c:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <u8g2_add_vector_y>
    2a60:	9c 01       	movw	r18, r24
    2a62:	89 85       	ldd	r24, Y+9	; 0x09
    2a64:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a66:	fc 01       	movw	r30, r24
    2a68:	35 83       	std	Z+5, r19	; 0x05
    2a6a:	24 83       	std	Z+4, r18	; 0x04
    2a6c:	89 85       	ldd	r24, Y+9	; 0x09
    2a6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a70:	fc 01       	movw	r30, r24
    2a72:	82 81       	ldd	r24, Z+2	; 0x02
    2a74:	93 81       	ldd	r25, Z+3	; 0x03
    2a76:	9a 83       	std	Y+2, r25	; 0x02
    2a78:	89 83       	std	Y+1, r24	; 0x01
    2a7a:	89 85       	ldd	r24, Y+9	; 0x09
    2a7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a7e:	fc 01       	movw	r30, r24
    2a80:	84 81       	ldd	r24, Z+4	; 0x04
    2a82:	95 81       	ldd	r25, Z+5	; 0x05
    2a84:	9e 83       	std	Y+6, r25	; 0x06
    2a86:	8d 83       	std	Y+5, r24	; 0x05
    2a88:	89 81       	ldd	r24, Y+1	; 0x01
    2a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a8c:	9c 83       	std	Y+4, r25	; 0x04
    2a8e:	8b 83       	std	Y+3, r24	; 0x03
    2a90:	8d 81       	ldd	r24, Y+5	; 0x05
    2a92:	9e 81       	ldd	r25, Y+6	; 0x06
    2a94:	98 87       	std	Y+8, r25	; 0x08
    2a96:	8f 83       	std	Y+7, r24	; 0x07
    2a98:	89 85       	ldd	r24, Y+9	; 0x09
    2a9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a9c:	fc 01       	movw	r30, r24
    2a9e:	86 85       	ldd	r24, Z+14	; 0x0e
    2aa0:	88 2f       	mov	r24, r24
    2aa2:	90 e0       	ldi	r25, 0x00	; 0
    2aa4:	81 30       	cpi	r24, 0x01	; 1
    2aa6:	91 05       	cpc	r25, r1
    2aa8:	31 f1       	breq	.+76     	; 0x2af6 <u8g2_font_decode_glyph+0x188>
    2aaa:	82 30       	cpi	r24, 0x02	; 2
    2aac:	91 05       	cpc	r25, r1
    2aae:	1c f4       	brge	.+6      	; 0x2ab6 <u8g2_font_decode_glyph+0x148>
    2ab0:	89 2b       	or	r24, r25
    2ab2:	49 f0       	breq	.+18     	; 0x2ac6 <u8g2_font_decode_glyph+0x158>
    2ab4:	98 c0       	rjmp	.+304    	; 0x2be6 <u8g2_font_decode_glyph+0x278>
    2ab6:	82 30       	cpi	r24, 0x02	; 2
    2ab8:	91 05       	cpc	r25, r1
    2aba:	09 f4       	brne	.+2      	; 0x2abe <u8g2_font_decode_glyph+0x150>
    2abc:	40 c0       	rjmp	.+128    	; 0x2b3e <u8g2_font_decode_glyph+0x1d0>
    2abe:	03 97       	sbiw	r24, 0x03	; 3
    2ac0:	09 f4       	brne	.+2      	; 0x2ac4 <u8g2_font_decode_glyph+0x156>
    2ac2:	6d c0       	rjmp	.+218    	; 0x2b9e <u8g2_font_decode_glyph+0x230>
    2ac4:	90 c0       	rjmp	.+288    	; 0x2be6 <u8g2_font_decode_glyph+0x278>
    2ac6:	89 85       	ldd	r24, Y+9	; 0x09
    2ac8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2aca:	fc 01       	movw	r30, r24
    2acc:	80 85       	ldd	r24, Z+8	; 0x08
    2ace:	08 2e       	mov	r0, r24
    2ad0:	00 0c       	add	r0, r0
    2ad2:	99 0b       	sbc	r25, r25
    2ad4:	2b 81       	ldd	r18, Y+3	; 0x03
    2ad6:	3c 81       	ldd	r19, Y+4	; 0x04
    2ad8:	82 0f       	add	r24, r18
    2ada:	93 1f       	adc	r25, r19
    2adc:	9c 83       	std	Y+4, r25	; 0x04
    2ade:	8b 83       	std	Y+3, r24	; 0x03
    2ae0:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ae2:	08 2e       	mov	r0, r24
    2ae4:	00 0c       	add	r0, r0
    2ae6:	99 0b       	sbc	r25, r25
    2ae8:	2f 81       	ldd	r18, Y+7	; 0x07
    2aea:	38 85       	ldd	r19, Y+8	; 0x08
    2aec:	82 0f       	add	r24, r18
    2aee:	93 1f       	adc	r25, r19
    2af0:	98 87       	std	Y+8, r25	; 0x08
    2af2:	8f 83       	std	Y+7, r24	; 0x07
    2af4:	78 c0       	rjmp	.+240    	; 0x2be6 <u8g2_font_decode_glyph+0x278>
    2af6:	8b 85       	ldd	r24, Y+11	; 0x0b
    2af8:	08 2e       	mov	r0, r24
    2afa:	00 0c       	add	r0, r0
    2afc:	99 0b       	sbc	r25, r25
    2afe:	29 81       	ldd	r18, Y+1	; 0x01
    2b00:	3a 81       	ldd	r19, Y+2	; 0x02
    2b02:	a9 01       	movw	r20, r18
    2b04:	48 1b       	sub	r20, r24
    2b06:	59 0b       	sbc	r21, r25
    2b08:	ca 01       	movw	r24, r20
    2b0a:	9a 83       	std	Y+2, r25	; 0x02
    2b0c:	89 83       	std	Y+1, r24	; 0x01
    2b0e:	89 81       	ldd	r24, Y+1	; 0x01
    2b10:	9a 81       	ldd	r25, Y+2	; 0x02
    2b12:	01 96       	adiw	r24, 0x01	; 1
    2b14:	9a 83       	std	Y+2, r25	; 0x02
    2b16:	89 83       	std	Y+1, r24	; 0x01
    2b18:	8b 81       	ldd	r24, Y+3	; 0x03
    2b1a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b1c:	01 96       	adiw	r24, 0x01	; 1
    2b1e:	9c 83       	std	Y+4, r25	; 0x04
    2b20:	8b 83       	std	Y+3, r24	; 0x03
    2b22:	89 85       	ldd	r24, Y+9	; 0x09
    2b24:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b26:	fc 01       	movw	r30, r24
    2b28:	80 85       	ldd	r24, Z+8	; 0x08
    2b2a:	08 2e       	mov	r0, r24
    2b2c:	00 0c       	add	r0, r0
    2b2e:	99 0b       	sbc	r25, r25
    2b30:	2f 81       	ldd	r18, Y+7	; 0x07
    2b32:	38 85       	ldd	r19, Y+8	; 0x08
    2b34:	82 0f       	add	r24, r18
    2b36:	93 1f       	adc	r25, r19
    2b38:	98 87       	std	Y+8, r25	; 0x08
    2b3a:	8f 83       	std	Y+7, r24	; 0x07
    2b3c:	54 c0       	rjmp	.+168    	; 0x2be6 <u8g2_font_decode_glyph+0x278>
    2b3e:	89 85       	ldd	r24, Y+9	; 0x09
    2b40:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b42:	fc 01       	movw	r30, r24
    2b44:	80 85       	ldd	r24, Z+8	; 0x08
    2b46:	08 2e       	mov	r0, r24
    2b48:	00 0c       	add	r0, r0
    2b4a:	99 0b       	sbc	r25, r25
    2b4c:	29 81       	ldd	r18, Y+1	; 0x01
    2b4e:	3a 81       	ldd	r19, Y+2	; 0x02
    2b50:	a9 01       	movw	r20, r18
    2b52:	48 1b       	sub	r20, r24
    2b54:	59 0b       	sbc	r21, r25
    2b56:	ca 01       	movw	r24, r20
    2b58:	9a 83       	std	Y+2, r25	; 0x02
    2b5a:	89 83       	std	Y+1, r24	; 0x01
    2b5c:	89 81       	ldd	r24, Y+1	; 0x01
    2b5e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b60:	01 96       	adiw	r24, 0x01	; 1
    2b62:	9a 83       	std	Y+2, r25	; 0x02
    2b64:	89 83       	std	Y+1, r24	; 0x01
    2b66:	8b 81       	ldd	r24, Y+3	; 0x03
    2b68:	9c 81       	ldd	r25, Y+4	; 0x04
    2b6a:	01 96       	adiw	r24, 0x01	; 1
    2b6c:	9c 83       	std	Y+4, r25	; 0x04
    2b6e:	8b 83       	std	Y+3, r24	; 0x03
    2b70:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b72:	08 2e       	mov	r0, r24
    2b74:	00 0c       	add	r0, r0
    2b76:	99 0b       	sbc	r25, r25
    2b78:	2d 81       	ldd	r18, Y+5	; 0x05
    2b7a:	3e 81       	ldd	r19, Y+6	; 0x06
    2b7c:	f9 01       	movw	r30, r18
    2b7e:	e8 1b       	sub	r30, r24
    2b80:	f9 0b       	sbc	r31, r25
    2b82:	cf 01       	movw	r24, r30
    2b84:	9e 83       	std	Y+6, r25	; 0x06
    2b86:	8d 83       	std	Y+5, r24	; 0x05
    2b88:	8d 81       	ldd	r24, Y+5	; 0x05
    2b8a:	9e 81       	ldd	r25, Y+6	; 0x06
    2b8c:	01 96       	adiw	r24, 0x01	; 1
    2b8e:	9e 83       	std	Y+6, r25	; 0x06
    2b90:	8d 83       	std	Y+5, r24	; 0x05
    2b92:	8f 81       	ldd	r24, Y+7	; 0x07
    2b94:	98 85       	ldd	r25, Y+8	; 0x08
    2b96:	01 96       	adiw	r24, 0x01	; 1
    2b98:	98 87       	std	Y+8, r25	; 0x08
    2b9a:	8f 83       	std	Y+7, r24	; 0x07
    2b9c:	24 c0       	rjmp	.+72     	; 0x2be6 <u8g2_font_decode_glyph+0x278>
    2b9e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ba0:	08 2e       	mov	r0, r24
    2ba2:	00 0c       	add	r0, r0
    2ba4:	99 0b       	sbc	r25, r25
    2ba6:	2b 81       	ldd	r18, Y+3	; 0x03
    2ba8:	3c 81       	ldd	r19, Y+4	; 0x04
    2baa:	82 0f       	add	r24, r18
    2bac:	93 1f       	adc	r25, r19
    2bae:	9c 83       	std	Y+4, r25	; 0x04
    2bb0:	8b 83       	std	Y+3, r24	; 0x03
    2bb2:	89 85       	ldd	r24, Y+9	; 0x09
    2bb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bb6:	fc 01       	movw	r30, r24
    2bb8:	80 85       	ldd	r24, Z+8	; 0x08
    2bba:	08 2e       	mov	r0, r24
    2bbc:	00 0c       	add	r0, r0
    2bbe:	99 0b       	sbc	r25, r25
    2bc0:	2d 81       	ldd	r18, Y+5	; 0x05
    2bc2:	3e 81       	ldd	r19, Y+6	; 0x06
    2bc4:	a9 01       	movw	r20, r18
    2bc6:	48 1b       	sub	r20, r24
    2bc8:	59 0b       	sbc	r21, r25
    2bca:	ca 01       	movw	r24, r20
    2bcc:	9e 83       	std	Y+6, r25	; 0x06
    2bce:	8d 83       	std	Y+5, r24	; 0x05
    2bd0:	8d 81       	ldd	r24, Y+5	; 0x05
    2bd2:	9e 81       	ldd	r25, Y+6	; 0x06
    2bd4:	01 96       	adiw	r24, 0x01	; 1
    2bd6:	9e 83       	std	Y+6, r25	; 0x06
    2bd8:	8d 83       	std	Y+5, r24	; 0x05
    2bda:	8f 81       	ldd	r24, Y+7	; 0x07
    2bdc:	98 85       	ldd	r25, Y+8	; 0x08
    2bde:	01 96       	adiw	r24, 0x01	; 1
    2be0:	98 87       	std	Y+8, r25	; 0x08
    2be2:	8f 83       	std	Y+7, r24	; 0x07
    2be4:	00 00       	nop
    2be6:	ef 81       	ldd	r30, Y+7	; 0x07
    2be8:	f8 85       	ldd	r31, Y+8	; 0x08
    2bea:	2b 81       	ldd	r18, Y+3	; 0x03
    2bec:	3c 81       	ldd	r19, Y+4	; 0x04
    2bee:	4d 81       	ldd	r20, Y+5	; 0x05
    2bf0:	5e 81       	ldd	r21, Y+6	; 0x06
    2bf2:	69 81       	ldd	r22, Y+1	; 0x01
    2bf4:	7a 81       	ldd	r23, Y+2	; 0x02
    2bf6:	89 89       	ldd	r24, Y+17	; 0x11
    2bf8:	9a 89       	ldd	r25, Y+18	; 0x12
    2bfa:	8f 01       	movw	r16, r30
    2bfc:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <u8g2_IsIntersection>
    2c00:	88 23       	and	r24, r24
    2c02:	11 f4       	brne	.+4      	; 0x2c08 <u8g2_font_decode_glyph+0x29a>
    2c04:	8e 85       	ldd	r24, Y+14	; 0x0e
    2c06:	47 c0       	rjmp	.+142    	; 0x2c96 <u8g2_font_decode_glyph+0x328>
    2c08:	89 85       	ldd	r24, Y+9	; 0x09
    2c0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c0c:	fc 01       	movw	r30, r24
    2c0e:	16 82       	std	Z+6, r1	; 0x06
    2c10:	89 85       	ldd	r24, Y+9	; 0x09
    2c12:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c14:	fc 01       	movw	r30, r24
    2c16:	17 82       	std	Z+7, r1	; 0x07
    2c18:	89 89       	ldd	r24, Y+17	; 0x11
    2c1a:	9a 89       	ldd	r25, Y+18	; 0x12
    2c1c:	87 5a       	subi	r24, 0xA7	; 167
    2c1e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c20:	fc 01       	movw	r30, r24
    2c22:	20 81       	ld	r18, Z
    2c24:	89 85       	ldd	r24, Y+9	; 0x09
    2c26:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c28:	62 2f       	mov	r22, r18
    2c2a:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2c2e:	8f 87       	std	Y+15, r24	; 0x0f
    2c30:	89 89       	ldd	r24, Y+17	; 0x11
    2c32:	9a 89       	ldd	r25, Y+18	; 0x12
    2c34:	86 5a       	subi	r24, 0xA6	; 166
    2c36:	9f 4f       	sbci	r25, 0xFF	; 255
    2c38:	fc 01       	movw	r30, r24
    2c3a:	20 81       	ld	r18, Z
    2c3c:	89 85       	ldd	r24, Y+9	; 0x09
    2c3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c40:	62 2f       	mov	r22, r18
    2c42:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2c46:	88 8b       	std	Y+16, r24	; 0x10
    2c48:	89 89       	ldd	r24, Y+17	; 0x11
    2c4a:	9a 89       	ldd	r25, Y+18	; 0x12
    2c4c:	40 e0       	ldi	r20, 0x00	; 0
    2c4e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2c50:	0e 94 8e 13 	call	0x271c	; 0x271c <u8g2_font_decode_len>
    2c54:	89 89       	ldd	r24, Y+17	; 0x11
    2c56:	9a 89       	ldd	r25, Y+18	; 0x12
    2c58:	41 e0       	ldi	r20, 0x01	; 1
    2c5a:	68 89       	ldd	r22, Y+16	; 0x10
    2c5c:	0e 94 8e 13 	call	0x271c	; 0x271c <u8g2_font_decode_len>
    2c60:	89 85       	ldd	r24, Y+9	; 0x09
    2c62:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c64:	61 e0       	ldi	r22, 0x01	; 1
    2c66:	0e 94 36 12 	call	0x246c	; 0x246c <u8g2_font_decode_get_unsigned_bits>
    2c6a:	88 23       	and	r24, r24
    2c6c:	69 f7       	brne	.-38     	; 0x2c48 <u8g2_font_decode_glyph+0x2da>
    2c6e:	89 85       	ldd	r24, Y+9	; 0x09
    2c70:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c72:	fc 01       	movw	r30, r24
    2c74:	97 81       	ldd	r25, Z+7	; 0x07
    2c76:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c78:	98 17       	cp	r25, r24
    2c7a:	0c f4       	brge	.+2      	; 0x2c7e <u8g2_font_decode_glyph+0x310>
    2c7c:	cd cf       	rjmp	.-102    	; 0x2c18 <u8g2_font_decode_glyph+0x2aa>
    2c7e:	00 00       	nop
    2c80:	89 85       	ldd	r24, Y+9	; 0x09
    2c82:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c84:	fc 01       	movw	r30, r24
    2c86:	24 85       	ldd	r18, Z+12	; 0x0c
    2c88:	89 89       	ldd	r24, Y+17	; 0x11
    2c8a:	9a 89       	ldd	r25, Y+18	; 0x12
    2c8c:	8c 58       	subi	r24, 0x8C	; 140
    2c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c90:	fc 01       	movw	r30, r24
    2c92:	20 83       	st	Z, r18
    2c94:	8e 85       	ldd	r24, Y+14	; 0x0e
    2c96:	64 96       	adiw	r28, 0x14	; 20
    2c98:	0f b6       	in	r0, 0x3f	; 63
    2c9a:	f8 94       	cli
    2c9c:	de bf       	out	0x3e, r29	; 62
    2c9e:	0f be       	out	0x3f, r0	; 63
    2ca0:	cd bf       	out	0x3d, r28	; 61
    2ca2:	df 91       	pop	r29
    2ca4:	cf 91       	pop	r28
    2ca6:	1f 91       	pop	r17
    2ca8:	0f 91       	pop	r16
    2caa:	08 95       	ret

00002cac <u8g2_font_get_glyph_data>:
    2cac:	cf 93       	push	r28
    2cae:	df 93       	push	r29
    2cb0:	cd b7       	in	r28, 0x3d	; 61
    2cb2:	de b7       	in	r29, 0x3e	; 62
    2cb4:	6c 97       	sbiw	r28, 0x1c	; 28
    2cb6:	0f b6       	in	r0, 0x3f	; 63
    2cb8:	f8 94       	cli
    2cba:	de bf       	out	0x3e, r29	; 62
    2cbc:	0f be       	out	0x3f, r0	; 63
    2cbe:	cd bf       	out	0x3d, r28	; 61
    2cc0:	9a 8f       	std	Y+26, r25	; 0x1a
    2cc2:	89 8f       	std	Y+25, r24	; 0x19
    2cc4:	7c 8f       	std	Y+28, r23	; 0x1c
    2cc6:	6b 8f       	std	Y+27, r22	; 0x1b
    2cc8:	89 8d       	ldd	r24, Y+25	; 0x19
    2cca:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2ccc:	8c 5b       	subi	r24, 0xBC	; 188
    2cce:	9f 4f       	sbci	r25, 0xFF	; 255
    2cd0:	fc 01       	movw	r30, r24
    2cd2:	80 81       	ld	r24, Z
    2cd4:	91 81       	ldd	r25, Z+1	; 0x01
    2cd6:	9a 83       	std	Y+2, r25	; 0x02
    2cd8:	89 83       	std	Y+1, r24	; 0x01
    2cda:	89 81       	ldd	r24, Y+1	; 0x01
    2cdc:	9a 81       	ldd	r25, Y+2	; 0x02
    2cde:	47 96       	adiw	r24, 0x17	; 23
    2ce0:	9a 83       	std	Y+2, r25	; 0x02
    2ce2:	89 83       	std	Y+1, r24	; 0x01
    2ce4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ce6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ce8:	8f 3f       	cpi	r24, 0xFF	; 255
    2cea:	91 05       	cpc	r25, r1
    2cec:	11 f0       	breq	.+4      	; 0x2cf2 <u8g2_font_get_glyph_data+0x46>
    2cee:	08 f0       	brcs	.+2      	; 0x2cf2 <u8g2_font_get_glyph_data+0x46>
    2cf0:	5c c0       	rjmp	.+184    	; 0x2daa <u8g2_font_get_glyph_data+0xfe>
    2cf2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cf4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cf6:	81 36       	cpi	r24, 0x61	; 97
    2cf8:	91 05       	cpc	r25, r1
    2cfa:	70 f0       	brcs	.+28     	; 0x2d18 <u8g2_font_get_glyph_data+0x6c>
    2cfc:	89 8d       	ldd	r24, Y+25	; 0x19
    2cfe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2d00:	86 59       	subi	r24, 0x96	; 150
    2d02:	9f 4f       	sbci	r25, 0xFF	; 255
    2d04:	fc 01       	movw	r30, r24
    2d06:	80 81       	ld	r24, Z
    2d08:	91 81       	ldd	r25, Z+1	; 0x01
    2d0a:	29 81       	ldd	r18, Y+1	; 0x01
    2d0c:	3a 81       	ldd	r19, Y+2	; 0x02
    2d0e:	82 0f       	add	r24, r18
    2d10:	93 1f       	adc	r25, r19
    2d12:	9a 83       	std	Y+2, r25	; 0x02
    2d14:	89 83       	std	Y+1, r24	; 0x01
    2d16:	12 c0       	rjmp	.+36     	; 0x2d3c <u8g2_font_get_glyph_data+0x90>
    2d18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d1c:	81 34       	cpi	r24, 0x41	; 65
    2d1e:	91 05       	cpc	r25, r1
    2d20:	68 f0       	brcs	.+26     	; 0x2d3c <u8g2_font_get_glyph_data+0x90>
    2d22:	89 8d       	ldd	r24, Y+25	; 0x19
    2d24:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2d26:	88 59       	subi	r24, 0x98	; 152
    2d28:	9f 4f       	sbci	r25, 0xFF	; 255
    2d2a:	fc 01       	movw	r30, r24
    2d2c:	80 81       	ld	r24, Z
    2d2e:	91 81       	ldd	r25, Z+1	; 0x01
    2d30:	29 81       	ldd	r18, Y+1	; 0x01
    2d32:	3a 81       	ldd	r19, Y+2	; 0x02
    2d34:	82 0f       	add	r24, r18
    2d36:	93 1f       	adc	r25, r19
    2d38:	9a 83       	std	Y+2, r25	; 0x02
    2d3a:	89 83       	std	Y+1, r24	; 0x01
    2d3c:	89 81       	ldd	r24, Y+1	; 0x01
    2d3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d40:	01 96       	adiw	r24, 0x01	; 1
    2d42:	9e 83       	std	Y+6, r25	; 0x06
    2d44:	8d 83       	std	Y+5, r24	; 0x05
    2d46:	8d 81       	ldd	r24, Y+5	; 0x05
    2d48:	9e 81       	ldd	r25, Y+6	; 0x06
    2d4a:	fc 01       	movw	r30, r24
    2d4c:	84 91       	lpm	r24, Z
    2d4e:	8f 83       	std	Y+7, r24	; 0x07
    2d50:	8f 81       	ldd	r24, Y+7	; 0x07
    2d52:	88 23       	and	r24, r24
    2d54:	09 f4       	brne	.+2      	; 0x2d58 <u8g2_font_get_glyph_data+0xac>
    2d56:	a3 c0       	rjmp	.+326    	; 0x2e9e <u8g2_font_get_glyph_data+0x1f2>
    2d58:	89 81       	ldd	r24, Y+1	; 0x01
    2d5a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d5c:	99 87       	std	Y+9, r25	; 0x09
    2d5e:	88 87       	std	Y+8, r24	; 0x08
    2d60:	88 85       	ldd	r24, Y+8	; 0x08
    2d62:	99 85       	ldd	r25, Y+9	; 0x09
    2d64:	fc 01       	movw	r30, r24
    2d66:	84 91       	lpm	r24, Z
    2d68:	8a 87       	std	Y+10, r24	; 0x0a
    2d6a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d6c:	28 2f       	mov	r18, r24
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d74:	28 17       	cp	r18, r24
    2d76:	39 07       	cpc	r19, r25
    2d78:	21 f4       	brne	.+8      	; 0x2d82 <u8g2_font_get_glyph_data+0xd6>
    2d7a:	89 81       	ldd	r24, Y+1	; 0x01
    2d7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7e:	02 96       	adiw	r24, 0x02	; 2
    2d80:	93 c0       	rjmp	.+294    	; 0x2ea8 <u8g2_font_get_glyph_data+0x1fc>
    2d82:	89 81       	ldd	r24, Y+1	; 0x01
    2d84:	9a 81       	ldd	r25, Y+2	; 0x02
    2d86:	01 96       	adiw	r24, 0x01	; 1
    2d88:	9c 87       	std	Y+12, r25	; 0x0c
    2d8a:	8b 87       	std	Y+11, r24	; 0x0b
    2d8c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d8e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d90:	fc 01       	movw	r30, r24
    2d92:	84 91       	lpm	r24, Z
    2d94:	8d 87       	std	Y+13, r24	; 0x0d
    2d96:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d98:	88 2f       	mov	r24, r24
    2d9a:	90 e0       	ldi	r25, 0x00	; 0
    2d9c:	29 81       	ldd	r18, Y+1	; 0x01
    2d9e:	3a 81       	ldd	r19, Y+2	; 0x02
    2da0:	82 0f       	add	r24, r18
    2da2:	93 1f       	adc	r25, r19
    2da4:	9a 83       	std	Y+2, r25	; 0x02
    2da6:	89 83       	std	Y+1, r24	; 0x01
    2da8:	c9 cf       	rjmp	.-110    	; 0x2d3c <u8g2_font_get_glyph_data+0x90>
    2daa:	89 8d       	ldd	r24, Y+25	; 0x19
    2dac:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2dae:	84 59       	subi	r24, 0x94	; 148
    2db0:	9f 4f       	sbci	r25, 0xFF	; 255
    2db2:	fc 01       	movw	r30, r24
    2db4:	80 81       	ld	r24, Z
    2db6:	91 81       	ldd	r25, Z+1	; 0x01
    2db8:	29 81       	ldd	r18, Y+1	; 0x01
    2dba:	3a 81       	ldd	r19, Y+2	; 0x02
    2dbc:	82 0f       	add	r24, r18
    2dbe:	93 1f       	adc	r25, r19
    2dc0:	9a 83       	std	Y+2, r25	; 0x02
    2dc2:	89 83       	std	Y+1, r24	; 0x01
    2dc4:	89 81       	ldd	r24, Y+1	; 0x01
    2dc6:	9a 81       	ldd	r25, Y+2	; 0x02
    2dc8:	9c 83       	std	Y+4, r25	; 0x04
    2dca:	8b 83       	std	Y+3, r24	; 0x03
    2dcc:	8b 81       	ldd	r24, Y+3	; 0x03
    2dce:	9c 81       	ldd	r25, Y+4	; 0x04
    2dd0:	60 e0       	ldi	r22, 0x00	; 0
    2dd2:	0e 94 0d 11 	call	0x221a	; 0x221a <u8g2_font_get_word>
    2dd6:	9c 01       	movw	r18, r24
    2dd8:	89 81       	ldd	r24, Y+1	; 0x01
    2dda:	9a 81       	ldd	r25, Y+2	; 0x02
    2ddc:	82 0f       	add	r24, r18
    2dde:	93 1f       	adc	r25, r19
    2de0:	9a 83       	std	Y+2, r25	; 0x02
    2de2:	89 83       	std	Y+1, r24	; 0x01
    2de4:	8b 81       	ldd	r24, Y+3	; 0x03
    2de6:	9c 81       	ldd	r25, Y+4	; 0x04
    2de8:	62 e0       	ldi	r22, 0x02	; 2
    2dea:	0e 94 0d 11 	call	0x221a	; 0x221a <u8g2_font_get_word>
    2dee:	9f 87       	std	Y+15, r25	; 0x0f
    2df0:	8e 87       	std	Y+14, r24	; 0x0e
    2df2:	8b 81       	ldd	r24, Y+3	; 0x03
    2df4:	9c 81       	ldd	r25, Y+4	; 0x04
    2df6:	04 96       	adiw	r24, 0x04	; 4
    2df8:	9c 83       	std	Y+4, r25	; 0x04
    2dfa:	8b 83       	std	Y+3, r24	; 0x03
    2dfc:	2e 85       	ldd	r18, Y+14	; 0x0e
    2dfe:	3f 85       	ldd	r19, Y+15	; 0x0f
    2e00:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e02:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e04:	28 17       	cp	r18, r24
    2e06:	39 07       	cpc	r19, r25
    2e08:	08 f3       	brcs	.-62     	; 0x2dcc <u8g2_font_get_glyph_data+0x120>
    2e0a:	89 81       	ldd	r24, Y+1	; 0x01
    2e0c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e0e:	99 8b       	std	Y+17, r25	; 0x11
    2e10:	88 8b       	std	Y+16, r24	; 0x10
    2e12:	88 89       	ldd	r24, Y+16	; 0x10
    2e14:	99 89       	ldd	r25, Y+17	; 0x11
    2e16:	fc 01       	movw	r30, r24
    2e18:	84 91       	lpm	r24, Z
    2e1a:	8a 8b       	std	Y+18, r24	; 0x12
    2e1c:	8a 89       	ldd	r24, Y+18	; 0x12
    2e1e:	88 2f       	mov	r24, r24
    2e20:	90 e0       	ldi	r25, 0x00	; 0
    2e22:	9f 87       	std	Y+15, r25	; 0x0f
    2e24:	8e 87       	std	Y+14, r24	; 0x0e
    2e26:	8e 85       	ldd	r24, Y+14	; 0x0e
    2e28:	9f 85       	ldd	r25, Y+15	; 0x0f
    2e2a:	98 2f       	mov	r25, r24
    2e2c:	88 27       	eor	r24, r24
    2e2e:	9f 87       	std	Y+15, r25	; 0x0f
    2e30:	8e 87       	std	Y+14, r24	; 0x0e
    2e32:	89 81       	ldd	r24, Y+1	; 0x01
    2e34:	9a 81       	ldd	r25, Y+2	; 0x02
    2e36:	01 96       	adiw	r24, 0x01	; 1
    2e38:	9c 8b       	std	Y+20, r25	; 0x14
    2e3a:	8b 8b       	std	Y+19, r24	; 0x13
    2e3c:	8b 89       	ldd	r24, Y+19	; 0x13
    2e3e:	9c 89       	ldd	r25, Y+20	; 0x14
    2e40:	fc 01       	movw	r30, r24
    2e42:	84 91       	lpm	r24, Z
    2e44:	8d 8b       	std	Y+21, r24	; 0x15
    2e46:	8d 89       	ldd	r24, Y+21	; 0x15
    2e48:	88 2f       	mov	r24, r24
    2e4a:	90 e0       	ldi	r25, 0x00	; 0
    2e4c:	2e 85       	ldd	r18, Y+14	; 0x0e
    2e4e:	3f 85       	ldd	r19, Y+15	; 0x0f
    2e50:	82 2b       	or	r24, r18
    2e52:	93 2b       	or	r25, r19
    2e54:	9f 87       	std	Y+15, r25	; 0x0f
    2e56:	8e 87       	std	Y+14, r24	; 0x0e
    2e58:	8e 85       	ldd	r24, Y+14	; 0x0e
    2e5a:	9f 85       	ldd	r25, Y+15	; 0x0f
    2e5c:	89 2b       	or	r24, r25
    2e5e:	09 f1       	breq	.+66     	; 0x2ea2 <u8g2_font_get_glyph_data+0x1f6>
    2e60:	2e 85       	ldd	r18, Y+14	; 0x0e
    2e62:	3f 85       	ldd	r19, Y+15	; 0x0f
    2e64:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e66:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e68:	28 17       	cp	r18, r24
    2e6a:	39 07       	cpc	r19, r25
    2e6c:	21 f4       	brne	.+8      	; 0x2e76 <u8g2_font_get_glyph_data+0x1ca>
    2e6e:	89 81       	ldd	r24, Y+1	; 0x01
    2e70:	9a 81       	ldd	r25, Y+2	; 0x02
    2e72:	03 96       	adiw	r24, 0x03	; 3
    2e74:	19 c0       	rjmp	.+50     	; 0x2ea8 <u8g2_font_get_glyph_data+0x1fc>
    2e76:	89 81       	ldd	r24, Y+1	; 0x01
    2e78:	9a 81       	ldd	r25, Y+2	; 0x02
    2e7a:	02 96       	adiw	r24, 0x02	; 2
    2e7c:	9f 8b       	std	Y+23, r25	; 0x17
    2e7e:	8e 8b       	std	Y+22, r24	; 0x16
    2e80:	8e 89       	ldd	r24, Y+22	; 0x16
    2e82:	9f 89       	ldd	r25, Y+23	; 0x17
    2e84:	fc 01       	movw	r30, r24
    2e86:	84 91       	lpm	r24, Z
    2e88:	88 8f       	std	Y+24, r24	; 0x18
    2e8a:	88 8d       	ldd	r24, Y+24	; 0x18
    2e8c:	88 2f       	mov	r24, r24
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	29 81       	ldd	r18, Y+1	; 0x01
    2e92:	3a 81       	ldd	r19, Y+2	; 0x02
    2e94:	82 0f       	add	r24, r18
    2e96:	93 1f       	adc	r25, r19
    2e98:	9a 83       	std	Y+2, r25	; 0x02
    2e9a:	89 83       	std	Y+1, r24	; 0x01
    2e9c:	b6 cf       	rjmp	.-148    	; 0x2e0a <u8g2_font_get_glyph_data+0x15e>
    2e9e:	00 00       	nop
    2ea0:	01 c0       	rjmp	.+2      	; 0x2ea4 <u8g2_font_get_glyph_data+0x1f8>
    2ea2:	00 00       	nop
    2ea4:	80 e0       	ldi	r24, 0x00	; 0
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	6c 96       	adiw	r28, 0x1c	; 28
    2eaa:	0f b6       	in	r0, 0x3f	; 63
    2eac:	f8 94       	cli
    2eae:	de bf       	out	0x3e, r29	; 62
    2eb0:	0f be       	out	0x3f, r0	; 63
    2eb2:	cd bf       	out	0x3d, r28	; 61
    2eb4:	df 91       	pop	r29
    2eb6:	cf 91       	pop	r28
    2eb8:	08 95       	ret

00002eba <u8g2_font_draw_glyph>:
    2eba:	cf 93       	push	r28
    2ebc:	df 93       	push	r29
    2ebe:	cd b7       	in	r28, 0x3d	; 61
    2ec0:	de b7       	in	r29, 0x3e	; 62
    2ec2:	2c 97       	sbiw	r28, 0x0c	; 12
    2ec4:	0f b6       	in	r0, 0x3f	; 63
    2ec6:	f8 94       	cli
    2ec8:	de bf       	out	0x3e, r29	; 62
    2eca:	0f be       	out	0x3f, r0	; 63
    2ecc:	cd bf       	out	0x3d, r28	; 61
    2ece:	9e 83       	std	Y+6, r25	; 0x06
    2ed0:	8d 83       	std	Y+5, r24	; 0x05
    2ed2:	78 87       	std	Y+8, r23	; 0x08
    2ed4:	6f 83       	std	Y+7, r22	; 0x07
    2ed6:	5a 87       	std	Y+10, r21	; 0x0a
    2ed8:	49 87       	std	Y+9, r20	; 0x09
    2eda:	3c 87       	std	Y+12, r19	; 0x0c
    2edc:	2b 87       	std	Y+11, r18	; 0x0b
    2ede:	1a 82       	std	Y+2, r1	; 0x02
    2ee0:	19 82       	std	Y+1, r1	; 0x01
    2ee2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee4:	9e 81       	ldd	r25, Y+6	; 0x06
    2ee6:	86 5b       	subi	r24, 0xB6	; 182
    2ee8:	9f 4f       	sbci	r25, 0xFF	; 255
    2eea:	2f 81       	ldd	r18, Y+7	; 0x07
    2eec:	38 85       	ldd	r19, Y+8	; 0x08
    2eee:	fc 01       	movw	r30, r24
    2ef0:	31 83       	std	Z+1, r19	; 0x01
    2ef2:	20 83       	st	Z, r18
    2ef4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ef6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ef8:	84 5b       	subi	r24, 0xB4	; 180
    2efa:	9f 4f       	sbci	r25, 0xFF	; 255
    2efc:	29 85       	ldd	r18, Y+9	; 0x09
    2efe:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f00:	fc 01       	movw	r30, r24
    2f02:	31 83       	std	Z+1, r19	; 0x01
    2f04:	20 83       	st	Z, r18
    2f06:	2b 85       	ldd	r18, Y+11	; 0x0b
    2f08:	3c 85       	ldd	r19, Y+12	; 0x0c
    2f0a:	8d 81       	ldd	r24, Y+5	; 0x05
    2f0c:	9e 81       	ldd	r25, Y+6	; 0x06
    2f0e:	b9 01       	movw	r22, r18
    2f10:	0e 94 56 16 	call	0x2cac	; 0x2cac <u8g2_font_get_glyph_data>
    2f14:	9c 83       	std	Y+4, r25	; 0x04
    2f16:	8b 83       	std	Y+3, r24	; 0x03
    2f18:	8b 81       	ldd	r24, Y+3	; 0x03
    2f1a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f1c:	89 2b       	or	r24, r25
    2f1e:	61 f0       	breq	.+24     	; 0x2f38 <u8g2_font_draw_glyph+0x7e>
    2f20:	2b 81       	ldd	r18, Y+3	; 0x03
    2f22:	3c 81       	ldd	r19, Y+4	; 0x04
    2f24:	8d 81       	ldd	r24, Y+5	; 0x05
    2f26:	9e 81       	ldd	r25, Y+6	; 0x06
    2f28:	b9 01       	movw	r22, r18
    2f2a:	0e 94 b7 14 	call	0x296e	; 0x296e <u8g2_font_decode_glyph>
    2f2e:	08 2e       	mov	r0, r24
    2f30:	00 0c       	add	r0, r0
    2f32:	99 0b       	sbc	r25, r25
    2f34:	9a 83       	std	Y+2, r25	; 0x02
    2f36:	89 83       	std	Y+1, r24	; 0x01
    2f38:	89 81       	ldd	r24, Y+1	; 0x01
    2f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f3c:	2c 96       	adiw	r28, 0x0c	; 12
    2f3e:	0f b6       	in	r0, 0x3f	; 63
    2f40:	f8 94       	cli
    2f42:	de bf       	out	0x3e, r29	; 62
    2f44:	0f be       	out	0x3f, r0	; 63
    2f46:	cd bf       	out	0x3d, r28	; 61
    2f48:	df 91       	pop	r29
    2f4a:	cf 91       	pop	r28
    2f4c:	08 95       	ret

00002f4e <u8g2_DrawGlyph>:
    2f4e:	cf 93       	push	r28
    2f50:	df 93       	push	r29
    2f52:	cd b7       	in	r28, 0x3d	; 61
    2f54:	de b7       	in	r29, 0x3e	; 62
    2f56:	28 97       	sbiw	r28, 0x08	; 8
    2f58:	0f b6       	in	r0, 0x3f	; 63
    2f5a:	f8 94       	cli
    2f5c:	de bf       	out	0x3e, r29	; 62
    2f5e:	0f be       	out	0x3f, r0	; 63
    2f60:	cd bf       	out	0x3d, r28	; 61
    2f62:	9a 83       	std	Y+2, r25	; 0x02
    2f64:	89 83       	std	Y+1, r24	; 0x01
    2f66:	7c 83       	std	Y+4, r23	; 0x04
    2f68:	6b 83       	std	Y+3, r22	; 0x03
    2f6a:	5e 83       	std	Y+6, r21	; 0x06
    2f6c:	4d 83       	std	Y+5, r20	; 0x05
    2f6e:	38 87       	std	Y+8, r19	; 0x08
    2f70:	2f 83       	std	Y+7, r18	; 0x07
    2f72:	89 81       	ldd	r24, Y+1	; 0x01
    2f74:	9a 81       	ldd	r25, Y+2	; 0x02
    2f76:	8a 5a       	subi	r24, 0xAA	; 170
    2f78:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7a:	fc 01       	movw	r30, r24
    2f7c:	80 81       	ld	r24, Z
    2f7e:	88 2f       	mov	r24, r24
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	81 30       	cpi	r24, 0x01	; 1
    2f84:	91 05       	cpc	r25, r1
    2f86:	f9 f0       	breq	.+62     	; 0x2fc6 <u8g2_DrawGlyph+0x78>
    2f88:	82 30       	cpi	r24, 0x02	; 2
    2f8a:	91 05       	cpc	r25, r1
    2f8c:	1c f4       	brge	.+6      	; 0x2f94 <u8g2_DrawGlyph+0x46>
    2f8e:	89 2b       	or	r24, r25
    2f90:	39 f0       	breq	.+14     	; 0x2fa0 <u8g2_DrawGlyph+0x52>
    2f92:	52 c0       	rjmp	.+164    	; 0x3038 <u8g2_DrawGlyph+0xea>
    2f94:	82 30       	cpi	r24, 0x02	; 2
    2f96:	91 05       	cpc	r25, r1
    2f98:	49 f1       	breq	.+82     	; 0x2fec <u8g2_DrawGlyph+0x9e>
    2f9a:	03 97       	sbiw	r24, 0x03	; 3
    2f9c:	d1 f1       	breq	.+116    	; 0x3012 <u8g2_DrawGlyph+0xc4>
    2f9e:	4c c0       	rjmp	.+152    	; 0x3038 <u8g2_DrawGlyph+0xea>
    2fa0:	89 81       	ldd	r24, Y+1	; 0x01
    2fa2:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa4:	8a 5b       	subi	r24, 0xBA	; 186
    2fa6:	9f 4f       	sbci	r25, 0xFF	; 255
    2fa8:	fc 01       	movw	r30, r24
    2faa:	20 81       	ld	r18, Z
    2fac:	31 81       	ldd	r19, Z+1	; 0x01
    2fae:	89 81       	ldd	r24, Y+1	; 0x01
    2fb0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fb2:	f9 01       	movw	r30, r18
    2fb4:	09 95       	icall
    2fb6:	9c 01       	movw	r18, r24
    2fb8:	8d 81       	ldd	r24, Y+5	; 0x05
    2fba:	9e 81       	ldd	r25, Y+6	; 0x06
    2fbc:	82 0f       	add	r24, r18
    2fbe:	93 1f       	adc	r25, r19
    2fc0:	9e 83       	std	Y+6, r25	; 0x06
    2fc2:	8d 83       	std	Y+5, r24	; 0x05
    2fc4:	39 c0       	rjmp	.+114    	; 0x3038 <u8g2_DrawGlyph+0xea>
    2fc6:	89 81       	ldd	r24, Y+1	; 0x01
    2fc8:	9a 81       	ldd	r25, Y+2	; 0x02
    2fca:	8a 5b       	subi	r24, 0xBA	; 186
    2fcc:	9f 4f       	sbci	r25, 0xFF	; 255
    2fce:	fc 01       	movw	r30, r24
    2fd0:	20 81       	ld	r18, Z
    2fd2:	31 81       	ldd	r19, Z+1	; 0x01
    2fd4:	89 81       	ldd	r24, Y+1	; 0x01
    2fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd8:	f9 01       	movw	r30, r18
    2fda:	09 95       	icall
    2fdc:	9c 01       	movw	r18, r24
    2fde:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe2:	82 1b       	sub	r24, r18
    2fe4:	93 0b       	sbc	r25, r19
    2fe6:	9c 83       	std	Y+4, r25	; 0x04
    2fe8:	8b 83       	std	Y+3, r24	; 0x03
    2fea:	26 c0       	rjmp	.+76     	; 0x3038 <u8g2_DrawGlyph+0xea>
    2fec:	89 81       	ldd	r24, Y+1	; 0x01
    2fee:	9a 81       	ldd	r25, Y+2	; 0x02
    2ff0:	8a 5b       	subi	r24, 0xBA	; 186
    2ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ff4:	fc 01       	movw	r30, r24
    2ff6:	20 81       	ld	r18, Z
    2ff8:	31 81       	ldd	r19, Z+1	; 0x01
    2ffa:	89 81       	ldd	r24, Y+1	; 0x01
    2ffc:	9a 81       	ldd	r25, Y+2	; 0x02
    2ffe:	f9 01       	movw	r30, r18
    3000:	09 95       	icall
    3002:	9c 01       	movw	r18, r24
    3004:	8d 81       	ldd	r24, Y+5	; 0x05
    3006:	9e 81       	ldd	r25, Y+6	; 0x06
    3008:	82 1b       	sub	r24, r18
    300a:	93 0b       	sbc	r25, r19
    300c:	9e 83       	std	Y+6, r25	; 0x06
    300e:	8d 83       	std	Y+5, r24	; 0x05
    3010:	13 c0       	rjmp	.+38     	; 0x3038 <u8g2_DrawGlyph+0xea>
    3012:	89 81       	ldd	r24, Y+1	; 0x01
    3014:	9a 81       	ldd	r25, Y+2	; 0x02
    3016:	8a 5b       	subi	r24, 0xBA	; 186
    3018:	9f 4f       	sbci	r25, 0xFF	; 255
    301a:	fc 01       	movw	r30, r24
    301c:	20 81       	ld	r18, Z
    301e:	31 81       	ldd	r19, Z+1	; 0x01
    3020:	89 81       	ldd	r24, Y+1	; 0x01
    3022:	9a 81       	ldd	r25, Y+2	; 0x02
    3024:	f9 01       	movw	r30, r18
    3026:	09 95       	icall
    3028:	9c 01       	movw	r18, r24
    302a:	8b 81       	ldd	r24, Y+3	; 0x03
    302c:	9c 81       	ldd	r25, Y+4	; 0x04
    302e:	82 0f       	add	r24, r18
    3030:	93 1f       	adc	r25, r19
    3032:	9c 83       	std	Y+4, r25	; 0x04
    3034:	8b 83       	std	Y+3, r24	; 0x03
    3036:	00 00       	nop
    3038:	2f 81       	ldd	r18, Y+7	; 0x07
    303a:	38 85       	ldd	r19, Y+8	; 0x08
    303c:	4d 81       	ldd	r20, Y+5	; 0x05
    303e:	5e 81       	ldd	r21, Y+6	; 0x06
    3040:	6b 81       	ldd	r22, Y+3	; 0x03
    3042:	7c 81       	ldd	r23, Y+4	; 0x04
    3044:	89 81       	ldd	r24, Y+1	; 0x01
    3046:	9a 81       	ldd	r25, Y+2	; 0x02
    3048:	0e 94 5d 17 	call	0x2eba	; 0x2eba <u8g2_font_draw_glyph>
    304c:	28 96       	adiw	r28, 0x08	; 8
    304e:	0f b6       	in	r0, 0x3f	; 63
    3050:	f8 94       	cli
    3052:	de bf       	out	0x3e, r29	; 62
    3054:	0f be       	out	0x3f, r0	; 63
    3056:	cd bf       	out	0x3d, r28	; 61
    3058:	df 91       	pop	r29
    305a:	cf 91       	pop	r28
    305c:	08 95       	ret

0000305e <u8g2_draw_string>:
    305e:	cf 93       	push	r28
    3060:	df 93       	push	r29
    3062:	cd b7       	in	r28, 0x3d	; 61
    3064:	de b7       	in	r29, 0x3e	; 62
    3066:	2e 97       	sbiw	r28, 0x0e	; 14
    3068:	0f b6       	in	r0, 0x3f	; 63
    306a:	f8 94       	cli
    306c:	de bf       	out	0x3e, r29	; 62
    306e:	0f be       	out	0x3f, r0	; 63
    3070:	cd bf       	out	0x3d, r28	; 61
    3072:	98 87       	std	Y+8, r25	; 0x08
    3074:	8f 83       	std	Y+7, r24	; 0x07
    3076:	7a 87       	std	Y+10, r23	; 0x0a
    3078:	69 87       	std	Y+9, r22	; 0x09
    307a:	5c 87       	std	Y+12, r21	; 0x0c
    307c:	4b 87       	std	Y+11, r20	; 0x0b
    307e:	3e 87       	std	Y+14, r19	; 0x0e
    3080:	2d 87       	std	Y+13, r18	; 0x0d
    3082:	8f 81       	ldd	r24, Y+7	; 0x07
    3084:	98 85       	ldd	r25, Y+8	; 0x08
    3086:	0e 94 01 20 	call	0x4002	; 0x4002 <u8x8_utf8_init>
    308a:	1a 82       	std	Y+2, r1	; 0x02
    308c:	19 82       	std	Y+1, r1	; 0x01
    308e:	8f 81       	ldd	r24, Y+7	; 0x07
    3090:	98 85       	ldd	r25, Y+8	; 0x08
    3092:	fc 01       	movw	r30, r24
    3094:	22 81       	ldd	r18, Z+2	; 0x02
    3096:	33 81       	ldd	r19, Z+3	; 0x03
    3098:	8d 85       	ldd	r24, Y+13	; 0x0d
    309a:	9e 85       	ldd	r25, Y+14	; 0x0e
    309c:	fc 01       	movw	r30, r24
    309e:	40 81       	ld	r20, Z
    30a0:	8f 81       	ldd	r24, Y+7	; 0x07
    30a2:	98 85       	ldd	r25, Y+8	; 0x08
    30a4:	64 2f       	mov	r22, r20
    30a6:	f9 01       	movw	r30, r18
    30a8:	09 95       	icall
    30aa:	9c 83       	std	Y+4, r25	; 0x04
    30ac:	8b 83       	std	Y+3, r24	; 0x03
    30ae:	8b 81       	ldd	r24, Y+3	; 0x03
    30b0:	9c 81       	ldd	r25, Y+4	; 0x04
    30b2:	01 96       	adiw	r24, 0x01	; 1
    30b4:	09 f4       	brne	.+2      	; 0x30b8 <u8g2_draw_string+0x5a>
    30b6:	5d c0       	rjmp	.+186    	; 0x3172 <u8g2_draw_string+0x114>
    30b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    30ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    30bc:	01 96       	adiw	r24, 0x01	; 1
    30be:	9e 87       	std	Y+14, r25	; 0x0e
    30c0:	8d 87       	std	Y+13, r24	; 0x0d
    30c2:	8b 81       	ldd	r24, Y+3	; 0x03
    30c4:	9c 81       	ldd	r25, Y+4	; 0x04
    30c6:	02 96       	adiw	r24, 0x02	; 2
    30c8:	11 f3       	breq	.-60     	; 0x308e <u8g2_draw_string+0x30>
    30ca:	2b 81       	ldd	r18, Y+3	; 0x03
    30cc:	3c 81       	ldd	r19, Y+4	; 0x04
    30ce:	4b 85       	ldd	r20, Y+11	; 0x0b
    30d0:	5c 85       	ldd	r21, Y+12	; 0x0c
    30d2:	69 85       	ldd	r22, Y+9	; 0x09
    30d4:	7a 85       	ldd	r23, Y+10	; 0x0a
    30d6:	8f 81       	ldd	r24, Y+7	; 0x07
    30d8:	98 85       	ldd	r25, Y+8	; 0x08
    30da:	0e 94 a7 17 	call	0x2f4e	; 0x2f4e <u8g2_DrawGlyph>
    30de:	9e 83       	std	Y+6, r25	; 0x06
    30e0:	8d 83       	std	Y+5, r24	; 0x05
    30e2:	8f 81       	ldd	r24, Y+7	; 0x07
    30e4:	98 85       	ldd	r25, Y+8	; 0x08
    30e6:	8a 5a       	subi	r24, 0xAA	; 170
    30e8:	9f 4f       	sbci	r25, 0xFF	; 255
    30ea:	fc 01       	movw	r30, r24
    30ec:	80 81       	ld	r24, Z
    30ee:	88 2f       	mov	r24, r24
    30f0:	90 e0       	ldi	r25, 0x00	; 0
    30f2:	81 30       	cpi	r24, 0x01	; 1
    30f4:	91 05       	cpc	r25, r1
    30f6:	a9 f0       	breq	.+42     	; 0x3122 <u8g2_draw_string+0xc4>
    30f8:	82 30       	cpi	r24, 0x02	; 2
    30fa:	91 05       	cpc	r25, r1
    30fc:	1c f4       	brge	.+6      	; 0x3104 <u8g2_draw_string+0xa6>
    30fe:	89 2b       	or	r24, r25
    3100:	39 f0       	breq	.+14     	; 0x3110 <u8g2_draw_string+0xb2>
    3102:	2e c0       	rjmp	.+92     	; 0x3160 <u8g2_draw_string+0x102>
    3104:	82 30       	cpi	r24, 0x02	; 2
    3106:	91 05       	cpc	r25, r1
    3108:	a9 f0       	breq	.+42     	; 0x3134 <u8g2_draw_string+0xd6>
    310a:	03 97       	sbiw	r24, 0x03	; 3
    310c:	f1 f0       	breq	.+60     	; 0x314a <u8g2_draw_string+0xec>
    310e:	28 c0       	rjmp	.+80     	; 0x3160 <u8g2_draw_string+0x102>
    3110:	29 85       	ldd	r18, Y+9	; 0x09
    3112:	3a 85       	ldd	r19, Y+10	; 0x0a
    3114:	8d 81       	ldd	r24, Y+5	; 0x05
    3116:	9e 81       	ldd	r25, Y+6	; 0x06
    3118:	82 0f       	add	r24, r18
    311a:	93 1f       	adc	r25, r19
    311c:	9a 87       	std	Y+10, r25	; 0x0a
    311e:	89 87       	std	Y+9, r24	; 0x09
    3120:	1f c0       	rjmp	.+62     	; 0x3160 <u8g2_draw_string+0x102>
    3122:	2b 85       	ldd	r18, Y+11	; 0x0b
    3124:	3c 85       	ldd	r19, Y+12	; 0x0c
    3126:	8d 81       	ldd	r24, Y+5	; 0x05
    3128:	9e 81       	ldd	r25, Y+6	; 0x06
    312a:	82 0f       	add	r24, r18
    312c:	93 1f       	adc	r25, r19
    312e:	9c 87       	std	Y+12, r25	; 0x0c
    3130:	8b 87       	std	Y+11, r24	; 0x0b
    3132:	16 c0       	rjmp	.+44     	; 0x3160 <u8g2_draw_string+0x102>
    3134:	29 85       	ldd	r18, Y+9	; 0x09
    3136:	3a 85       	ldd	r19, Y+10	; 0x0a
    3138:	8d 81       	ldd	r24, Y+5	; 0x05
    313a:	9e 81       	ldd	r25, Y+6	; 0x06
    313c:	a9 01       	movw	r20, r18
    313e:	48 1b       	sub	r20, r24
    3140:	59 0b       	sbc	r21, r25
    3142:	ca 01       	movw	r24, r20
    3144:	9a 87       	std	Y+10, r25	; 0x0a
    3146:	89 87       	std	Y+9, r24	; 0x09
    3148:	0b c0       	rjmp	.+22     	; 0x3160 <u8g2_draw_string+0x102>
    314a:	2b 85       	ldd	r18, Y+11	; 0x0b
    314c:	3c 85       	ldd	r19, Y+12	; 0x0c
    314e:	8d 81       	ldd	r24, Y+5	; 0x05
    3150:	9e 81       	ldd	r25, Y+6	; 0x06
    3152:	f9 01       	movw	r30, r18
    3154:	e8 1b       	sub	r30, r24
    3156:	f9 0b       	sbc	r31, r25
    3158:	cf 01       	movw	r24, r30
    315a:	9c 87       	std	Y+12, r25	; 0x0c
    315c:	8b 87       	std	Y+11, r24	; 0x0b
    315e:	00 00       	nop
    3160:	29 81       	ldd	r18, Y+1	; 0x01
    3162:	3a 81       	ldd	r19, Y+2	; 0x02
    3164:	8d 81       	ldd	r24, Y+5	; 0x05
    3166:	9e 81       	ldd	r25, Y+6	; 0x06
    3168:	82 0f       	add	r24, r18
    316a:	93 1f       	adc	r25, r19
    316c:	9a 83       	std	Y+2, r25	; 0x02
    316e:	89 83       	std	Y+1, r24	; 0x01
    3170:	8e cf       	rjmp	.-228    	; 0x308e <u8g2_draw_string+0x30>
    3172:	00 00       	nop
    3174:	89 81       	ldd	r24, Y+1	; 0x01
    3176:	9a 81       	ldd	r25, Y+2	; 0x02
    3178:	2e 96       	adiw	r28, 0x0e	; 14
    317a:	0f b6       	in	r0, 0x3f	; 63
    317c:	f8 94       	cli
    317e:	de bf       	out	0x3e, r29	; 62
    3180:	0f be       	out	0x3f, r0	; 63
    3182:	cd bf       	out	0x3d, r28	; 61
    3184:	df 91       	pop	r29
    3186:	cf 91       	pop	r28
    3188:	08 95       	ret

0000318a <u8g2_DrawStr>:
    318a:	cf 93       	push	r28
    318c:	df 93       	push	r29
    318e:	cd b7       	in	r28, 0x3d	; 61
    3190:	de b7       	in	r29, 0x3e	; 62
    3192:	28 97       	sbiw	r28, 0x08	; 8
    3194:	0f b6       	in	r0, 0x3f	; 63
    3196:	f8 94       	cli
    3198:	de bf       	out	0x3e, r29	; 62
    319a:	0f be       	out	0x3f, r0	; 63
    319c:	cd bf       	out	0x3d, r28	; 61
    319e:	9a 83       	std	Y+2, r25	; 0x02
    31a0:	89 83       	std	Y+1, r24	; 0x01
    31a2:	7c 83       	std	Y+4, r23	; 0x04
    31a4:	6b 83       	std	Y+3, r22	; 0x03
    31a6:	5e 83       	std	Y+6, r21	; 0x06
    31a8:	4d 83       	std	Y+5, r20	; 0x05
    31aa:	38 87       	std	Y+8, r19	; 0x08
    31ac:	2f 83       	std	Y+7, r18	; 0x07
    31ae:	89 81       	ldd	r24, Y+1	; 0x01
    31b0:	9a 81       	ldd	r25, Y+2	; 0x02
    31b2:	22 e1       	ldi	r18, 0x12	; 18
    31b4:	30 e2       	ldi	r19, 0x20	; 32
    31b6:	fc 01       	movw	r30, r24
    31b8:	33 83       	std	Z+3, r19	; 0x03
    31ba:	22 83       	std	Z+2, r18	; 0x02
    31bc:	2f 81       	ldd	r18, Y+7	; 0x07
    31be:	38 85       	ldd	r19, Y+8	; 0x08
    31c0:	4d 81       	ldd	r20, Y+5	; 0x05
    31c2:	5e 81       	ldd	r21, Y+6	; 0x06
    31c4:	6b 81       	ldd	r22, Y+3	; 0x03
    31c6:	7c 81       	ldd	r23, Y+4	; 0x04
    31c8:	89 81       	ldd	r24, Y+1	; 0x01
    31ca:	9a 81       	ldd	r25, Y+2	; 0x02
    31cc:	0e 94 2f 18 	call	0x305e	; 0x305e <u8g2_draw_string>
    31d0:	28 96       	adiw	r28, 0x08	; 8
    31d2:	0f b6       	in	r0, 0x3f	; 63
    31d4:	f8 94       	cli
    31d6:	de bf       	out	0x3e, r29	; 62
    31d8:	0f be       	out	0x3f, r0	; 63
    31da:	cd bf       	out	0x3d, r28	; 61
    31dc:	df 91       	pop	r29
    31de:	cf 91       	pop	r28
    31e0:	08 95       	ret

000031e2 <u8g2_UpdateRefHeight>:
    31e2:	cf 93       	push	r28
    31e4:	df 93       	push	r29
    31e6:	00 d0       	rcall	.+0      	; 0x31e8 <u8g2_UpdateRefHeight+0x6>
    31e8:	cd b7       	in	r28, 0x3d	; 61
    31ea:	de b7       	in	r29, 0x3e	; 62
    31ec:	9a 83       	std	Y+2, r25	; 0x02
    31ee:	89 83       	std	Y+1, r24	; 0x01
    31f0:	89 81       	ldd	r24, Y+1	; 0x01
    31f2:	9a 81       	ldd	r25, Y+2	; 0x02
    31f4:	8c 5b       	subi	r24, 0xBC	; 188
    31f6:	9f 4f       	sbci	r25, 0xFF	; 255
    31f8:	fc 01       	movw	r30, r24
    31fa:	80 81       	ld	r24, Z
    31fc:	91 81       	ldd	r25, Z+1	; 0x01
    31fe:	89 2b       	or	r24, r25
    3200:	09 f4       	brne	.+2      	; 0x3204 <u8g2_UpdateRefHeight+0x22>
    3202:	af c0       	rjmp	.+350    	; 0x3362 <u8g2_UpdateRefHeight+0x180>
    3204:	89 81       	ldd	r24, Y+1	; 0x01
    3206:	9a 81       	ldd	r25, Y+2	; 0x02
    3208:	8c 59       	subi	r24, 0x9C	; 156
    320a:	9f 4f       	sbci	r25, 0xFF	; 255
    320c:	fc 01       	movw	r30, r24
    320e:	20 81       	ld	r18, Z
    3210:	89 81       	ldd	r24, Y+1	; 0x01
    3212:	9a 81       	ldd	r25, Y+2	; 0x02
    3214:	80 59       	subi	r24, 0x90	; 144
    3216:	9f 4f       	sbci	r25, 0xFF	; 255
    3218:	fc 01       	movw	r30, r24
    321a:	20 83       	st	Z, r18
    321c:	89 81       	ldd	r24, Y+1	; 0x01
    321e:	9a 81       	ldd	r25, Y+2	; 0x02
    3220:	8b 59       	subi	r24, 0x9B	; 155
    3222:	9f 4f       	sbci	r25, 0xFF	; 255
    3224:	fc 01       	movw	r30, r24
    3226:	20 81       	ld	r18, Z
    3228:	89 81       	ldd	r24, Y+1	; 0x01
    322a:	9a 81       	ldd	r25, Y+2	; 0x02
    322c:	8f 58       	subi	r24, 0x8F	; 143
    322e:	9f 4f       	sbci	r25, 0xFF	; 255
    3230:	fc 01       	movw	r30, r24
    3232:	20 83       	st	Z, r18
    3234:	89 81       	ldd	r24, Y+1	; 0x01
    3236:	9a 81       	ldd	r25, Y+2	; 0x02
    3238:	81 59       	subi	r24, 0x91	; 145
    323a:	9f 4f       	sbci	r25, 0xFF	; 255
    323c:	fc 01       	movw	r30, r24
    323e:	80 81       	ld	r24, Z
    3240:	88 23       	and	r24, r24
    3242:	09 f4       	brne	.+2      	; 0x3246 <u8g2_UpdateRefHeight+0x64>
    3244:	8f c0       	rjmp	.+286    	; 0x3364 <u8g2_UpdateRefHeight+0x182>
    3246:	89 81       	ldd	r24, Y+1	; 0x01
    3248:	9a 81       	ldd	r25, Y+2	; 0x02
    324a:	81 59       	subi	r24, 0x91	; 145
    324c:	9f 4f       	sbci	r25, 0xFF	; 255
    324e:	fc 01       	movw	r30, r24
    3250:	80 81       	ld	r24, Z
    3252:	81 30       	cpi	r24, 0x01	; 1
    3254:	b1 f5       	brne	.+108    	; 0x32c2 <u8g2_UpdateRefHeight+0xe0>
    3256:	89 81       	ldd	r24, Y+1	; 0x01
    3258:	9a 81       	ldd	r25, Y+2	; 0x02
    325a:	80 59       	subi	r24, 0x90	; 144
    325c:	9f 4f       	sbci	r25, 0xFF	; 255
    325e:	fc 01       	movw	r30, r24
    3260:	20 81       	ld	r18, Z
    3262:	89 81       	ldd	r24, Y+1	; 0x01
    3264:	9a 81       	ldd	r25, Y+2	; 0x02
    3266:	8a 59       	subi	r24, 0x9A	; 154
    3268:	9f 4f       	sbci	r25, 0xFF	; 255
    326a:	fc 01       	movw	r30, r24
    326c:	80 81       	ld	r24, Z
    326e:	28 17       	cp	r18, r24
    3270:	64 f4       	brge	.+24     	; 0x328a <u8g2_UpdateRefHeight+0xa8>
    3272:	89 81       	ldd	r24, Y+1	; 0x01
    3274:	9a 81       	ldd	r25, Y+2	; 0x02
    3276:	8a 59       	subi	r24, 0x9A	; 154
    3278:	9f 4f       	sbci	r25, 0xFF	; 255
    327a:	fc 01       	movw	r30, r24
    327c:	20 81       	ld	r18, Z
    327e:	89 81       	ldd	r24, Y+1	; 0x01
    3280:	9a 81       	ldd	r25, Y+2	; 0x02
    3282:	80 59       	subi	r24, 0x90	; 144
    3284:	9f 4f       	sbci	r25, 0xFF	; 255
    3286:	fc 01       	movw	r30, r24
    3288:	20 83       	st	Z, r18
    328a:	89 81       	ldd	r24, Y+1	; 0x01
    328c:	9a 81       	ldd	r25, Y+2	; 0x02
    328e:	8f 58       	subi	r24, 0x8F	; 143
    3290:	9f 4f       	sbci	r25, 0xFF	; 255
    3292:	fc 01       	movw	r30, r24
    3294:	20 81       	ld	r18, Z
    3296:	89 81       	ldd	r24, Y+1	; 0x01
    3298:	9a 81       	ldd	r25, Y+2	; 0x02
    329a:	89 59       	subi	r24, 0x99	; 153
    329c:	9f 4f       	sbci	r25, 0xFF	; 255
    329e:	fc 01       	movw	r30, r24
    32a0:	80 81       	ld	r24, Z
    32a2:	82 17       	cp	r24, r18
    32a4:	0c f0       	brlt	.+2      	; 0x32a8 <u8g2_UpdateRefHeight+0xc6>
    32a6:	5e c0       	rjmp	.+188    	; 0x3364 <u8g2_UpdateRefHeight+0x182>
    32a8:	89 81       	ldd	r24, Y+1	; 0x01
    32aa:	9a 81       	ldd	r25, Y+2	; 0x02
    32ac:	89 59       	subi	r24, 0x99	; 153
    32ae:	9f 4f       	sbci	r25, 0xFF	; 255
    32b0:	fc 01       	movw	r30, r24
    32b2:	20 81       	ld	r18, Z
    32b4:	89 81       	ldd	r24, Y+1	; 0x01
    32b6:	9a 81       	ldd	r25, Y+2	; 0x02
    32b8:	8f 58       	subi	r24, 0x8F	; 143
    32ba:	9f 4f       	sbci	r25, 0xFF	; 255
    32bc:	fc 01       	movw	r30, r24
    32be:	20 83       	st	Z, r18
    32c0:	51 c0       	rjmp	.+162    	; 0x3364 <u8g2_UpdateRefHeight+0x182>
    32c2:	89 81       	ldd	r24, Y+1	; 0x01
    32c4:	9a 81       	ldd	r25, Y+2	; 0x02
    32c6:	80 59       	subi	r24, 0x90	; 144
    32c8:	9f 4f       	sbci	r25, 0xFF	; 255
    32ca:	fc 01       	movw	r30, r24
    32cc:	80 81       	ld	r24, Z
    32ce:	28 2f       	mov	r18, r24
    32d0:	88 0f       	add	r24, r24
    32d2:	33 0b       	sbc	r19, r19
    32d4:	89 81       	ldd	r24, Y+1	; 0x01
    32d6:	9a 81       	ldd	r25, Y+2	; 0x02
    32d8:	8f 59       	subi	r24, 0x9F	; 159
    32da:	9f 4f       	sbci	r25, 0xFF	; 255
    32dc:	fc 01       	movw	r30, r24
    32de:	80 81       	ld	r24, Z
    32e0:	48 2f       	mov	r20, r24
    32e2:	88 0f       	add	r24, r24
    32e4:	55 0b       	sbc	r21, r21
    32e6:	89 81       	ldd	r24, Y+1	; 0x01
    32e8:	9a 81       	ldd	r25, Y+2	; 0x02
    32ea:	8d 59       	subi	r24, 0x9D	; 157
    32ec:	9f 4f       	sbci	r25, 0xFF	; 255
    32ee:	fc 01       	movw	r30, r24
    32f0:	80 81       	ld	r24, Z
    32f2:	08 2e       	mov	r0, r24
    32f4:	00 0c       	add	r0, r0
    32f6:	99 0b       	sbc	r25, r25
    32f8:	84 0f       	add	r24, r20
    32fa:	95 1f       	adc	r25, r21
    32fc:	28 17       	cp	r18, r24
    32fe:	39 07       	cpc	r19, r25
    3300:	ac f4       	brge	.+42     	; 0x332c <u8g2_UpdateRefHeight+0x14a>
    3302:	89 81       	ldd	r24, Y+1	; 0x01
    3304:	9a 81       	ldd	r25, Y+2	; 0x02
    3306:	8f 59       	subi	r24, 0x9F	; 159
    3308:	9f 4f       	sbci	r25, 0xFF	; 255
    330a:	fc 01       	movw	r30, r24
    330c:	80 81       	ld	r24, Z
    330e:	28 2f       	mov	r18, r24
    3310:	89 81       	ldd	r24, Y+1	; 0x01
    3312:	9a 81       	ldd	r25, Y+2	; 0x02
    3314:	8d 59       	subi	r24, 0x9D	; 157
    3316:	9f 4f       	sbci	r25, 0xFF	; 255
    3318:	fc 01       	movw	r30, r24
    331a:	80 81       	ld	r24, Z
    331c:	82 0f       	add	r24, r18
    331e:	28 2f       	mov	r18, r24
    3320:	89 81       	ldd	r24, Y+1	; 0x01
    3322:	9a 81       	ldd	r25, Y+2	; 0x02
    3324:	80 59       	subi	r24, 0x90	; 144
    3326:	9f 4f       	sbci	r25, 0xFF	; 255
    3328:	fc 01       	movw	r30, r24
    332a:	20 83       	st	Z, r18
    332c:	89 81       	ldd	r24, Y+1	; 0x01
    332e:	9a 81       	ldd	r25, Y+2	; 0x02
    3330:	8f 58       	subi	r24, 0x8F	; 143
    3332:	9f 4f       	sbci	r25, 0xFF	; 255
    3334:	fc 01       	movw	r30, r24
    3336:	20 81       	ld	r18, Z
    3338:	89 81       	ldd	r24, Y+1	; 0x01
    333a:	9a 81       	ldd	r25, Y+2	; 0x02
    333c:	8d 59       	subi	r24, 0x9D	; 157
    333e:	9f 4f       	sbci	r25, 0xFF	; 255
    3340:	fc 01       	movw	r30, r24
    3342:	80 81       	ld	r24, Z
    3344:	82 17       	cp	r24, r18
    3346:	74 f4       	brge	.+28     	; 0x3364 <u8g2_UpdateRefHeight+0x182>
    3348:	89 81       	ldd	r24, Y+1	; 0x01
    334a:	9a 81       	ldd	r25, Y+2	; 0x02
    334c:	8d 59       	subi	r24, 0x9D	; 157
    334e:	9f 4f       	sbci	r25, 0xFF	; 255
    3350:	fc 01       	movw	r30, r24
    3352:	20 81       	ld	r18, Z
    3354:	89 81       	ldd	r24, Y+1	; 0x01
    3356:	9a 81       	ldd	r25, Y+2	; 0x02
    3358:	8f 58       	subi	r24, 0x8F	; 143
    335a:	9f 4f       	sbci	r25, 0xFF	; 255
    335c:	fc 01       	movw	r30, r24
    335e:	20 83       	st	Z, r18
    3360:	01 c0       	rjmp	.+2      	; 0x3364 <u8g2_UpdateRefHeight+0x182>
    3362:	00 00       	nop
    3364:	0f 90       	pop	r0
    3366:	0f 90       	pop	r0
    3368:	df 91       	pop	r29
    336a:	cf 91       	pop	r28
    336c:	08 95       	ret

0000336e <u8g2_font_calc_vref_font>:
    336e:	cf 93       	push	r28
    3370:	df 93       	push	r29
    3372:	00 d0       	rcall	.+0      	; 0x3374 <u8g2_font_calc_vref_font+0x6>
    3374:	cd b7       	in	r28, 0x3d	; 61
    3376:	de b7       	in	r29, 0x3e	; 62
    3378:	9a 83       	std	Y+2, r25	; 0x02
    337a:	89 83       	std	Y+1, r24	; 0x01
    337c:	80 e0       	ldi	r24, 0x00	; 0
    337e:	90 e0       	ldi	r25, 0x00	; 0
    3380:	0f 90       	pop	r0
    3382:	0f 90       	pop	r0
    3384:	df 91       	pop	r29
    3386:	cf 91       	pop	r28
    3388:	08 95       	ret

0000338a <u8g2_SetFontPosBaseline>:
    338a:	cf 93       	push	r28
    338c:	df 93       	push	r29
    338e:	00 d0       	rcall	.+0      	; 0x3390 <u8g2_SetFontPosBaseline+0x6>
    3390:	cd b7       	in	r28, 0x3d	; 61
    3392:	de b7       	in	r29, 0x3e	; 62
    3394:	9a 83       	std	Y+2, r25	; 0x02
    3396:	89 83       	std	Y+1, r24	; 0x01
    3398:	89 81       	ldd	r24, Y+1	; 0x01
    339a:	9a 81       	ldd	r25, Y+2	; 0x02
    339c:	8a 5b       	subi	r24, 0xBA	; 186
    339e:	9f 4f       	sbci	r25, 0xFF	; 255
    33a0:	27 eb       	ldi	r18, 0xB7	; 183
    33a2:	39 e1       	ldi	r19, 0x19	; 25
    33a4:	fc 01       	movw	r30, r24
    33a6:	31 83       	std	Z+1, r19	; 0x01
    33a8:	20 83       	st	Z, r18
    33aa:	00 00       	nop
    33ac:	0f 90       	pop	r0
    33ae:	0f 90       	pop	r0
    33b0:	df 91       	pop	r29
    33b2:	cf 91       	pop	r28
    33b4:	08 95       	ret

000033b6 <u8g2_SetFont>:

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
{
    33b6:	cf 93       	push	r28
    33b8:	df 93       	push	r29
    33ba:	00 d0       	rcall	.+0      	; 0x33bc <u8g2_SetFont+0x6>
    33bc:	00 d0       	rcall	.+0      	; 0x33be <u8g2_SetFont+0x8>
    33be:	cd b7       	in	r28, 0x3d	; 61
    33c0:	de b7       	in	r29, 0x3e	; 62
    33c2:	9a 83       	std	Y+2, r25	; 0x02
    33c4:	89 83       	std	Y+1, r24	; 0x01
    33c6:	7c 83       	std	Y+4, r23	; 0x04
    33c8:	6b 83       	std	Y+3, r22	; 0x03
  if ( u8g2->font != font )
    33ca:	89 81       	ldd	r24, Y+1	; 0x01
    33cc:	9a 81       	ldd	r25, Y+2	; 0x02
    33ce:	8c 5b       	subi	r24, 0xBC	; 188
    33d0:	9f 4f       	sbci	r25, 0xFF	; 255
    33d2:	fc 01       	movw	r30, r24
    33d4:	20 81       	ld	r18, Z
    33d6:	31 81       	ldd	r19, Z+1	; 0x01
    33d8:	8b 81       	ldd	r24, Y+3	; 0x03
    33da:	9c 81       	ldd	r25, Y+4	; 0x04
    33dc:	28 17       	cp	r18, r24
    33de:	39 07       	cpc	r19, r25
    33e0:	b1 f0       	breq	.+44     	; 0x340e <u8g2_SetFont+0x58>
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    33e2:	89 81       	ldd	r24, Y+1	; 0x01
    33e4:	9a 81       	ldd	r25, Y+2	; 0x02
    33e6:	8c 5b       	subi	r24, 0xBC	; 188
    33e8:	9f 4f       	sbci	r25, 0xFF	; 255
    33ea:	2b 81       	ldd	r18, Y+3	; 0x03
    33ec:	3c 81       	ldd	r19, Y+4	; 0x04
    33ee:	fc 01       	movw	r30, r24
    33f0:	31 83       	std	Z+1, r19	; 0x01
    33f2:	20 83       	st	Z, r18
    u8g2_read_font_info(&(u8g2->font_info), font);
    33f4:	89 81       	ldd	r24, Y+1	; 0x01
    33f6:	9a 81       	ldd	r25, Y+2	; 0x02
    33f8:	89 5a       	subi	r24, 0xA9	; 169
    33fa:	9f 4f       	sbci	r25, 0xFF	; 255
    33fc:	2b 81       	ldd	r18, Y+3	; 0x03
    33fe:	3c 81       	ldd	r19, Y+4	; 0x04
    3400:	b9 01       	movw	r22, r18
    3402:	0e 94 59 11 	call	0x22b2	; 0x22b2 <u8g2_read_font_info>
    u8g2_UpdateRefHeight(u8g2);
    3406:	89 81       	ldd	r24, Y+1	; 0x01
    3408:	9a 81       	ldd	r25, Y+2	; 0x02
    340a:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <u8g2_UpdateRefHeight>
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    340e:	00 00       	nop
    3410:	0f 90       	pop	r0
    3412:	0f 90       	pop	r0
    3414:	0f 90       	pop	r0
    3416:	0f 90       	pop	r0
    3418:	df 91       	pop	r29
    341a:	cf 91       	pop	r28
    341c:	08 95       	ret

0000341e <u8g2_clip_intersection2>:
  will return 0 if there is no intersection and if a > b

*/

static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
    341e:	cf 93       	push	r28
    3420:	df 93       	push	r29
    3422:	cd b7       	in	r28, 0x3d	; 61
    3424:	de b7       	in	r29, 0x3e	; 62
    3426:	2c 97       	sbiw	r28, 0x0c	; 12
    3428:	0f b6       	in	r0, 0x3f	; 63
    342a:	f8 94       	cli
    342c:	de bf       	out	0x3e, r29	; 62
    342e:	0f be       	out	0x3f, r0	; 63
    3430:	cd bf       	out	0x3d, r28	; 61
    3432:	9e 83       	std	Y+6, r25	; 0x06
    3434:	8d 83       	std	Y+5, r24	; 0x05
    3436:	78 87       	std	Y+8, r23	; 0x08
    3438:	6f 83       	std	Y+7, r22	; 0x07
    343a:	5a 87       	std	Y+10, r21	; 0x0a
    343c:	49 87       	std	Y+9, r20	; 0x09
    343e:	3c 87       	std	Y+12, r19	; 0x0c
    3440:	2b 87       	std	Y+11, r18	; 0x0b
  u8g2_uint_t a = *ap;
    3442:	8d 81       	ldd	r24, Y+5	; 0x05
    3444:	9e 81       	ldd	r25, Y+6	; 0x06
    3446:	fc 01       	movw	r30, r24
    3448:	80 81       	ld	r24, Z
    344a:	91 81       	ldd	r25, Z+1	; 0x01
    344c:	9a 83       	std	Y+2, r25	; 0x02
    344e:	89 83       	std	Y+1, r24	; 0x01
  u8g2_uint_t b;
  b  = a;
    3450:	89 81       	ldd	r24, Y+1	; 0x01
    3452:	9a 81       	ldd	r25, Y+2	; 0x02
    3454:	9c 83       	std	Y+4, r25	; 0x04
    3456:	8b 83       	std	Y+3, r24	; 0x03
  b += *len;
    3458:	8f 81       	ldd	r24, Y+7	; 0x07
    345a:	98 85       	ldd	r25, Y+8	; 0x08
    345c:	fc 01       	movw	r30, r24
    345e:	80 81       	ld	r24, Z
    3460:	91 81       	ldd	r25, Z+1	; 0x01
    3462:	2b 81       	ldd	r18, Y+3	; 0x03
    3464:	3c 81       	ldd	r19, Y+4	; 0x04
    3466:	82 0f       	add	r24, r18
    3468:	93 1f       	adc	r25, r19
    346a:	9c 83       	std	Y+4, r25	; 0x04
    346c:	8b 83       	std	Y+3, r24	; 0x03
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    346e:	29 81       	ldd	r18, Y+1	; 0x01
    3470:	3a 81       	ldd	r19, Y+2	; 0x02
    3472:	8b 81       	ldd	r24, Y+3	; 0x03
    3474:	9c 81       	ldd	r25, Y+4	; 0x04
    3476:	82 17       	cp	r24, r18
    3478:	93 07       	cpc	r25, r19
    347a:	a8 f4       	brcc	.+42     	; 0x34a6 <u8g2_clip_intersection2+0x88>
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    347c:	29 81       	ldd	r18, Y+1	; 0x01
    347e:	3a 81       	ldd	r19, Y+2	; 0x02
    3480:	8b 85       	ldd	r24, Y+11	; 0x0b
    3482:	9c 85       	ldd	r25, Y+12	; 0x0c
    3484:	28 17       	cp	r18, r24
    3486:	39 07       	cpc	r19, r25
    3488:	50 f4       	brcc	.+20     	; 0x349e <u8g2_clip_intersection2+0x80>
    {
      b = d;
    348a:	8b 85       	ldd	r24, Y+11	; 0x0b
    348c:	9c 85       	ldd	r25, Y+12	; 0x0c
    348e:	9c 83       	std	Y+4, r25	; 0x04
    3490:	8b 83       	std	Y+3, r24	; 0x03
      b--;
    3492:	8b 81       	ldd	r24, Y+3	; 0x03
    3494:	9c 81       	ldd	r25, Y+4	; 0x04
    3496:	01 97       	sbiw	r24, 0x01	; 1
    3498:	9c 83       	std	Y+4, r25	; 0x04
    349a:	8b 83       	std	Y+3, r24	; 0x03
    349c:	04 c0       	rjmp	.+8      	; 0x34a6 <u8g2_clip_intersection2+0x88>
    }
    else
    {
      a = c;
    349e:	89 85       	ldd	r24, Y+9	; 0x09
    34a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    34a2:	9a 83       	std	Y+2, r25	; 0x02
    34a4:	89 83       	std	Y+1, r24	; 0x01
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    34a6:	29 81       	ldd	r18, Y+1	; 0x01
    34a8:	3a 81       	ldd	r19, Y+2	; 0x02
    34aa:	8b 85       	ldd	r24, Y+11	; 0x0b
    34ac:	9c 85       	ldd	r25, Y+12	; 0x0c
    34ae:	28 17       	cp	r18, r24
    34b0:	39 07       	cpc	r19, r25
    34b2:	10 f0       	brcs	.+4      	; 0x34b8 <u8g2_clip_intersection2+0x9a>
    return 0;
    34b4:	80 e0       	ldi	r24, 0x00	; 0
    34b6:	38 c0       	rjmp	.+112    	; 0x3528 <u8g2_clip_intersection2+0x10a>
  if ( b <= c )
    34b8:	2b 81       	ldd	r18, Y+3	; 0x03
    34ba:	3c 81       	ldd	r19, Y+4	; 0x04
    34bc:	89 85       	ldd	r24, Y+9	; 0x09
    34be:	9a 85       	ldd	r25, Y+10	; 0x0a
    34c0:	82 17       	cp	r24, r18
    34c2:	93 07       	cpc	r25, r19
    34c4:	10 f0       	brcs	.+4      	; 0x34ca <u8g2_clip_intersection2+0xac>
    return 0;
    34c6:	80 e0       	ldi	r24, 0x00	; 0
    34c8:	2f c0       	rjmp	.+94     	; 0x3528 <u8g2_clip_intersection2+0x10a>
  if ( a < c )		
    34ca:	29 81       	ldd	r18, Y+1	; 0x01
    34cc:	3a 81       	ldd	r19, Y+2	; 0x02
    34ce:	89 85       	ldd	r24, Y+9	; 0x09
    34d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    34d2:	28 17       	cp	r18, r24
    34d4:	39 07       	cpc	r19, r25
    34d6:	20 f4       	brcc	.+8      	; 0x34e0 <u8g2_clip_intersection2+0xc2>
    a = c;
    34d8:	89 85       	ldd	r24, Y+9	; 0x09
    34da:	9a 85       	ldd	r25, Y+10	; 0x0a
    34dc:	9a 83       	std	Y+2, r25	; 0x02
    34de:	89 83       	std	Y+1, r24	; 0x01
  if ( b > d )
    34e0:	2b 81       	ldd	r18, Y+3	; 0x03
    34e2:	3c 81       	ldd	r19, Y+4	; 0x04
    34e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    34e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    34e8:	82 17       	cp	r24, r18
    34ea:	93 07       	cpc	r25, r19
    34ec:	20 f4       	brcc	.+8      	; 0x34f6 <u8g2_clip_intersection2+0xd8>
    b = d;
    34ee:	8b 85       	ldd	r24, Y+11	; 0x0b
    34f0:	9c 85       	ldd	r25, Y+12	; 0x0c
    34f2:	9c 83       	std	Y+4, r25	; 0x04
    34f4:	8b 83       	std	Y+3, r24	; 0x03
  
  *ap = a;
    34f6:	8d 81       	ldd	r24, Y+5	; 0x05
    34f8:	9e 81       	ldd	r25, Y+6	; 0x06
    34fa:	29 81       	ldd	r18, Y+1	; 0x01
    34fc:	3a 81       	ldd	r19, Y+2	; 0x02
    34fe:	fc 01       	movw	r30, r24
    3500:	31 83       	std	Z+1, r19	; 0x01
    3502:	20 83       	st	Z, r18
  b -= a;
    3504:	2b 81       	ldd	r18, Y+3	; 0x03
    3506:	3c 81       	ldd	r19, Y+4	; 0x04
    3508:	89 81       	ldd	r24, Y+1	; 0x01
    350a:	9a 81       	ldd	r25, Y+2	; 0x02
    350c:	a9 01       	movw	r20, r18
    350e:	48 1b       	sub	r20, r24
    3510:	59 0b       	sbc	r21, r25
    3512:	ca 01       	movw	r24, r20
    3514:	9c 83       	std	Y+4, r25	; 0x04
    3516:	8b 83       	std	Y+3, r24	; 0x03
  *len = b;
    3518:	8f 81       	ldd	r24, Y+7	; 0x07
    351a:	98 85       	ldd	r25, Y+8	; 0x08
    351c:	2b 81       	ldd	r18, Y+3	; 0x03
    351e:	3c 81       	ldd	r19, Y+4	; 0x04
    3520:	fc 01       	movw	r30, r24
    3522:	31 83       	std	Z+1, r19	; 0x01
    3524:	20 83       	st	Z, r18
  return 1;
    3526:	81 e0       	ldi	r24, 0x01	; 1
}
    3528:	2c 96       	adiw	r28, 0x0c	; 12
    352a:	0f b6       	in	r0, 0x3f	; 63
    352c:	f8 94       	cli
    352e:	de bf       	out	0x3e, r29	; 62
    3530:	0f be       	out	0x3f, r0	; 63
    3532:	cd bf       	out	0x3d, r28	; 61
    3534:	df 91       	pop	r29
    3536:	cf 91       	pop	r28
    3538:	08 95       	ret

0000353a <u8g2_draw_hv_line_2dir>:
  This function first adjusts the y position to the local buffer. Then it
  will clip the line and call u8g2_draw_low_level_hv_line()

*/
void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    353a:	0f 93       	push	r16
    353c:	cf 93       	push	r28
    353e:	df 93       	push	r29
    3540:	cd b7       	in	r28, 0x3d	; 61
    3542:	de b7       	in	r29, 0x3e	; 62
    3544:	29 97       	sbiw	r28, 0x09	; 9
    3546:	0f b6       	in	r0, 0x3f	; 63
    3548:	f8 94       	cli
    354a:	de bf       	out	0x3e, r29	; 62
    354c:	0f be       	out	0x3f, r0	; 63
    354e:	cd bf       	out	0x3d, r28	; 61
    3550:	9a 83       	std	Y+2, r25	; 0x02
    3552:	89 83       	std	Y+1, r24	; 0x01
    3554:	7c 83       	std	Y+4, r23	; 0x04
    3556:	6b 83       	std	Y+3, r22	; 0x03
    3558:	5e 83       	std	Y+6, r21	; 0x06
    355a:	4d 83       	std	Y+5, r20	; 0x05
    355c:	38 87       	std	Y+8, r19	; 0x08
    355e:	2f 83       	std	Y+7, r18	; 0x07
    3560:	09 87       	std	Y+9, r16	; 0x09

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
    3562:	89 81       	ldd	r24, Y+1	; 0x01
    3564:	9a 81       	ldd	r25, Y+2	; 0x02
    3566:	dc 01       	movw	r26, r24
    3568:	9a 96       	adiw	r26, 0x2a	; 42
    356a:	8d 91       	ld	r24, X+
    356c:	9c 91       	ld	r25, X
    356e:	9b 97       	sbiw	r26, 0x2b	; 43
    3570:	2d 81       	ldd	r18, Y+5	; 0x05
    3572:	3e 81       	ldd	r19, Y+6	; 0x06
    3574:	f9 01       	movw	r30, r18
    3576:	e8 1b       	sub	r30, r24
    3578:	f9 0b       	sbc	r31, r25
    357a:	cf 01       	movw	r24, r30
    357c:	9e 83       	std	Y+6, r25	; 0x06
    357e:	8d 83       	std	Y+5, r24	; 0x05
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
    3580:	89 81       	ldd	r24, Y+1	; 0x01
    3582:	9a 81       	ldd	r25, Y+2	; 0x02
    3584:	dc 01       	movw	r26, r24
    3586:	5e 96       	adiw	r26, 0x1e	; 30
    3588:	ed 91       	ld	r30, X+
    358a:	fc 91       	ld	r31, X
    358c:	5f 97       	sbiw	r26, 0x1f	; 31
    358e:	2f 81       	ldd	r18, Y+7	; 0x07
    3590:	38 85       	ldd	r19, Y+8	; 0x08
    3592:	4d 81       	ldd	r20, Y+5	; 0x05
    3594:	5e 81       	ldd	r21, Y+6	; 0x06
    3596:	6b 81       	ldd	r22, Y+3	; 0x03
    3598:	7c 81       	ldd	r23, Y+4	; 0x04
    359a:	89 81       	ldd	r24, Y+1	; 0x01
    359c:	9a 81       	ldd	r25, Y+2	; 0x02
    359e:	09 85       	ldd	r16, Y+9	; 0x09
    35a0:	09 95       	icall
}
    35a2:	00 00       	nop
    35a4:	29 96       	adiw	r28, 0x09	; 9
    35a6:	0f b6       	in	r0, 0x3f	; 63
    35a8:	f8 94       	cli
    35aa:	de bf       	out	0x3e, r29	; 62
    35ac:	0f be       	out	0x3f, r0	; 63
    35ae:	cd bf       	out	0x3d, r28	; 61
    35b0:	df 91       	pop	r29
    35b2:	cf 91       	pop	r28
    35b4:	0f 91       	pop	r16
    35b6:	08 95       	ret

000035b8 <u8g2_DrawHVLine>:
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    35b8:	0f 93       	push	r16
    35ba:	cf 93       	push	r28
    35bc:	df 93       	push	r29
    35be:	cd b7       	in	r28, 0x3d	; 61
    35c0:	de b7       	in	r29, 0x3e	; 62
    35c2:	29 97       	sbiw	r28, 0x09	; 9
    35c4:	0f b6       	in	r0, 0x3f	; 63
    35c6:	f8 94       	cli
    35c8:	de bf       	out	0x3e, r29	; 62
    35ca:	0f be       	out	0x3f, r0	; 63
    35cc:	cd bf       	out	0x3d, r28	; 61
    35ce:	9a 83       	std	Y+2, r25	; 0x02
    35d0:	89 83       	std	Y+1, r24	; 0x01
    35d2:	7c 83       	std	Y+4, r23	; 0x04
    35d4:	6b 83       	std	Y+3, r22	; 0x03
    35d6:	5e 83       	std	Y+6, r21	; 0x06
    35d8:	4d 83       	std	Y+5, r20	; 0x05
    35da:	38 87       	std	Y+8, r19	; 0x08
    35dc:	2f 83       	std	Y+7, r18	; 0x07
    35de:	09 87       	std	Y+9, r16	; 0x09
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
    35e0:	89 81       	ldd	r24, Y+1	; 0x01
    35e2:	9a 81       	ldd	r25, Y+2	; 0x02
    35e4:	82 59       	subi	r24, 0x92	; 146
    35e6:	9f 4f       	sbci	r25, 0xFF	; 255
    35e8:	dc 01       	movw	r26, r24
    35ea:	8c 91       	ld	r24, X
    35ec:	88 23       	and	r24, r24
    35ee:	09 f4       	brne	.+2      	; 0x35f2 <u8g2_DrawHVLine+0x3a>
    35f0:	ad c0       	rjmp	.+346    	; 0x374c <u8g2_DrawHVLine+0x194>
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
    35f2:	8f 81       	ldd	r24, Y+7	; 0x07
    35f4:	98 85       	ldd	r25, Y+8	; 0x08
    35f6:	89 2b       	or	r24, r25
    35f8:	09 f4       	brne	.+2      	; 0x35fc <u8g2_DrawHVLine+0x44>
    35fa:	a8 c0       	rjmp	.+336    	; 0x374c <u8g2_DrawHVLine+0x194>
    {
    
      /* convert to two directions */    
      if ( len > 1 )
    35fc:	8f 81       	ldd	r24, Y+7	; 0x07
    35fe:	98 85       	ldd	r25, Y+8	; 0x08
    3600:	02 97       	sbiw	r24, 0x02	; 2
    3602:	28 f1       	brcs	.+74     	; 0x364e <u8g2_DrawHVLine+0x96>
      {
	if ( dir == 2 )
    3604:	89 85       	ldd	r24, Y+9	; 0x09
    3606:	82 30       	cpi	r24, 0x02	; 2
    3608:	81 f4       	brne	.+32     	; 0x362a <u8g2_DrawHVLine+0x72>
	{
	  x -= len;
    360a:	2b 81       	ldd	r18, Y+3	; 0x03
    360c:	3c 81       	ldd	r19, Y+4	; 0x04
    360e:	8f 81       	ldd	r24, Y+7	; 0x07
    3610:	98 85       	ldd	r25, Y+8	; 0x08
    3612:	f9 01       	movw	r30, r18
    3614:	e8 1b       	sub	r30, r24
    3616:	f9 0b       	sbc	r31, r25
    3618:	cf 01       	movw	r24, r30
    361a:	9c 83       	std	Y+4, r25	; 0x04
    361c:	8b 83       	std	Y+3, r24	; 0x03
	  x++;
    361e:	8b 81       	ldd	r24, Y+3	; 0x03
    3620:	9c 81       	ldd	r25, Y+4	; 0x04
    3622:	01 96       	adiw	r24, 0x01	; 1
    3624:	9c 83       	std	Y+4, r25	; 0x04
    3626:	8b 83       	std	Y+3, r24	; 0x03
    3628:	12 c0       	rjmp	.+36     	; 0x364e <u8g2_DrawHVLine+0x96>
	}
	else if ( dir == 3 )
    362a:	89 85       	ldd	r24, Y+9	; 0x09
    362c:	83 30       	cpi	r24, 0x03	; 3
    362e:	79 f4       	brne	.+30     	; 0x364e <u8g2_DrawHVLine+0x96>
	{
	  y -= len;
    3630:	2d 81       	ldd	r18, Y+5	; 0x05
    3632:	3e 81       	ldd	r19, Y+6	; 0x06
    3634:	8f 81       	ldd	r24, Y+7	; 0x07
    3636:	98 85       	ldd	r25, Y+8	; 0x08
    3638:	a9 01       	movw	r20, r18
    363a:	48 1b       	sub	r20, r24
    363c:	59 0b       	sbc	r21, r25
    363e:	ca 01       	movw	r24, r20
    3640:	9e 83       	std	Y+6, r25	; 0x06
    3642:	8d 83       	std	Y+5, r24	; 0x05
	  y++;
    3644:	8d 81       	ldd	r24, Y+5	; 0x05
    3646:	9e 81       	ldd	r25, Y+6	; 0x06
    3648:	01 96       	adiw	r24, 0x01	; 1
    364a:	9e 83       	std	Y+6, r25	; 0x06
    364c:	8d 83       	std	Y+5, r24	; 0x05
	}
      }
      dir &= 1;  
    364e:	89 85       	ldd	r24, Y+9	; 0x09
    3650:	81 70       	andi	r24, 0x01	; 1
    3652:	89 87       	std	Y+9, r24	; 0x09
      
      /* clip against the user window */
      if ( dir == 0 )
    3654:	89 85       	ldd	r24, Y+9	; 0x09
    3656:	88 23       	and	r24, r24
    3658:	71 f5       	brne	.+92     	; 0x36b6 <u8g2_DrawHVLine+0xfe>
      {
	if ( y < u8g2->user_y0 )
    365a:	89 81       	ldd	r24, Y+1	; 0x01
    365c:	9a 81       	ldd	r25, Y+2	; 0x02
    365e:	dc 01       	movw	r26, r24
    3660:	d8 96       	adiw	r26, 0x38	; 56
    3662:	2d 91       	ld	r18, X+
    3664:	3c 91       	ld	r19, X
    3666:	d9 97       	sbiw	r26, 0x39	; 57
    3668:	8d 81       	ldd	r24, Y+5	; 0x05
    366a:	9e 81       	ldd	r25, Y+6	; 0x06
    366c:	82 17       	cp	r24, r18
    366e:	93 07       	cpc	r25, r19
    3670:	08 f4       	brcc	.+2      	; 0x3674 <u8g2_DrawHVLine+0xbc>
    3672:	63 c0       	rjmp	.+198    	; 0x373a <u8g2_DrawHVLine+0x182>
	  return;
	if ( y >= u8g2->user_y1 )
    3674:	89 81       	ldd	r24, Y+1	; 0x01
    3676:	9a 81       	ldd	r25, Y+2	; 0x02
    3678:	fc 01       	movw	r30, r24
    367a:	22 ad       	ldd	r18, Z+58	; 0x3a
    367c:	33 ad       	ldd	r19, Z+59	; 0x3b
    367e:	8d 81       	ldd	r24, Y+5	; 0x05
    3680:	9e 81       	ldd	r25, Y+6	; 0x06
    3682:	82 17       	cp	r24, r18
    3684:	93 07       	cpc	r25, r19
    3686:	08 f0       	brcs	.+2      	; 0x368a <u8g2_DrawHVLine+0xd2>
    3688:	5a c0       	rjmp	.+180    	; 0x373e <u8g2_DrawHVLine+0x186>
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    368a:	89 81       	ldd	r24, Y+1	; 0x01
    368c:	9a 81       	ldd	r25, Y+2	; 0x02
    368e:	dc 01       	movw	r26, r24
    3690:	d6 96       	adiw	r26, 0x36	; 54
    3692:	2d 91       	ld	r18, X+
    3694:	3c 91       	ld	r19, X
    3696:	d7 97       	sbiw	r26, 0x37	; 55
    3698:	89 81       	ldd	r24, Y+1	; 0x01
    369a:	9a 81       	ldd	r25, Y+2	; 0x02
    369c:	fc 01       	movw	r30, r24
    369e:	44 a9       	ldd	r20, Z+52	; 0x34
    36a0:	55 a9       	ldd	r21, Z+53	; 0x35
    36a2:	be 01       	movw	r22, r28
    36a4:	69 5f       	subi	r22, 0xF9	; 249
    36a6:	7f 4f       	sbci	r23, 0xFF	; 255
    36a8:	ce 01       	movw	r24, r28
    36aa:	03 96       	adiw	r24, 0x03	; 3
    36ac:	0e 94 0f 1a 	call	0x341e	; 0x341e <u8g2_clip_intersection2>
    36b0:	88 23       	and	r24, r24
    36b2:	61 f5       	brne	.+88     	; 0x370c <u8g2_DrawHVLine+0x154>
	  return;
    36b4:	4b c0       	rjmp	.+150    	; 0x374c <u8g2_DrawHVLine+0x194>
      }
      else
      {
	if ( x < u8g2->user_x0 )
    36b6:	89 81       	ldd	r24, Y+1	; 0x01
    36b8:	9a 81       	ldd	r25, Y+2	; 0x02
    36ba:	dc 01       	movw	r26, r24
    36bc:	d4 96       	adiw	r26, 0x34	; 52
    36be:	2d 91       	ld	r18, X+
    36c0:	3c 91       	ld	r19, X
    36c2:	d5 97       	sbiw	r26, 0x35	; 53
    36c4:	8b 81       	ldd	r24, Y+3	; 0x03
    36c6:	9c 81       	ldd	r25, Y+4	; 0x04
    36c8:	82 17       	cp	r24, r18
    36ca:	93 07       	cpc	r25, r19
    36cc:	d0 f1       	brcs	.+116    	; 0x3742 <u8g2_DrawHVLine+0x18a>
	  return;
	if ( x >= u8g2->user_x1 )
    36ce:	89 81       	ldd	r24, Y+1	; 0x01
    36d0:	9a 81       	ldd	r25, Y+2	; 0x02
    36d2:	fc 01       	movw	r30, r24
    36d4:	26 a9       	ldd	r18, Z+54	; 0x36
    36d6:	37 a9       	ldd	r19, Z+55	; 0x37
    36d8:	8b 81       	ldd	r24, Y+3	; 0x03
    36da:	9c 81       	ldd	r25, Y+4	; 0x04
    36dc:	82 17       	cp	r24, r18
    36de:	93 07       	cpc	r25, r19
    36e0:	90 f5       	brcc	.+100    	; 0x3746 <u8g2_DrawHVLine+0x18e>
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    36e2:	89 81       	ldd	r24, Y+1	; 0x01
    36e4:	9a 81       	ldd	r25, Y+2	; 0x02
    36e6:	dc 01       	movw	r26, r24
    36e8:	da 96       	adiw	r26, 0x3a	; 58
    36ea:	2d 91       	ld	r18, X+
    36ec:	3c 91       	ld	r19, X
    36ee:	db 97       	sbiw	r26, 0x3b	; 59
    36f0:	89 81       	ldd	r24, Y+1	; 0x01
    36f2:	9a 81       	ldd	r25, Y+2	; 0x02
    36f4:	fc 01       	movw	r30, r24
    36f6:	40 ad       	ldd	r20, Z+56	; 0x38
    36f8:	51 ad       	ldd	r21, Z+57	; 0x39
    36fa:	be 01       	movw	r22, r28
    36fc:	69 5f       	subi	r22, 0xF9	; 249
    36fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3700:	ce 01       	movw	r24, r28
    3702:	05 96       	adiw	r24, 0x05	; 5
    3704:	0e 94 0f 1a 	call	0x341e	; 0x341e <u8g2_clip_intersection2>
    3708:	88 23       	and	r24, r24
    370a:	f9 f0       	breq	.+62     	; 0x374a <u8g2_DrawHVLine+0x192>
	  return;
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    370c:	89 81       	ldd	r24, Y+1	; 0x01
    370e:	9a 81       	ldd	r25, Y+2	; 0x02
    3710:	dc 01       	movw	r26, r24
    3712:	90 96       	adiw	r26, 0x20	; 32
    3714:	8d 91       	ld	r24, X+
    3716:	9c 91       	ld	r25, X
    3718:	91 97       	sbiw	r26, 0x21	; 33
    371a:	dc 01       	movw	r26, r24
    371c:	14 96       	adiw	r26, 0x04	; 4
    371e:	ed 91       	ld	r30, X+
    3720:	fc 91       	ld	r31, X
    3722:	15 97       	sbiw	r26, 0x05	; 5
    3724:	2f 81       	ldd	r18, Y+7	; 0x07
    3726:	38 85       	ldd	r19, Y+8	; 0x08
    3728:	4d 81       	ldd	r20, Y+5	; 0x05
    372a:	5e 81       	ldd	r21, Y+6	; 0x06
    372c:	6b 81       	ldd	r22, Y+3	; 0x03
    372e:	7c 81       	ldd	r23, Y+4	; 0x04
    3730:	89 81       	ldd	r24, Y+1	; 0x01
    3732:	9a 81       	ldd	r25, Y+2	; 0x02
    3734:	09 85       	ldd	r16, Y+9	; 0x09
    3736:	09 95       	icall
    3738:	09 c0       	rjmp	.+18     	; 0x374c <u8g2_DrawHVLine+0x194>
      
      /* clip against the user window */
      if ( dir == 0 )
      {
	if ( y < u8g2->user_y0 )
	  return;
    373a:	00 00       	nop
    373c:	07 c0       	rjmp	.+14     	; 0x374c <u8g2_DrawHVLine+0x194>
	if ( y >= u8g2->user_y1 )
	  return;
    373e:	00 00       	nop
    3740:	05 c0       	rjmp	.+10     	; 0x374c <u8g2_DrawHVLine+0x194>
	  return;
      }
      else
      {
	if ( x < u8g2->user_x0 )
	  return;
    3742:	00 00       	nop
    3744:	03 c0       	rjmp	.+6      	; 0x374c <u8g2_DrawHVLine+0x194>
	if ( x >= u8g2->user_x1 )
	  return;
    3746:	00 00       	nop
    3748:	01 c0       	rjmp	.+2      	; 0x374c <u8g2_DrawHVLine+0x194>
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
	  return;
    374a:	00 00       	nop
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    }
}
    374c:	29 96       	adiw	r28, 0x09	; 9
    374e:	0f b6       	in	r0, 0x3f	; 63
    3750:	f8 94       	cli
    3752:	de bf       	out	0x3e, r29	; 62
    3754:	0f be       	out	0x3f, r0	; 63
    3756:	cd bf       	out	0x3d, r28	; 61
    3758:	df 91       	pop	r29
    375a:	cf 91       	pop	r28
    375c:	0f 91       	pop	r16
    375e:	08 95       	ret

00003760 <u8g2_is_intersection_decision_tree>:
  version with asymetric boundaries.
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
    3760:	cf 93       	push	r28
    3762:	df 93       	push	r29
    3764:	cd b7       	in	r28, 0x3d	; 61
    3766:	de b7       	in	r29, 0x3e	; 62
    3768:	28 97       	sbiw	r28, 0x08	; 8
    376a:	0f b6       	in	r0, 0x3f	; 63
    376c:	f8 94       	cli
    376e:	de bf       	out	0x3e, r29	; 62
    3770:	0f be       	out	0x3f, r0	; 63
    3772:	cd bf       	out	0x3d, r28	; 61
    3774:	9a 83       	std	Y+2, r25	; 0x02
    3776:	89 83       	std	Y+1, r24	; 0x01
    3778:	7c 83       	std	Y+4, r23	; 0x04
    377a:	6b 83       	std	Y+3, r22	; 0x03
    377c:	5e 83       	std	Y+6, r21	; 0x06
    377e:	4d 83       	std	Y+5, r20	; 0x05
    3780:	38 87       	std	Y+8, r19	; 0x08
    3782:	2f 83       	std	Y+7, r18	; 0x07
  if ( v0 < a1 )		// v0 <= a1
    3784:	2d 81       	ldd	r18, Y+5	; 0x05
    3786:	3e 81       	ldd	r19, Y+6	; 0x06
    3788:	8b 81       	ldd	r24, Y+3	; 0x03
    378a:	9c 81       	ldd	r25, Y+4	; 0x04
    378c:	28 17       	cp	r18, r24
    378e:	39 07       	cpc	r19, r25
    3790:	a0 f4       	brcc	.+40     	; 0x37ba <u8g2_is_intersection_decision_tree+0x5a>
  {
    if ( v1 > a0 )	// v1 >= a0
    3792:	2f 81       	ldd	r18, Y+7	; 0x07
    3794:	38 85       	ldd	r19, Y+8	; 0x08
    3796:	89 81       	ldd	r24, Y+1	; 0x01
    3798:	9a 81       	ldd	r25, Y+2	; 0x02
    379a:	82 17       	cp	r24, r18
    379c:	93 07       	cpc	r25, r19
    379e:	10 f4       	brcc	.+4      	; 0x37a4 <u8g2_is_intersection_decision_tree+0x44>
    {
      return 1;
    37a0:	81 e0       	ldi	r24, 0x01	; 1
    37a2:	1e c0       	rjmp	.+60     	; 0x37e0 <u8g2_is_intersection_decision_tree+0x80>
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    37a4:	2d 81       	ldd	r18, Y+5	; 0x05
    37a6:	3e 81       	ldd	r19, Y+6	; 0x06
    37a8:	8f 81       	ldd	r24, Y+7	; 0x07
    37aa:	98 85       	ldd	r25, Y+8	; 0x08
    37ac:	82 17       	cp	r24, r18
    37ae:	93 07       	cpc	r25, r19
    37b0:	10 f4       	brcc	.+4      	; 0x37b6 <u8g2_is_intersection_decision_tree+0x56>
      {
	return 1;
    37b2:	81 e0       	ldi	r24, 0x01	; 1
    37b4:	15 c0       	rjmp	.+42     	; 0x37e0 <u8g2_is_intersection_decision_tree+0x80>
      }
      else
      {
	return 0;
    37b6:	80 e0       	ldi	r24, 0x00	; 0
    37b8:	13 c0       	rjmp	.+38     	; 0x37e0 <u8g2_is_intersection_decision_tree+0x80>
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    37ba:	2f 81       	ldd	r18, Y+7	; 0x07
    37bc:	38 85       	ldd	r19, Y+8	; 0x08
    37be:	89 81       	ldd	r24, Y+1	; 0x01
    37c0:	9a 81       	ldd	r25, Y+2	; 0x02
    37c2:	82 17       	cp	r24, r18
    37c4:	93 07       	cpc	r25, r19
    37c6:	58 f4       	brcc	.+22     	; 0x37de <u8g2_is_intersection_decision_tree+0x7e>
    {
      if ( v0 > v1 )	// v0 > v1
    37c8:	2d 81       	ldd	r18, Y+5	; 0x05
    37ca:	3e 81       	ldd	r19, Y+6	; 0x06
    37cc:	8f 81       	ldd	r24, Y+7	; 0x07
    37ce:	98 85       	ldd	r25, Y+8	; 0x08
    37d0:	82 17       	cp	r24, r18
    37d2:	93 07       	cpc	r25, r19
    37d4:	10 f4       	brcc	.+4      	; 0x37da <u8g2_is_intersection_decision_tree+0x7a>
      {
	return 1;
    37d6:	81 e0       	ldi	r24, 0x01	; 1
    37d8:	03 c0       	rjmp	.+6      	; 0x37e0 <u8g2_is_intersection_decision_tree+0x80>
      }
      else
      {
	return 0;
    37da:	80 e0       	ldi	r24, 0x00	; 0
    37dc:	01 c0       	rjmp	.+2      	; 0x37e0 <u8g2_is_intersection_decision_tree+0x80>
      }
    }
    else
    {
      return 0;
    37de:	80 e0       	ldi	r24, 0x00	; 0
    }
  }
}
    37e0:	28 96       	adiw	r28, 0x08	; 8
    37e2:	0f b6       	in	r0, 0x3f	; 63
    37e4:	f8 94       	cli
    37e6:	de bf       	out	0x3e, r29	; 62
    37e8:	0f be       	out	0x3f, r0	; 63
    37ea:	cd bf       	out	0x3d, r28	; 61
    37ec:	df 91       	pop	r29
    37ee:	cf 91       	pop	r28
    37f0:	08 95       	ret

000037f2 <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    37f2:	0f 93       	push	r16
    37f4:	1f 93       	push	r17
    37f6:	cf 93       	push	r28
    37f8:	df 93       	push	r29
    37fa:	cd b7       	in	r28, 0x3d	; 61
    37fc:	de b7       	in	r29, 0x3e	; 62
    37fe:	2a 97       	sbiw	r28, 0x0a	; 10
    3800:	0f b6       	in	r0, 0x3f	; 63
    3802:	f8 94       	cli
    3804:	de bf       	out	0x3e, r29	; 62
    3806:	0f be       	out	0x3f, r0	; 63
    3808:	cd bf       	out	0x3d, r28	; 61
    380a:	9a 83       	std	Y+2, r25	; 0x02
    380c:	89 83       	std	Y+1, r24	; 0x01
    380e:	7c 83       	std	Y+4, r23	; 0x04
    3810:	6b 83       	std	Y+3, r22	; 0x03
    3812:	5e 83       	std	Y+6, r21	; 0x06
    3814:	4d 83       	std	Y+5, r20	; 0x05
    3816:	38 87       	std	Y+8, r19	; 0x08
    3818:	2f 83       	std	Y+7, r18	; 0x07
    381a:	1a 87       	std	Y+10, r17	; 0x0a
    381c:	09 87       	std	Y+9, r16	; 0x09
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    381e:	89 81       	ldd	r24, Y+1	; 0x01
    3820:	9a 81       	ldd	r25, Y+2	; 0x02
    3822:	fc 01       	movw	r30, r24
    3824:	62 ad       	ldd	r22, Z+58	; 0x3a
    3826:	73 ad       	ldd	r23, Z+59	; 0x3b
    3828:	89 81       	ldd	r24, Y+1	; 0x01
    382a:	9a 81       	ldd	r25, Y+2	; 0x02
    382c:	fc 01       	movw	r30, r24
    382e:	80 ad       	ldd	r24, Z+56	; 0x38
    3830:	91 ad       	ldd	r25, Z+57	; 0x39
    3832:	29 85       	ldd	r18, Y+9	; 0x09
    3834:	3a 85       	ldd	r19, Y+10	; 0x0a
    3836:	4d 81       	ldd	r20, Y+5	; 0x05
    3838:	5e 81       	ldd	r21, Y+6	; 0x06
    383a:	0e 94 b0 1b 	call	0x3760	; 0x3760 <u8g2_is_intersection_decision_tree>
    383e:	88 23       	and	r24, r24
    3840:	11 f4       	brne	.+4      	; 0x3846 <u8g2_IsIntersection+0x54>
    return 0; 
    3842:	80 e0       	ldi	r24, 0x00	; 0
    3844:	10 c0       	rjmp	.+32     	; 0x3866 <u8g2_IsIntersection+0x74>
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    3846:	89 81       	ldd	r24, Y+1	; 0x01
    3848:	9a 81       	ldd	r25, Y+2	; 0x02
    384a:	fc 01       	movw	r30, r24
    384c:	66 a9       	ldd	r22, Z+54	; 0x36
    384e:	77 a9       	ldd	r23, Z+55	; 0x37
    3850:	89 81       	ldd	r24, Y+1	; 0x01
    3852:	9a 81       	ldd	r25, Y+2	; 0x02
    3854:	fc 01       	movw	r30, r24
    3856:	84 a9       	ldd	r24, Z+52	; 0x34
    3858:	95 a9       	ldd	r25, Z+53	; 0x35
    385a:	2f 81       	ldd	r18, Y+7	; 0x07
    385c:	38 85       	ldd	r19, Y+8	; 0x08
    385e:	4b 81       	ldd	r20, Y+3	; 0x03
    3860:	5c 81       	ldd	r21, Y+4	; 0x04
    3862:	0e 94 b0 1b 	call	0x3760	; 0x3760 <u8g2_is_intersection_decision_tree>
}
    3866:	2a 96       	adiw	r28, 0x0a	; 10
    3868:	0f b6       	in	r0, 0x3f	; 63
    386a:	f8 94       	cli
    386c:	de bf       	out	0x3e, r29	; 62
    386e:	0f be       	out	0x3f, r0	; 63
    3870:	cd bf       	out	0x3d, r28	; 61
    3872:	df 91       	pop	r29
    3874:	cf 91       	pop	r28
    3876:	1f 91       	pop	r17
    3878:	0f 91       	pop	r16
    387a:	08 95       	ret

0000387c <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    387c:	0f 93       	push	r16
    387e:	cf 93       	push	r28
    3880:	df 93       	push	r29
    3882:	cd b7       	in	r28, 0x3d	; 61
    3884:	de b7       	in	r29, 0x3e	; 62
    3886:	61 97       	sbiw	r28, 0x11	; 17
    3888:	0f b6       	in	r0, 0x3f	; 63
    388a:	f8 94       	cli
    388c:	de bf       	out	0x3e, r29	; 62
    388e:	0f be       	out	0x3f, r0	; 63
    3890:	cd bf       	out	0x3d, r28	; 61
    3892:	9a 87       	std	Y+10, r25	; 0x0a
    3894:	89 87       	std	Y+9, r24	; 0x09
    3896:	7c 87       	std	Y+12, r23	; 0x0c
    3898:	6b 87       	std	Y+11, r22	; 0x0b
    389a:	5e 87       	std	Y+14, r21	; 0x0e
    389c:	4d 87       	std	Y+13, r20	; 0x0d
    389e:	38 8b       	std	Y+16, r19	; 0x10
    38a0:	2f 87       	std	Y+15, r18	; 0x0f
    38a2:	09 8b       	std	Y+17, r16	; 0x11
  //assert(x < u8g2_GetU8x8(u8g2)->display_info->tile_width*8);
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
    38a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    38a6:	8b 83       	std	Y+3, r24	; 0x03
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    38a8:	8b 81       	ldd	r24, Y+3	; 0x03
    38aa:	87 70       	andi	r24, 0x07	; 7
    38ac:	8b 83       	std	Y+3, r24	; 0x03
  mask = 1;
    38ae:	81 e0       	ldi	r24, 0x01	; 1
    38b0:	8e 83       	std	Y+6, r24	; 0x06
  mask <<= bit_pos;
    38b2:	8e 81       	ldd	r24, Y+6	; 0x06
    38b4:	88 2f       	mov	r24, r24
    38b6:	90 e0       	ldi	r25, 0x00	; 0
    38b8:	2b 81       	ldd	r18, Y+3	; 0x03
    38ba:	22 2f       	mov	r18, r18
    38bc:	30 e0       	ldi	r19, 0x00	; 0
    38be:	02 c0       	rjmp	.+4      	; 0x38c4 <u8g2_ll_hvline_vertical_top_lsb+0x48>
    38c0:	88 0f       	add	r24, r24
    38c2:	99 1f       	adc	r25, r25
    38c4:	2a 95       	dec	r18
    38c6:	e2 f7       	brpl	.-8      	; 0x38c0 <u8g2_ll_hvline_vertical_top_lsb+0x44>
    38c8:	8e 83       	std	Y+6, r24	; 0x06

  or_mask = 0;
    38ca:	1c 82       	std	Y+4, r1	; 0x04
  xor_mask = 0;
    38cc:	1d 82       	std	Y+5, r1	; 0x05
  if ( u8g2->draw_color <= 1 )
    38ce:	89 85       	ldd	r24, Y+9	; 0x09
    38d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    38d2:	8c 58       	subi	r24, 0x8C	; 140
    38d4:	9f 4f       	sbci	r25, 0xFF	; 255
    38d6:	fc 01       	movw	r30, r24
    38d8:	80 81       	ld	r24, Z
    38da:	82 30       	cpi	r24, 0x02	; 2
    38dc:	10 f4       	brcc	.+4      	; 0x38e2 <u8g2_ll_hvline_vertical_top_lsb+0x66>
    or_mask  = mask;
    38de:	8e 81       	ldd	r24, Y+6	; 0x06
    38e0:	8c 83       	std	Y+4, r24	; 0x04
  if ( u8g2->draw_color != 1 )
    38e2:	89 85       	ldd	r24, Y+9	; 0x09
    38e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    38e6:	8c 58       	subi	r24, 0x8C	; 140
    38e8:	9f 4f       	sbci	r25, 0xFF	; 255
    38ea:	fc 01       	movw	r30, r24
    38ec:	80 81       	ld	r24, Z
    38ee:	81 30       	cpi	r24, 0x01	; 1
    38f0:	11 f0       	breq	.+4      	; 0x38f6 <u8g2_ll_hvline_vertical_top_lsb+0x7a>
    xor_mask = mask;
    38f2:	8e 81       	ldd	r24, Y+6	; 0x06
    38f4:	8d 83       	std	Y+5, r24	; 0x05


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
    38f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    38f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    38fa:	98 87       	std	Y+8, r25	; 0x08
    38fc:	8f 83       	std	Y+7, r24	; 0x07
  offset &= ~7;
    38fe:	8f 81       	ldd	r24, Y+7	; 0x07
    3900:	98 85       	ldd	r25, Y+8	; 0x08
    3902:	88 7f       	andi	r24, 0xF8	; 248
    3904:	98 87       	std	Y+8, r25	; 0x08
    3906:	8f 83       	std	Y+7, r24	; 0x07
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    3908:	89 85       	ldd	r24, Y+9	; 0x09
    390a:	9a 85       	ldd	r25, Y+10	; 0x0a
    390c:	fc 01       	movw	r30, r24
    390e:	80 81       	ld	r24, Z
    3910:	91 81       	ldd	r25, Z+1	; 0x01
    3912:	fc 01       	movw	r30, r24
    3914:	80 89       	ldd	r24, Z+16	; 0x10
    3916:	28 2f       	mov	r18, r24
    3918:	30 e0       	ldi	r19, 0x00	; 0
    391a:	4f 81       	ldd	r20, Y+7	; 0x07
    391c:	58 85       	ldd	r21, Y+8	; 0x08
    391e:	42 9f       	mul	r20, r18
    3920:	c0 01       	movw	r24, r0
    3922:	43 9f       	mul	r20, r19
    3924:	90 0d       	add	r25, r0
    3926:	52 9f       	mul	r21, r18
    3928:	90 0d       	add	r25, r0
    392a:	11 24       	eor	r1, r1
    392c:	98 87       	std	Y+8, r25	; 0x08
    392e:	8f 83       	std	Y+7, r24	; 0x07
  ptr = u8g2->tile_buf_ptr;
    3930:	89 85       	ldd	r24, Y+9	; 0x09
    3932:	9a 85       	ldd	r25, Y+10	; 0x0a
    3934:	fc 01       	movw	r30, r24
    3936:	82 a1       	ldd	r24, Z+34	; 0x22
    3938:	93 a1       	ldd	r25, Z+35	; 0x23
    393a:	9a 83       	std	Y+2, r25	; 0x02
    393c:	89 83       	std	Y+1, r24	; 0x01
  ptr += offset;
    393e:	29 81       	ldd	r18, Y+1	; 0x01
    3940:	3a 81       	ldd	r19, Y+2	; 0x02
    3942:	8f 81       	ldd	r24, Y+7	; 0x07
    3944:	98 85       	ldd	r25, Y+8	; 0x08
    3946:	82 0f       	add	r24, r18
    3948:	93 1f       	adc	r25, r19
    394a:	9a 83       	std	Y+2, r25	; 0x02
    394c:	89 83       	std	Y+1, r24	; 0x01
  ptr += x;
    394e:	29 81       	ldd	r18, Y+1	; 0x01
    3950:	3a 81       	ldd	r19, Y+2	; 0x02
    3952:	8b 85       	ldd	r24, Y+11	; 0x0b
    3954:	9c 85       	ldd	r25, Y+12	; 0x0c
    3956:	82 0f       	add	r24, r18
    3958:	93 1f       	adc	r25, r19
    395a:	9a 83       	std	Y+2, r25	; 0x02
    395c:	89 83       	std	Y+1, r24	; 0x01
  
  if ( dir == 0 )
    395e:	89 89       	ldd	r24, Y+17	; 0x11
    3960:	88 23       	and	r24, r24
    3962:	29 f5       	brne	.+74     	; 0x39ae <u8g2_ll_hvline_vertical_top_lsb+0x132>
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    3964:	89 81       	ldd	r24, Y+1	; 0x01
    3966:	9a 81       	ldd	r25, Y+2	; 0x02
    3968:	fc 01       	movw	r30, r24
    396a:	90 81       	ld	r25, Z
    396c:	8c 81       	ldd	r24, Y+4	; 0x04
    396e:	29 2f       	mov	r18, r25
    3970:	28 2b       	or	r18, r24
    3972:	89 81       	ldd	r24, Y+1	; 0x01
    3974:	9a 81       	ldd	r25, Y+2	; 0x02
    3976:	fc 01       	movw	r30, r24
    3978:	20 83       	st	Z, r18
	*ptr ^= xor_mask;
    397a:	89 81       	ldd	r24, Y+1	; 0x01
    397c:	9a 81       	ldd	r25, Y+2	; 0x02
    397e:	fc 01       	movw	r30, r24
    3980:	90 81       	ld	r25, Z
    3982:	8d 81       	ldd	r24, Y+5	; 0x05
    3984:	29 2f       	mov	r18, r25
    3986:	28 27       	eor	r18, r24
    3988:	89 81       	ldd	r24, Y+1	; 0x01
    398a:	9a 81       	ldd	r25, Y+2	; 0x02
    398c:	fc 01       	movw	r30, r24
    398e:	20 83       	st	Z, r18
	ptr++;
    3990:	89 81       	ldd	r24, Y+1	; 0x01
    3992:	9a 81       	ldd	r25, Y+2	; 0x02
    3994:	01 96       	adiw	r24, 0x01	; 1
    3996:	9a 83       	std	Y+2, r25	; 0x02
    3998:	89 83       	std	Y+1, r24	; 0x01
	len--;
    399a:	8f 85       	ldd	r24, Y+15	; 0x0f
    399c:	98 89       	ldd	r25, Y+16	; 0x10
    399e:	01 97       	sbiw	r24, 0x01	; 1
    39a0:	98 8b       	std	Y+16, r25	; 0x10
    39a2:	8f 87       	std	Y+15, r24	; 0x0f
      } while( len != 0 );
    39a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    39a6:	98 89       	ldd	r25, Y+16	; 0x10
    39a8:	89 2b       	or	r24, r25
    39aa:	e1 f6       	brne	.-72     	; 0x3964 <u8g2_ll_hvline_vertical_top_lsb+0xe8>
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
  }
}
    39ac:	4f c0       	rjmp	.+158    	; 0x3a4c <u8g2_ll_hvline_vertical_top_lsb+0x1d0>
    do
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
    39ae:	89 81       	ldd	r24, Y+1	; 0x01
    39b0:	9a 81       	ldd	r25, Y+2	; 0x02
    39b2:	fc 01       	movw	r30, r24
    39b4:	90 81       	ld	r25, Z
    39b6:	8c 81       	ldd	r24, Y+4	; 0x04
    39b8:	29 2f       	mov	r18, r25
    39ba:	28 2b       	or	r18, r24
    39bc:	89 81       	ldd	r24, Y+1	; 0x01
    39be:	9a 81       	ldd	r25, Y+2	; 0x02
    39c0:	fc 01       	movw	r30, r24
    39c2:	20 83       	st	Z, r18
      *ptr ^= xor_mask;
    39c4:	89 81       	ldd	r24, Y+1	; 0x01
    39c6:	9a 81       	ldd	r25, Y+2	; 0x02
    39c8:	fc 01       	movw	r30, r24
    39ca:	90 81       	ld	r25, Z
    39cc:	8d 81       	ldd	r24, Y+5	; 0x05
    39ce:	29 2f       	mov	r18, r25
    39d0:	28 27       	eor	r18, r24
    39d2:	89 81       	ldd	r24, Y+1	; 0x01
    39d4:	9a 81       	ldd	r25, Y+2	; 0x02
    39d6:	fc 01       	movw	r30, r24
    39d8:	20 83       	st	Z, r18
      
      bit_pos++;
    39da:	8b 81       	ldd	r24, Y+3	; 0x03
    39dc:	8f 5f       	subi	r24, 0xFF	; 255
    39de:	8b 83       	std	Y+3, r24	; 0x03
      bit_pos &= 7;
    39e0:	8b 81       	ldd	r24, Y+3	; 0x03
    39e2:	87 70       	andi	r24, 0x07	; 7
    39e4:	8b 83       	std	Y+3, r24	; 0x03

      len--;
    39e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    39e8:	98 89       	ldd	r25, Y+16	; 0x10
    39ea:	01 97       	sbiw	r24, 0x01	; 1
    39ec:	98 8b       	std	Y+16, r25	; 0x10
    39ee:	8f 87       	std	Y+15, r24	; 0x0f

      if ( bit_pos == 0 )
    39f0:	8b 81       	ldd	r24, Y+3	; 0x03
    39f2:	88 23       	and	r24, r24
    39f4:	01 f5       	brne	.+64     	; 0x3a36 <u8g2_ll_hvline_vertical_top_lsb+0x1ba>
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    39f6:	89 85       	ldd	r24, Y+9	; 0x09
    39f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    39fa:	fc 01       	movw	r30, r24
    39fc:	86 a1       	ldd	r24, Z+38	; 0x26
    39fe:	97 a1       	ldd	r25, Z+39	; 0x27
    3a00:	29 81       	ldd	r18, Y+1	; 0x01
    3a02:	3a 81       	ldd	r19, Y+2	; 0x02
    3a04:	82 0f       	add	r24, r18
    3a06:	93 1f       	adc	r25, r19
    3a08:	9a 83       	std	Y+2, r25	; 0x02
    3a0a:	89 83       	std	Y+1, r24	; 0x01
		
	if ( u8g2->draw_color <= 1 )
    3a0c:	89 85       	ldd	r24, Y+9	; 0x09
    3a0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a10:	8c 58       	subi	r24, 0x8C	; 140
    3a12:	9f 4f       	sbci	r25, 0xFF	; 255
    3a14:	fc 01       	movw	r30, r24
    3a16:	80 81       	ld	r24, Z
    3a18:	82 30       	cpi	r24, 0x02	; 2
    3a1a:	10 f4       	brcc	.+4      	; 0x3a20 <u8g2_ll_hvline_vertical_top_lsb+0x1a4>
	  or_mask  = 1;
    3a1c:	81 e0       	ldi	r24, 0x01	; 1
    3a1e:	8c 83       	std	Y+4, r24	; 0x04
	if ( u8g2->draw_color != 1 )
    3a20:	89 85       	ldd	r24, Y+9	; 0x09
    3a22:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a24:	8c 58       	subi	r24, 0x8C	; 140
    3a26:	9f 4f       	sbci	r25, 0xFF	; 255
    3a28:	fc 01       	movw	r30, r24
    3a2a:	80 81       	ld	r24, Z
    3a2c:	81 30       	cpi	r24, 0x01	; 1
    3a2e:	49 f0       	breq	.+18     	; 0x3a42 <u8g2_ll_hvline_vertical_top_lsb+0x1c6>
	  xor_mask = 1;
    3a30:	81 e0       	ldi	r24, 0x01	; 1
    3a32:	8d 83       	std	Y+5, r24	; 0x05
    3a34:	06 c0       	rjmp	.+12     	; 0x3a42 <u8g2_ll_hvline_vertical_top_lsb+0x1c6>
      }
      else
      {
	or_mask <<= 1;
    3a36:	8c 81       	ldd	r24, Y+4	; 0x04
    3a38:	88 0f       	add	r24, r24
    3a3a:	8c 83       	std	Y+4, r24	; 0x04
	xor_mask <<= 1;
    3a3c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a3e:	88 0f       	add	r24, r24
    3a40:	8d 83       	std	Y+5, r24	; 0x05
      }
    } while( len != 0 );
    3a42:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a44:	98 89       	ldd	r25, Y+16	; 0x10
    3a46:	89 2b       	or	r24, r25
    3a48:	09 f0       	breq	.+2      	; 0x3a4c <u8g2_ll_hvline_vertical_top_lsb+0x1d0>
    3a4a:	b1 cf       	rjmp	.-158    	; 0x39ae <u8g2_ll_hvline_vertical_top_lsb+0x132>
  }
}
    3a4c:	00 00       	nop
    3a4e:	61 96       	adiw	r28, 0x11	; 17
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	f8 94       	cli
    3a54:	de bf       	out	0x3e, r29	; 62
    3a56:	0f be       	out	0x3f, r0	; 63
    3a58:	cd bf       	out	0x3d, r28	; 61
    3a5a:	df 91       	pop	r29
    3a5c:	cf 91       	pop	r28
    3a5e:	0f 91       	pop	r16
    3a60:	08 95       	ret

00003a62 <u8g2_SetMaxClipWindow>:
  else
  {
    xx--;
  }
  u8g2_draw_hv_line_2dir(u8g2, xx, y, len, dir);
}
    3a62:	cf 93       	push	r28
    3a64:	df 93       	push	r29
    3a66:	00 d0       	rcall	.+0      	; 0x3a68 <u8g2_SetMaxClipWindow+0x6>
    3a68:	cd b7       	in	r28, 0x3d	; 61
    3a6a:	de b7       	in	r29, 0x3e	; 62
    3a6c:	9a 83       	std	Y+2, r25	; 0x02
    3a6e:	89 83       	std	Y+1, r24	; 0x01
    3a70:	89 81       	ldd	r24, Y+1	; 0x01
    3a72:	9a 81       	ldd	r25, Y+2	; 0x02
    3a74:	fc 01       	movw	r30, r24
    3a76:	15 ae       	std	Z+61, r1	; 0x3d
    3a78:	14 ae       	std	Z+60, r1	; 0x3c
    3a7a:	89 81       	ldd	r24, Y+1	; 0x01
    3a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a7e:	80 5c       	subi	r24, 0xC0	; 192
    3a80:	9f 4f       	sbci	r25, 0xFF	; 255
    3a82:	fc 01       	movw	r30, r24
    3a84:	11 82       	std	Z+1, r1	; 0x01
    3a86:	10 82       	st	Z, r1
    3a88:	89 81       	ldd	r24, Y+1	; 0x01
    3a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a8c:	2f ef       	ldi	r18, 0xFF	; 255
    3a8e:	3f ef       	ldi	r19, 0xFF	; 255
    3a90:	fc 01       	movw	r30, r24
    3a92:	37 af       	std	Z+63, r19	; 0x3f
    3a94:	26 af       	std	Z+62, r18	; 0x3e
    3a96:	89 81       	ldd	r24, Y+1	; 0x01
    3a98:	9a 81       	ldd	r25, Y+2	; 0x02
    3a9a:	8e 5b       	subi	r24, 0xBE	; 190
    3a9c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a9e:	2f ef       	ldi	r18, 0xFF	; 255
    3aa0:	3f ef       	ldi	r19, 0xFF	; 255
    3aa2:	fc 01       	movw	r30, r24
    3aa4:	31 83       	std	Z+1, r19	; 0x01
    3aa6:	20 83       	st	Z, r18
    3aa8:	89 81       	ldd	r24, Y+1	; 0x01
    3aaa:	9a 81       	ldd	r25, Y+2	; 0x02
    3aac:	fc 01       	movw	r30, r24
    3aae:	80 a1       	ldd	r24, Z+32	; 0x20
    3ab0:	91 a1       	ldd	r25, Z+33	; 0x21
    3ab2:	fc 01       	movw	r30, r24
    3ab4:	22 81       	ldd	r18, Z+2	; 0x02
    3ab6:	33 81       	ldd	r19, Z+3	; 0x03
    3ab8:	89 81       	ldd	r24, Y+1	; 0x01
    3aba:	9a 81       	ldd	r25, Y+2	; 0x02
    3abc:	f9 01       	movw	r30, r18
    3abe:	09 95       	icall
    3ac0:	00 00       	nop
    3ac2:	0f 90       	pop	r0
    3ac4:	0f 90       	pop	r0
    3ac6:	df 91       	pop	r29
    3ac8:	cf 91       	pop	r28
    3aca:	08 95       	ret

00003acc <u8g2_SetupBuffer>:
    3acc:	0f 93       	push	r16
    3ace:	1f 93       	push	r17
    3ad0:	cf 93       	push	r28
    3ad2:	df 93       	push	r29
    3ad4:	cd b7       	in	r28, 0x3d	; 61
    3ad6:	de b7       	in	r29, 0x3e	; 62
    3ad8:	29 97       	sbiw	r28, 0x09	; 9
    3ada:	0f b6       	in	r0, 0x3f	; 63
    3adc:	f8 94       	cli
    3ade:	de bf       	out	0x3e, r29	; 62
    3ae0:	0f be       	out	0x3f, r0	; 63
    3ae2:	cd bf       	out	0x3d, r28	; 61
    3ae4:	9a 83       	std	Y+2, r25	; 0x02
    3ae6:	89 83       	std	Y+1, r24	; 0x01
    3ae8:	7c 83       	std	Y+4, r23	; 0x04
    3aea:	6b 83       	std	Y+3, r22	; 0x03
    3aec:	4d 83       	std	Y+5, r20	; 0x05
    3aee:	3f 83       	std	Y+7, r19	; 0x07
    3af0:	2e 83       	std	Y+6, r18	; 0x06
    3af2:	19 87       	std	Y+9, r17	; 0x09
    3af4:	08 87       	std	Y+8, r16	; 0x08
    3af6:	89 81       	ldd	r24, Y+1	; 0x01
    3af8:	9a 81       	ldd	r25, Y+2	; 0x02
    3afa:	8c 5b       	subi	r24, 0xBC	; 188
    3afc:	9f 4f       	sbci	r25, 0xFF	; 255
    3afe:	fc 01       	movw	r30, r24
    3b00:	11 82       	std	Z+1, r1	; 0x01
    3b02:	10 82       	st	Z, r1
    3b04:	89 81       	ldd	r24, Y+1	; 0x01
    3b06:	9a 81       	ldd	r25, Y+2	; 0x02
    3b08:	2e 81       	ldd	r18, Y+6	; 0x06
    3b0a:	3f 81       	ldd	r19, Y+7	; 0x07
    3b0c:	fc 01       	movw	r30, r24
    3b0e:	37 8f       	std	Z+31, r19	; 0x1f
    3b10:	26 8f       	std	Z+30, r18	; 0x1e
    3b12:	89 81       	ldd	r24, Y+1	; 0x01
    3b14:	9a 81       	ldd	r25, Y+2	; 0x02
    3b16:	2b 81       	ldd	r18, Y+3	; 0x03
    3b18:	3c 81       	ldd	r19, Y+4	; 0x04
    3b1a:	fc 01       	movw	r30, r24
    3b1c:	33 a3       	std	Z+35, r19	; 0x23
    3b1e:	22 a3       	std	Z+34, r18	; 0x22
    3b20:	89 81       	ldd	r24, Y+1	; 0x01
    3b22:	9a 81       	ldd	r25, Y+2	; 0x02
    3b24:	2d 81       	ldd	r18, Y+5	; 0x05
    3b26:	fc 01       	movw	r30, r24
    3b28:	24 a3       	std	Z+36, r18	; 0x24
    3b2a:	89 81       	ldd	r24, Y+1	; 0x01
    3b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3b2e:	fc 01       	movw	r30, r24
    3b30:	15 a2       	std	Z+37, r1	; 0x25
    3b32:	89 81       	ldd	r24, Y+1	; 0x01
    3b34:	9a 81       	ldd	r25, Y+2	; 0x02
    3b36:	8d 5a       	subi	r24, 0xAD	; 173
    3b38:	9f 4f       	sbci	r25, 0xFF	; 255
    3b3a:	fc 01       	movw	r30, r24
    3b3c:	10 82       	st	Z, r1
    3b3e:	89 81       	ldd	r24, Y+1	; 0x01
    3b40:	9a 81       	ldd	r25, Y+2	; 0x02
    3b42:	8d 58       	subi	r24, 0x8D	; 141
    3b44:	9f 4f       	sbci	r25, 0xFF	; 255
    3b46:	fc 01       	movw	r30, r24
    3b48:	10 82       	st	Z, r1
    3b4a:	89 81       	ldd	r24, Y+1	; 0x01
    3b4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3b4e:	81 59       	subi	r24, 0x91	; 145
    3b50:	9f 4f       	sbci	r25, 0xFF	; 255
    3b52:	fc 01       	movw	r30, r24
    3b54:	10 82       	st	Z, r1
    3b56:	89 81       	ldd	r24, Y+1	; 0x01
    3b58:	9a 81       	ldd	r25, Y+2	; 0x02
    3b5a:	8c 58       	subi	r24, 0x8C	; 140
    3b5c:	9f 4f       	sbci	r25, 0xFF	; 255
    3b5e:	21 e0       	ldi	r18, 0x01	; 1
    3b60:	fc 01       	movw	r30, r24
    3b62:	20 83       	st	Z, r18
    3b64:	89 81       	ldd	r24, Y+1	; 0x01
    3b66:	9a 81       	ldd	r25, Y+2	; 0x02
    3b68:	8b 58       	subi	r24, 0x8B	; 139
    3b6a:	9f 4f       	sbci	r25, 0xFF	; 255
    3b6c:	21 e0       	ldi	r18, 0x01	; 1
    3b6e:	fc 01       	movw	r30, r24
    3b70:	20 83       	st	Z, r18
    3b72:	89 81       	ldd	r24, Y+1	; 0x01
    3b74:	9a 81       	ldd	r25, Y+2	; 0x02
    3b76:	28 85       	ldd	r18, Y+8	; 0x08
    3b78:	39 85       	ldd	r19, Y+9	; 0x09
    3b7a:	fc 01       	movw	r30, r24
    3b7c:	31 a3       	std	Z+33, r19	; 0x21
    3b7e:	20 a3       	std	Z+32, r18	; 0x20
    3b80:	89 81       	ldd	r24, Y+1	; 0x01
    3b82:	9a 81       	ldd	r25, Y+2	; 0x02
    3b84:	fc 01       	movw	r30, r24
    3b86:	80 a1       	ldd	r24, Z+32	; 0x20
    3b88:	91 a1       	ldd	r25, Z+33	; 0x21
    3b8a:	fc 01       	movw	r30, r24
    3b8c:	20 81       	ld	r18, Z
    3b8e:	31 81       	ldd	r19, Z+1	; 0x01
    3b90:	89 81       	ldd	r24, Y+1	; 0x01
    3b92:	9a 81       	ldd	r25, Y+2	; 0x02
    3b94:	f9 01       	movw	r30, r18
    3b96:	09 95       	icall
    3b98:	89 81       	ldd	r24, Y+1	; 0x01
    3b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    3b9c:	0e 94 31 1d 	call	0x3a62	; 0x3a62 <u8g2_SetMaxClipWindow>
    3ba0:	89 81       	ldd	r24, Y+1	; 0x01
    3ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ba4:	0e 94 c5 19 	call	0x338a	; 0x338a <u8g2_SetFontPosBaseline>
    3ba8:	89 81       	ldd	r24, Y+1	; 0x01
    3baa:	9a 81       	ldd	r25, Y+2	; 0x02
    3bac:	8a 5a       	subi	r24, 0xAA	; 170
    3bae:	9f 4f       	sbci	r25, 0xFF	; 255
    3bb0:	fc 01       	movw	r30, r24
    3bb2:	10 82       	st	Z, r1
    3bb4:	00 00       	nop
    3bb6:	29 96       	adiw	r28, 0x09	; 9
    3bb8:	0f b6       	in	r0, 0x3f	; 63
    3bba:	f8 94       	cli
    3bbc:	de bf       	out	0x3e, r29	; 62
    3bbe:	0f be       	out	0x3f, r0	; 63
    3bc0:	cd bf       	out	0x3d, r28	; 61
    3bc2:	df 91       	pop	r29
    3bc4:	cf 91       	pop	r28
    3bc6:	1f 91       	pop	r17
    3bc8:	0f 91       	pop	r16
    3bca:	08 95       	ret

00003bcc <u8g2_update_dimension_common>:
    3bcc:	cf 93       	push	r28
    3bce:	df 93       	push	r29
    3bd0:	00 d0       	rcall	.+0      	; 0x3bd2 <u8g2_update_dimension_common+0x6>
    3bd2:	00 d0       	rcall	.+0      	; 0x3bd4 <u8g2_update_dimension_common+0x8>
    3bd4:	00 d0       	rcall	.+0      	; 0x3bd6 <u8g2_update_dimension_common+0xa>
    3bd6:	cd b7       	in	r28, 0x3d	; 61
    3bd8:	de b7       	in	r29, 0x3e	; 62
    3bda:	9e 83       	std	Y+6, r25	; 0x06
    3bdc:	8d 83       	std	Y+5, r24	; 0x05
    3bde:	8d 81       	ldd	r24, Y+5	; 0x05
    3be0:	9e 81       	ldd	r25, Y+6	; 0x06
    3be2:	fc 01       	movw	r30, r24
    3be4:	80 81       	ld	r24, Z
    3be6:	91 81       	ldd	r25, Z+1	; 0x01
    3be8:	9c 83       	std	Y+4, r25	; 0x04
    3bea:	8b 83       	std	Y+3, r24	; 0x03
    3bec:	8d 81       	ldd	r24, Y+5	; 0x05
    3bee:	9e 81       	ldd	r25, Y+6	; 0x06
    3bf0:	fc 01       	movw	r30, r24
    3bf2:	84 a1       	ldd	r24, Z+36	; 0x24
    3bf4:	88 2f       	mov	r24, r24
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	9a 83       	std	Y+2, r25	; 0x02
    3bfa:	89 83       	std	Y+1, r24	; 0x01
    3bfc:	89 81       	ldd	r24, Y+1	; 0x01
    3bfe:	9a 81       	ldd	r25, Y+2	; 0x02
    3c00:	88 0f       	add	r24, r24
    3c02:	99 1f       	adc	r25, r25
    3c04:	88 0f       	add	r24, r24
    3c06:	99 1f       	adc	r25, r25
    3c08:	88 0f       	add	r24, r24
    3c0a:	99 1f       	adc	r25, r25
    3c0c:	9a 83       	std	Y+2, r25	; 0x02
    3c0e:	89 83       	std	Y+1, r24	; 0x01
    3c10:	8d 81       	ldd	r24, Y+5	; 0x05
    3c12:	9e 81       	ldd	r25, Y+6	; 0x06
    3c14:	29 81       	ldd	r18, Y+1	; 0x01
    3c16:	3a 81       	ldd	r19, Y+2	; 0x02
    3c18:	fc 01       	movw	r30, r24
    3c1a:	31 a7       	std	Z+41, r19	; 0x29
    3c1c:	20 a7       	std	Z+40, r18	; 0x28
    3c1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3c20:	9c 81       	ldd	r25, Y+4	; 0x04
    3c22:	fc 01       	movw	r30, r24
    3c24:	80 89       	ldd	r24, Z+16	; 0x10
    3c26:	88 2f       	mov	r24, r24
    3c28:	90 e0       	ldi	r25, 0x00	; 0
    3c2a:	9a 83       	std	Y+2, r25	; 0x02
    3c2c:	89 83       	std	Y+1, r24	; 0x01
    3c2e:	89 81       	ldd	r24, Y+1	; 0x01
    3c30:	9a 81       	ldd	r25, Y+2	; 0x02
    3c32:	88 0f       	add	r24, r24
    3c34:	99 1f       	adc	r25, r25
    3c36:	88 0f       	add	r24, r24
    3c38:	99 1f       	adc	r25, r25
    3c3a:	88 0f       	add	r24, r24
    3c3c:	99 1f       	adc	r25, r25
    3c3e:	9a 83       	std	Y+2, r25	; 0x02
    3c40:	89 83       	std	Y+1, r24	; 0x01
    3c42:	8d 81       	ldd	r24, Y+5	; 0x05
    3c44:	9e 81       	ldd	r25, Y+6	; 0x06
    3c46:	29 81       	ldd	r18, Y+1	; 0x01
    3c48:	3a 81       	ldd	r19, Y+2	; 0x02
    3c4a:	fc 01       	movw	r30, r24
    3c4c:	37 a3       	std	Z+39, r19	; 0x27
    3c4e:	26 a3       	std	Z+38, r18	; 0x26
    3c50:	8d 81       	ldd	r24, Y+5	; 0x05
    3c52:	9e 81       	ldd	r25, Y+6	; 0x06
    3c54:	fc 01       	movw	r30, r24
    3c56:	85 a1       	ldd	r24, Z+37	; 0x25
    3c58:	88 2f       	mov	r24, r24
    3c5a:	90 e0       	ldi	r25, 0x00	; 0
    3c5c:	9a 83       	std	Y+2, r25	; 0x02
    3c5e:	89 83       	std	Y+1, r24	; 0x01
    3c60:	89 81       	ldd	r24, Y+1	; 0x01
    3c62:	9a 81       	ldd	r25, Y+2	; 0x02
    3c64:	88 0f       	add	r24, r24
    3c66:	99 1f       	adc	r25, r25
    3c68:	88 0f       	add	r24, r24
    3c6a:	99 1f       	adc	r25, r25
    3c6c:	88 0f       	add	r24, r24
    3c6e:	99 1f       	adc	r25, r25
    3c70:	9a 83       	std	Y+2, r25	; 0x02
    3c72:	89 83       	std	Y+1, r24	; 0x01
    3c74:	8d 81       	ldd	r24, Y+5	; 0x05
    3c76:	9e 81       	ldd	r25, Y+6	; 0x06
    3c78:	29 81       	ldd	r18, Y+1	; 0x01
    3c7a:	3a 81       	ldd	r19, Y+2	; 0x02
    3c7c:	fc 01       	movw	r30, r24
    3c7e:	33 a7       	std	Z+43, r19	; 0x2b
    3c80:	22 a7       	std	Z+42, r18	; 0x2a
    3c82:	8d 81       	ldd	r24, Y+5	; 0x05
    3c84:	9e 81       	ldd	r25, Y+6	; 0x06
    3c86:	fc 01       	movw	r30, r24
    3c88:	84 a1       	ldd	r24, Z+36	; 0x24
    3c8a:	88 2f       	mov	r24, r24
    3c8c:	90 e0       	ldi	r25, 0x00	; 0
    3c8e:	9a 83       	std	Y+2, r25	; 0x02
    3c90:	89 83       	std	Y+1, r24	; 0x01
    3c92:	8d 81       	ldd	r24, Y+5	; 0x05
    3c94:	9e 81       	ldd	r25, Y+6	; 0x06
    3c96:	fc 01       	movw	r30, r24
    3c98:	85 a1       	ldd	r24, Z+37	; 0x25
    3c9a:	28 2f       	mov	r18, r24
    3c9c:	30 e0       	ldi	r19, 0x00	; 0
    3c9e:	89 81       	ldd	r24, Y+1	; 0x01
    3ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ca2:	28 0f       	add	r18, r24
    3ca4:	39 1f       	adc	r19, r25
    3ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ca8:	9c 81       	ldd	r25, Y+4	; 0x04
    3caa:	fc 01       	movw	r30, r24
    3cac:	81 89       	ldd	r24, Z+17	; 0x11
    3cae:	88 2f       	mov	r24, r24
    3cb0:	90 e0       	ldi	r25, 0x00	; 0
    3cb2:	82 17       	cp	r24, r18
    3cb4:	93 07       	cpc	r25, r19
    3cb6:	90 f4       	brcc	.+36     	; 0x3cdc <u8g2_update_dimension_common+0x110>
    3cb8:	8b 81       	ldd	r24, Y+3	; 0x03
    3cba:	9c 81       	ldd	r25, Y+4	; 0x04
    3cbc:	fc 01       	movw	r30, r24
    3cbe:	81 89       	ldd	r24, Z+17	; 0x11
    3cc0:	28 2f       	mov	r18, r24
    3cc2:	30 e0       	ldi	r19, 0x00	; 0
    3cc4:	8d 81       	ldd	r24, Y+5	; 0x05
    3cc6:	9e 81       	ldd	r25, Y+6	; 0x06
    3cc8:	fc 01       	movw	r30, r24
    3cca:	85 a1       	ldd	r24, Z+37	; 0x25
    3ccc:	88 2f       	mov	r24, r24
    3cce:	90 e0       	ldi	r25, 0x00	; 0
    3cd0:	a9 01       	movw	r20, r18
    3cd2:	48 1b       	sub	r20, r24
    3cd4:	59 0b       	sbc	r21, r25
    3cd6:	ca 01       	movw	r24, r20
    3cd8:	9a 83       	std	Y+2, r25	; 0x02
    3cda:	89 83       	std	Y+1, r24	; 0x01
    3cdc:	89 81       	ldd	r24, Y+1	; 0x01
    3cde:	9a 81       	ldd	r25, Y+2	; 0x02
    3ce0:	88 0f       	add	r24, r24
    3ce2:	99 1f       	adc	r25, r25
    3ce4:	88 0f       	add	r24, r24
    3ce6:	99 1f       	adc	r25, r25
    3ce8:	88 0f       	add	r24, r24
    3cea:	99 1f       	adc	r25, r25
    3cec:	9a 83       	std	Y+2, r25	; 0x02
    3cee:	89 83       	std	Y+1, r24	; 0x01
    3cf0:	8d 81       	ldd	r24, Y+5	; 0x05
    3cf2:	9e 81       	ldd	r25, Y+6	; 0x06
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	22 a5       	ldd	r18, Z+42	; 0x2a
    3cf8:	33 a5       	ldd	r19, Z+43	; 0x2b
    3cfa:	8d 81       	ldd	r24, Y+5	; 0x05
    3cfc:	9e 81       	ldd	r25, Y+6	; 0x06
    3cfe:	fc 01       	movw	r30, r24
    3d00:	35 a7       	std	Z+45, r19	; 0x2d
    3d02:	24 a7       	std	Z+44, r18	; 0x2c
    3d04:	8d 81       	ldd	r24, Y+5	; 0x05
    3d06:	9e 81       	ldd	r25, Y+6	; 0x06
    3d08:	fc 01       	movw	r30, r24
    3d0a:	24 a5       	ldd	r18, Z+44	; 0x2c
    3d0c:	35 a5       	ldd	r19, Z+45	; 0x2d
    3d0e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d10:	9e 81       	ldd	r25, Y+6	; 0x06
    3d12:	fc 01       	movw	r30, r24
    3d14:	37 a7       	std	Z+47, r19	; 0x2f
    3d16:	26 a7       	std	Z+46, r18	; 0x2e
    3d18:	8d 81       	ldd	r24, Y+5	; 0x05
    3d1a:	9e 81       	ldd	r25, Y+6	; 0x06
    3d1c:	fc 01       	movw	r30, r24
    3d1e:	26 a5       	ldd	r18, Z+46	; 0x2e
    3d20:	37 a5       	ldd	r19, Z+47	; 0x2f
    3d22:	89 81       	ldd	r24, Y+1	; 0x01
    3d24:	9a 81       	ldd	r25, Y+2	; 0x02
    3d26:	28 0f       	add	r18, r24
    3d28:	39 1f       	adc	r19, r25
    3d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d2c:	9e 81       	ldd	r25, Y+6	; 0x06
    3d2e:	fc 01       	movw	r30, r24
    3d30:	37 a7       	std	Z+47, r19	; 0x2f
    3d32:	26 a7       	std	Z+46, r18	; 0x2e
    3d34:	8b 81       	ldd	r24, Y+3	; 0x03
    3d36:	9c 81       	ldd	r25, Y+4	; 0x04
    3d38:	fc 01       	movw	r30, r24
    3d3a:	24 89       	ldd	r18, Z+20	; 0x14
    3d3c:	35 89       	ldd	r19, Z+21	; 0x15
    3d3e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d40:	9e 81       	ldd	r25, Y+6	; 0x06
    3d42:	fc 01       	movw	r30, r24
    3d44:	31 ab       	std	Z+49, r19	; 0x31
    3d46:	20 ab       	std	Z+48, r18	; 0x30
    3d48:	8b 81       	ldd	r24, Y+3	; 0x03
    3d4a:	9c 81       	ldd	r25, Y+4	; 0x04
    3d4c:	fc 01       	movw	r30, r24
    3d4e:	26 89       	ldd	r18, Z+22	; 0x16
    3d50:	37 89       	ldd	r19, Z+23	; 0x17
    3d52:	8d 81       	ldd	r24, Y+5	; 0x05
    3d54:	9e 81       	ldd	r25, Y+6	; 0x06
    3d56:	fc 01       	movw	r30, r24
    3d58:	33 ab       	std	Z+51, r19	; 0x33
    3d5a:	22 ab       	std	Z+50, r18	; 0x32
    3d5c:	00 00       	nop
    3d5e:	26 96       	adiw	r28, 0x06	; 6
    3d60:	0f b6       	in	r0, 0x3f	; 63
    3d62:	f8 94       	cli
    3d64:	de bf       	out	0x3e, r29	; 62
    3d66:	0f be       	out	0x3f, r0	; 63
    3d68:	cd bf       	out	0x3d, r28	; 61
    3d6a:	df 91       	pop	r29
    3d6c:	cf 91       	pop	r28
    3d6e:	08 95       	ret

00003d70 <u8g2_apply_clip_window>:
    3d70:	0f 93       	push	r16
    3d72:	1f 93       	push	r17
    3d74:	cf 93       	push	r28
    3d76:	df 93       	push	r29
    3d78:	00 d0       	rcall	.+0      	; 0x3d7a <u8g2_apply_clip_window+0xa>
    3d7a:	cd b7       	in	r28, 0x3d	; 61
    3d7c:	de b7       	in	r29, 0x3e	; 62
    3d7e:	9a 83       	std	Y+2, r25	; 0x02
    3d80:	89 83       	std	Y+1, r24	; 0x01
    3d82:	89 81       	ldd	r24, Y+1	; 0x01
    3d84:	9a 81       	ldd	r25, Y+2	; 0x02
    3d86:	8e 5b       	subi	r24, 0xBE	; 190
    3d88:	9f 4f       	sbci	r25, 0xFF	; 255
    3d8a:	dc 01       	movw	r26, r24
    3d8c:	ed 91       	ld	r30, X+
    3d8e:	fc 91       	ld	r31, X
    3d90:	89 81       	ldd	r24, Y+1	; 0x01
    3d92:	9a 81       	ldd	r25, Y+2	; 0x02
    3d94:	dc 01       	movw	r26, r24
    3d96:	de 96       	adiw	r26, 0x3e	; 62
    3d98:	2d 91       	ld	r18, X+
    3d9a:	3c 91       	ld	r19, X
    3d9c:	df 97       	sbiw	r26, 0x3f	; 63
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	80 5c       	subi	r24, 0xC0	; 192
    3da4:	9f 4f       	sbci	r25, 0xFF	; 255
    3da6:	dc 01       	movw	r26, r24
    3da8:	4d 91       	ld	r20, X+
    3daa:	5c 91       	ld	r21, X
    3dac:	89 81       	ldd	r24, Y+1	; 0x01
    3dae:	9a 81       	ldd	r25, Y+2	; 0x02
    3db0:	dc 01       	movw	r26, r24
    3db2:	dc 96       	adiw	r26, 0x3c	; 60
    3db4:	6d 91       	ld	r22, X+
    3db6:	7c 91       	ld	r23, X
    3db8:	dd 97       	sbiw	r26, 0x3d	; 61
    3dba:	89 81       	ldd	r24, Y+1	; 0x01
    3dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    3dbe:	8f 01       	movw	r16, r30
    3dc0:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <u8g2_IsIntersection>
    3dc4:	88 23       	and	r24, r24
    3dc6:	39 f4       	brne	.+14     	; 0x3dd6 <u8g2_apply_clip_window+0x66>
    3dc8:	89 81       	ldd	r24, Y+1	; 0x01
    3dca:	9a 81       	ldd	r25, Y+2	; 0x02
    3dcc:	82 59       	subi	r24, 0x92	; 146
    3dce:	9f 4f       	sbci	r25, 0xFF	; 255
    3dd0:	fc 01       	movw	r30, r24
    3dd2:	10 82       	st	Z, r1
    3dd4:	77 c0       	rjmp	.+238    	; 0x3ec4 <u8g2_apply_clip_window+0x154>
    3dd6:	89 81       	ldd	r24, Y+1	; 0x01
    3dd8:	9a 81       	ldd	r25, Y+2	; 0x02
    3dda:	82 59       	subi	r24, 0x92	; 146
    3ddc:	9f 4f       	sbci	r25, 0xFF	; 255
    3dde:	21 e0       	ldi	r18, 0x01	; 1
    3de0:	dc 01       	movw	r26, r24
    3de2:	2c 93       	st	X, r18
    3de4:	89 81       	ldd	r24, Y+1	; 0x01
    3de6:	9a 81       	ldd	r25, Y+2	; 0x02
    3de8:	fc 01       	movw	r30, r24
    3dea:	24 a9       	ldd	r18, Z+52	; 0x34
    3dec:	35 a9       	ldd	r19, Z+53	; 0x35
    3dee:	89 81       	ldd	r24, Y+1	; 0x01
    3df0:	9a 81       	ldd	r25, Y+2	; 0x02
    3df2:	dc 01       	movw	r26, r24
    3df4:	dc 96       	adiw	r26, 0x3c	; 60
    3df6:	8d 91       	ld	r24, X+
    3df8:	9c 91       	ld	r25, X
    3dfa:	dd 97       	sbiw	r26, 0x3d	; 61
    3dfc:	28 17       	cp	r18, r24
    3dfe:	39 07       	cpc	r19, r25
    3e00:	60 f4       	brcc	.+24     	; 0x3e1a <u8g2_apply_clip_window+0xaa>
    3e02:	89 81       	ldd	r24, Y+1	; 0x01
    3e04:	9a 81       	ldd	r25, Y+2	; 0x02
    3e06:	fc 01       	movw	r30, r24
    3e08:	24 ad       	ldd	r18, Z+60	; 0x3c
    3e0a:	35 ad       	ldd	r19, Z+61	; 0x3d
    3e0c:	89 81       	ldd	r24, Y+1	; 0x01
    3e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    3e10:	dc 01       	movw	r26, r24
    3e12:	d5 96       	adiw	r26, 0x35	; 53
    3e14:	3c 93       	st	X, r19
    3e16:	2e 93       	st	-X, r18
    3e18:	d4 97       	sbiw	r26, 0x34	; 52
    3e1a:	89 81       	ldd	r24, Y+1	; 0x01
    3e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e1e:	fc 01       	movw	r30, r24
    3e20:	26 a9       	ldd	r18, Z+54	; 0x36
    3e22:	37 a9       	ldd	r19, Z+55	; 0x37
    3e24:	89 81       	ldd	r24, Y+1	; 0x01
    3e26:	9a 81       	ldd	r25, Y+2	; 0x02
    3e28:	dc 01       	movw	r26, r24
    3e2a:	de 96       	adiw	r26, 0x3e	; 62
    3e2c:	8d 91       	ld	r24, X+
    3e2e:	9c 91       	ld	r25, X
    3e30:	df 97       	sbiw	r26, 0x3f	; 63
    3e32:	82 17       	cp	r24, r18
    3e34:	93 07       	cpc	r25, r19
    3e36:	60 f4       	brcc	.+24     	; 0x3e50 <u8g2_apply_clip_window+0xe0>
    3e38:	89 81       	ldd	r24, Y+1	; 0x01
    3e3a:	9a 81       	ldd	r25, Y+2	; 0x02
    3e3c:	fc 01       	movw	r30, r24
    3e3e:	26 ad       	ldd	r18, Z+62	; 0x3e
    3e40:	37 ad       	ldd	r19, Z+63	; 0x3f
    3e42:	89 81       	ldd	r24, Y+1	; 0x01
    3e44:	9a 81       	ldd	r25, Y+2	; 0x02
    3e46:	dc 01       	movw	r26, r24
    3e48:	d7 96       	adiw	r26, 0x37	; 55
    3e4a:	3c 93       	st	X, r19
    3e4c:	2e 93       	st	-X, r18
    3e4e:	d6 97       	sbiw	r26, 0x36	; 54
    3e50:	89 81       	ldd	r24, Y+1	; 0x01
    3e52:	9a 81       	ldd	r25, Y+2	; 0x02
    3e54:	fc 01       	movw	r30, r24
    3e56:	20 ad       	ldd	r18, Z+56	; 0x38
    3e58:	31 ad       	ldd	r19, Z+57	; 0x39
    3e5a:	89 81       	ldd	r24, Y+1	; 0x01
    3e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e5e:	80 5c       	subi	r24, 0xC0	; 192
    3e60:	9f 4f       	sbci	r25, 0xFF	; 255
    3e62:	dc 01       	movw	r26, r24
    3e64:	8d 91       	ld	r24, X+
    3e66:	9c 91       	ld	r25, X
    3e68:	28 17       	cp	r18, r24
    3e6a:	39 07       	cpc	r19, r25
    3e6c:	70 f4       	brcc	.+28     	; 0x3e8a <u8g2_apply_clip_window+0x11a>
    3e6e:	89 81       	ldd	r24, Y+1	; 0x01
    3e70:	9a 81       	ldd	r25, Y+2	; 0x02
    3e72:	80 5c       	subi	r24, 0xC0	; 192
    3e74:	9f 4f       	sbci	r25, 0xFF	; 255
    3e76:	fc 01       	movw	r30, r24
    3e78:	20 81       	ld	r18, Z
    3e7a:	31 81       	ldd	r19, Z+1	; 0x01
    3e7c:	89 81       	ldd	r24, Y+1	; 0x01
    3e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    3e80:	dc 01       	movw	r26, r24
    3e82:	d9 96       	adiw	r26, 0x39	; 57
    3e84:	3c 93       	st	X, r19
    3e86:	2e 93       	st	-X, r18
    3e88:	d8 97       	sbiw	r26, 0x38	; 56
    3e8a:	89 81       	ldd	r24, Y+1	; 0x01
    3e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e8e:	fc 01       	movw	r30, r24
    3e90:	22 ad       	ldd	r18, Z+58	; 0x3a
    3e92:	33 ad       	ldd	r19, Z+59	; 0x3b
    3e94:	89 81       	ldd	r24, Y+1	; 0x01
    3e96:	9a 81       	ldd	r25, Y+2	; 0x02
    3e98:	8e 5b       	subi	r24, 0xBE	; 190
    3e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e9c:	dc 01       	movw	r26, r24
    3e9e:	8d 91       	ld	r24, X+
    3ea0:	9c 91       	ld	r25, X
    3ea2:	82 17       	cp	r24, r18
    3ea4:	93 07       	cpc	r25, r19
    3ea6:	70 f4       	brcc	.+28     	; 0x3ec4 <u8g2_apply_clip_window+0x154>
    3ea8:	89 81       	ldd	r24, Y+1	; 0x01
    3eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    3eac:	8e 5b       	subi	r24, 0xBE	; 190
    3eae:	9f 4f       	sbci	r25, 0xFF	; 255
    3eb0:	fc 01       	movw	r30, r24
    3eb2:	20 81       	ld	r18, Z
    3eb4:	31 81       	ldd	r19, Z+1	; 0x01
    3eb6:	89 81       	ldd	r24, Y+1	; 0x01
    3eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    3eba:	dc 01       	movw	r26, r24
    3ebc:	db 96       	adiw	r26, 0x3b	; 59
    3ebe:	3c 93       	st	X, r19
    3ec0:	2e 93       	st	-X, r18
    3ec2:	da 97       	sbiw	r26, 0x3a	; 58
    3ec4:	00 00       	nop
    3ec6:	0f 90       	pop	r0
    3ec8:	0f 90       	pop	r0
    3eca:	df 91       	pop	r29
    3ecc:	cf 91       	pop	r28
    3ece:	1f 91       	pop	r17
    3ed0:	0f 91       	pop	r16
    3ed2:	08 95       	ret

00003ed4 <u8g2_update_dimension_r0>:
    3ed4:	cf 93       	push	r28
    3ed6:	df 93       	push	r29
    3ed8:	00 d0       	rcall	.+0      	; 0x3eda <u8g2_update_dimension_r0+0x6>
    3eda:	cd b7       	in	r28, 0x3d	; 61
    3edc:	de b7       	in	r29, 0x3e	; 62
    3ede:	9a 83       	std	Y+2, r25	; 0x02
    3ee0:	89 83       	std	Y+1, r24	; 0x01
    3ee2:	89 81       	ldd	r24, Y+1	; 0x01
    3ee4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ee6:	0e 94 e6 1d 	call	0x3bcc	; 0x3bcc <u8g2_update_dimension_common>
    3eea:	00 00       	nop
    3eec:	0f 90       	pop	r0
    3eee:	0f 90       	pop	r0
    3ef0:	df 91       	pop	r29
    3ef2:	cf 91       	pop	r28
    3ef4:	08 95       	ret

00003ef6 <u8g2_update_page_win_r0>:
    3ef6:	cf 93       	push	r28
    3ef8:	df 93       	push	r29
    3efa:	00 d0       	rcall	.+0      	; 0x3efc <u8g2_update_page_win_r0+0x6>
    3efc:	cd b7       	in	r28, 0x3d	; 61
    3efe:	de b7       	in	r29, 0x3e	; 62
    3f00:	9a 83       	std	Y+2, r25	; 0x02
    3f02:	89 83       	std	Y+1, r24	; 0x01
    3f04:	89 81       	ldd	r24, Y+1	; 0x01
    3f06:	9a 81       	ldd	r25, Y+2	; 0x02
    3f08:	fc 01       	movw	r30, r24
    3f0a:	15 aa       	std	Z+53, r1	; 0x35
    3f0c:	14 aa       	std	Z+52, r1	; 0x34
    3f0e:	89 81       	ldd	r24, Y+1	; 0x01
    3f10:	9a 81       	ldd	r25, Y+2	; 0x02
    3f12:	fc 01       	movw	r30, r24
    3f14:	20 a9       	ldd	r18, Z+48	; 0x30
    3f16:	31 a9       	ldd	r19, Z+49	; 0x31
    3f18:	89 81       	ldd	r24, Y+1	; 0x01
    3f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f1c:	fc 01       	movw	r30, r24
    3f1e:	37 ab       	std	Z+55, r19	; 0x37
    3f20:	26 ab       	std	Z+54, r18	; 0x36
    3f22:	89 81       	ldd	r24, Y+1	; 0x01
    3f24:	9a 81       	ldd	r25, Y+2	; 0x02
    3f26:	fc 01       	movw	r30, r24
    3f28:	24 a5       	ldd	r18, Z+44	; 0x2c
    3f2a:	35 a5       	ldd	r19, Z+45	; 0x2d
    3f2c:	89 81       	ldd	r24, Y+1	; 0x01
    3f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f30:	fc 01       	movw	r30, r24
    3f32:	31 af       	std	Z+57, r19	; 0x39
    3f34:	20 af       	std	Z+56, r18	; 0x38
    3f36:	89 81       	ldd	r24, Y+1	; 0x01
    3f38:	9a 81       	ldd	r25, Y+2	; 0x02
    3f3a:	fc 01       	movw	r30, r24
    3f3c:	26 a5       	ldd	r18, Z+46	; 0x2e
    3f3e:	37 a5       	ldd	r19, Z+47	; 0x2f
    3f40:	89 81       	ldd	r24, Y+1	; 0x01
    3f42:	9a 81       	ldd	r25, Y+2	; 0x02
    3f44:	fc 01       	movw	r30, r24
    3f46:	33 af       	std	Z+59, r19	; 0x3b
    3f48:	22 af       	std	Z+58, r18	; 0x3a
    3f4a:	89 81       	ldd	r24, Y+1	; 0x01
    3f4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3f4e:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <u8g2_apply_clip_window>
    3f52:	00 00       	nop
    3f54:	0f 90       	pop	r0
    3f56:	0f 90       	pop	r0
    3f58:	df 91       	pop	r29
    3f5a:	cf 91       	pop	r28
    3f5c:	08 95       	ret

00003f5e <u8g2_draw_mirror_vertical_r0>:

void u8g2_draw_mirror_vertical_r0(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    3f5e:	0f 93       	push	r16
    3f60:	cf 93       	push	r28
    3f62:	df 93       	push	r29
    3f64:	cd b7       	in	r28, 0x3d	; 61
    3f66:	de b7       	in	r29, 0x3e	; 62
    3f68:	2b 97       	sbiw	r28, 0x0b	; 11
    3f6a:	0f b6       	in	r0, 0x3f	; 63
    3f6c:	f8 94       	cli
    3f6e:	de bf       	out	0x3e, r29	; 62
    3f70:	0f be       	out	0x3f, r0	; 63
    3f72:	cd bf       	out	0x3d, r28	; 61
    3f74:	9c 83       	std	Y+4, r25	; 0x04
    3f76:	8b 83       	std	Y+3, r24	; 0x03
    3f78:	7e 83       	std	Y+6, r23	; 0x06
    3f7a:	6d 83       	std	Y+5, r22	; 0x05
    3f7c:	58 87       	std	Y+8, r21	; 0x08
    3f7e:	4f 83       	std	Y+7, r20	; 0x07
    3f80:	3a 87       	std	Y+10, r19	; 0x0a
    3f82:	29 87       	std	Y+9, r18	; 0x09
    3f84:	0b 87       	std	Y+11, r16	; 0x0b
  u8g2_uint_t yy;
  yy = u8g2->height;
    3f86:	8b 81       	ldd	r24, Y+3	; 0x03
    3f88:	9c 81       	ldd	r25, Y+4	; 0x04
    3f8a:	fc 01       	movw	r30, r24
    3f8c:	82 a9       	ldd	r24, Z+50	; 0x32
    3f8e:	93 a9       	ldd	r25, Z+51	; 0x33
    3f90:	9a 83       	std	Y+2, r25	; 0x02
    3f92:	89 83       	std	Y+1, r24	; 0x01
  yy -= y;
    3f94:	29 81       	ldd	r18, Y+1	; 0x01
    3f96:	3a 81       	ldd	r19, Y+2	; 0x02
    3f98:	8f 81       	ldd	r24, Y+7	; 0x07
    3f9a:	98 85       	ldd	r25, Y+8	; 0x08
    3f9c:	a9 01       	movw	r20, r18
    3f9e:	48 1b       	sub	r20, r24
    3fa0:	59 0b       	sbc	r21, r25
    3fa2:	ca 01       	movw	r24, r20
    3fa4:	9a 83       	std	Y+2, r25	; 0x02
    3fa6:	89 83       	std	Y+1, r24	; 0x01
  if ( (dir & 1) == 1 )
    3fa8:	8b 85       	ldd	r24, Y+11	; 0x0b
    3faa:	88 2f       	mov	r24, r24
    3fac:	90 e0       	ldi	r25, 0x00	; 0
    3fae:	81 70       	andi	r24, 0x01	; 1
    3fb0:	99 27       	eor	r25, r25
    3fb2:	89 2b       	or	r24, r25
    3fb4:	59 f0       	breq	.+22     	; 0x3fcc <u8g2_draw_mirror_vertical_r0+0x6e>
  {
    yy -= len;
    3fb6:	29 81       	ldd	r18, Y+1	; 0x01
    3fb8:	3a 81       	ldd	r19, Y+2	; 0x02
    3fba:	89 85       	ldd	r24, Y+9	; 0x09
    3fbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fbe:	f9 01       	movw	r30, r18
    3fc0:	e8 1b       	sub	r30, r24
    3fc2:	f9 0b       	sbc	r31, r25
    3fc4:	cf 01       	movw	r24, r30
    3fc6:	9a 83       	std	Y+2, r25	; 0x02
    3fc8:	89 83       	std	Y+1, r24	; 0x01
    3fca:	05 c0       	rjmp	.+10     	; 0x3fd6 <u8g2_draw_mirror_vertical_r0+0x78>
  }
  else
  {
    yy--;
    3fcc:	89 81       	ldd	r24, Y+1	; 0x01
    3fce:	9a 81       	ldd	r25, Y+2	; 0x02
    3fd0:	01 97       	sbiw	r24, 0x01	; 1
    3fd2:	9a 83       	std	Y+2, r25	; 0x02
    3fd4:	89 83       	std	Y+1, r24	; 0x01
  }
  u8g2_draw_hv_line_2dir(u8g2, x, yy, len, dir);
    3fd6:	29 85       	ldd	r18, Y+9	; 0x09
    3fd8:	3a 85       	ldd	r19, Y+10	; 0x0a
    3fda:	49 81       	ldd	r20, Y+1	; 0x01
    3fdc:	5a 81       	ldd	r21, Y+2	; 0x02
    3fde:	6d 81       	ldd	r22, Y+5	; 0x05
    3fe0:	7e 81       	ldd	r23, Y+6	; 0x06
    3fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    3fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    3fe6:	0b 85       	ldd	r16, Y+11	; 0x0b
    3fe8:	0e 94 9d 1a 	call	0x353a	; 0x353a <u8g2_draw_hv_line_2dir>
}
    3fec:	00 00       	nop
    3fee:	2b 96       	adiw	r28, 0x0b	; 11
    3ff0:	0f b6       	in	r0, 0x3f	; 63
    3ff2:	f8 94       	cli
    3ff4:	de bf       	out	0x3e, r29	; 62
    3ff6:	0f be       	out	0x3f, r0	; 63
    3ff8:	cd bf       	out	0x3d, r28	; 61
    3ffa:	df 91       	pop	r29
    3ffc:	cf 91       	pop	r28
    3ffe:	0f 91       	pop	r16
    4000:	08 95       	ret

00004002 <u8x8_utf8_init>:

*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
    4002:	cf 93       	push	r28
    4004:	df 93       	push	r29
    4006:	00 d0       	rcall	.+0      	; 0x4008 <u8x8_utf8_init+0x6>
    4008:	cd b7       	in	r28, 0x3d	; 61
    400a:	de b7       	in	r29, 0x3e	; 62
    400c:	9a 83       	std	Y+2, r25	; 0x02
    400e:	89 83       	std	Y+1, r24	; 0x01
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    4010:	89 81       	ldd	r24, Y+1	; 0x01
    4012:	9a 81       	ldd	r25, Y+2	; 0x02
    4014:	fc 01       	movw	r30, r24
    4016:	10 8e       	std	Z+24, r1	; 0x18
}
    4018:	00 00       	nop
    401a:	0f 90       	pop	r0
    401c:	0f 90       	pop	r0
    401e:	df 91       	pop	r29
    4020:	cf 91       	pop	r28
    4022:	08 95       	ret

00004024 <u8x8_ascii_next>:

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
    4024:	cf 93       	push	r28
    4026:	df 93       	push	r29
    4028:	00 d0       	rcall	.+0      	; 0x402a <u8x8_ascii_next+0x6>
    402a:	1f 92       	push	r1
    402c:	cd b7       	in	r28, 0x3d	; 61
    402e:	de b7       	in	r29, 0x3e	; 62
    4030:	9a 83       	std	Y+2, r25	; 0x02
    4032:	89 83       	std	Y+1, r24	; 0x01
    4034:	6b 83       	std	Y+3, r22	; 0x03
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    4036:	8b 81       	ldd	r24, Y+3	; 0x03
    4038:	88 23       	and	r24, r24
    403a:	19 f0       	breq	.+6      	; 0x4042 <u8x8_ascii_next+0x1e>
    403c:	8b 81       	ldd	r24, Y+3	; 0x03
    403e:	8a 30       	cpi	r24, 0x0A	; 10
    4040:	19 f4       	brne	.+6      	; 0x4048 <u8x8_ascii_next+0x24>
    return 0x0ffff;	/* end of string detected*/
    4042:	8f ef       	ldi	r24, 0xFF	; 255
    4044:	9f ef       	ldi	r25, 0xFF	; 255
    4046:	03 c0       	rjmp	.+6      	; 0x404e <u8x8_ascii_next+0x2a>
  return b;
    4048:	8b 81       	ldd	r24, Y+3	; 0x03
    404a:	88 2f       	mov	r24, r24
    404c:	90 e0       	ldi	r25, 0x00	; 0
}
    404e:	0f 90       	pop	r0
    4050:	0f 90       	pop	r0
    4052:	0f 90       	pop	r0
    4054:	df 91       	pop	r29
    4056:	cf 91       	pop	r28
    4058:	08 95       	ret

0000405a <u8x8_byte_SetDC>:
*/

#include "u8x8.h"

uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
    405a:	cf 93       	push	r28
    405c:	df 93       	push	r29
    405e:	00 d0       	rcall	.+0      	; 0x4060 <u8x8_byte_SetDC+0x6>
    4060:	1f 92       	push	r1
    4062:	cd b7       	in	r28, 0x3d	; 61
    4064:	de b7       	in	r29, 0x3e	; 62
    4066:	9a 83       	std	Y+2, r25	; 0x02
    4068:	89 83       	std	Y+1, r24	; 0x01
    406a:	6b 83       	std	Y+3, r22	; 0x03
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
    406c:	89 81       	ldd	r24, Y+1	; 0x01
    406e:	9a 81       	ldd	r25, Y+2	; 0x02
    4070:	dc 01       	movw	r26, r24
    4072:	18 96       	adiw	r26, 0x08	; 8
    4074:	ed 91       	ld	r30, X+
    4076:	fc 91       	ld	r31, X
    4078:	19 97       	sbiw	r26, 0x09	; 9
    407a:	89 81       	ldd	r24, Y+1	; 0x01
    407c:	9a 81       	ldd	r25, Y+2	; 0x02
    407e:	20 e0       	ldi	r18, 0x00	; 0
    4080:	30 e0       	ldi	r19, 0x00	; 0
    4082:	4b 81       	ldd	r20, Y+3	; 0x03
    4084:	60 e2       	ldi	r22, 0x20	; 32
    4086:	09 95       	icall
}
    4088:	0f 90       	pop	r0
    408a:	0f 90       	pop	r0
    408c:	0f 90       	pop	r0
    408e:	df 91       	pop	r29
    4090:	cf 91       	pop	r28
    4092:	08 95       	ret

00004094 <u8x8_byte_SendBytes>:

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    4094:	cf 93       	push	r28
    4096:	df 93       	push	r29
    4098:	00 d0       	rcall	.+0      	; 0x409a <u8x8_byte_SendBytes+0x6>
    409a:	00 d0       	rcall	.+0      	; 0x409c <u8x8_byte_SendBytes+0x8>
    409c:	1f 92       	push	r1
    409e:	cd b7       	in	r28, 0x3d	; 61
    40a0:	de b7       	in	r29, 0x3e	; 62
    40a2:	9a 83       	std	Y+2, r25	; 0x02
    40a4:	89 83       	std	Y+1, r24	; 0x01
    40a6:	6b 83       	std	Y+3, r22	; 0x03
    40a8:	5d 83       	std	Y+5, r21	; 0x05
    40aa:	4c 83       	std	Y+4, r20	; 0x04
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    40ac:	89 81       	ldd	r24, Y+1	; 0x01
    40ae:	9a 81       	ldd	r25, Y+2	; 0x02
    40b0:	dc 01       	movw	r26, r24
    40b2:	18 96       	adiw	r26, 0x08	; 8
    40b4:	ed 91       	ld	r30, X+
    40b6:	fc 91       	ld	r31, X
    40b8:	19 97       	sbiw	r26, 0x09	; 9
    40ba:	2c 81       	ldd	r18, Y+4	; 0x04
    40bc:	3d 81       	ldd	r19, Y+5	; 0x05
    40be:	89 81       	ldd	r24, Y+1	; 0x01
    40c0:	9a 81       	ldd	r25, Y+2	; 0x02
    40c2:	4b 81       	ldd	r20, Y+3	; 0x03
    40c4:	67 e1       	ldi	r22, 0x17	; 23
    40c6:	09 95       	icall
}
    40c8:	0f 90       	pop	r0
    40ca:	0f 90       	pop	r0
    40cc:	0f 90       	pop	r0
    40ce:	0f 90       	pop	r0
    40d0:	0f 90       	pop	r0
    40d2:	df 91       	pop	r29
    40d4:	cf 91       	pop	r28
    40d6:	08 95       	ret

000040d8 <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    40d8:	cf 93       	push	r28
    40da:	df 93       	push	r29
    40dc:	00 d0       	rcall	.+0      	; 0x40de <u8x8_byte_SendByte+0x6>
    40de:	1f 92       	push	r1
    40e0:	cd b7       	in	r28, 0x3d	; 61
    40e2:	de b7       	in	r29, 0x3e	; 62
    40e4:	9a 83       	std	Y+2, r25	; 0x02
    40e6:	89 83       	std	Y+1, r24	; 0x01
    40e8:	6b 83       	std	Y+3, r22	; 0x03
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    40ea:	9e 01       	movw	r18, r28
    40ec:	2d 5f       	subi	r18, 0xFD	; 253
    40ee:	3f 4f       	sbci	r19, 0xFF	; 255
    40f0:	89 81       	ldd	r24, Y+1	; 0x01
    40f2:	9a 81       	ldd	r25, Y+2	; 0x02
    40f4:	a9 01       	movw	r20, r18
    40f6:	61 e0       	ldi	r22, 0x01	; 1
    40f8:	0e 94 4a 20 	call	0x4094	; 0x4094 <u8x8_byte_SendBytes>
}
    40fc:	0f 90       	pop	r0
    40fe:	0f 90       	pop	r0
    4100:	0f 90       	pop	r0
    4102:	df 91       	pop	r29
    4104:	cf 91       	pop	r28
    4106:	08 95       	ret

00004108 <u8x8_cad_SendCmd>:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
}
    4108:	cf 93       	push	r28
    410a:	df 93       	push	r29
    410c:	00 d0       	rcall	.+0      	; 0x410e <u8x8_cad_SendCmd+0x6>
    410e:	1f 92       	push	r1
    4110:	cd b7       	in	r28, 0x3d	; 61
    4112:	de b7       	in	r29, 0x3e	; 62
    4114:	9a 83       	std	Y+2, r25	; 0x02
    4116:	89 83       	std	Y+1, r24	; 0x01
    4118:	6b 83       	std	Y+3, r22	; 0x03
    411a:	89 81       	ldd	r24, Y+1	; 0x01
    411c:	9a 81       	ldd	r25, Y+2	; 0x02
    411e:	dc 01       	movw	r26, r24
    4120:	16 96       	adiw	r26, 0x06	; 6
    4122:	ed 91       	ld	r30, X+
    4124:	fc 91       	ld	r31, X
    4126:	17 97       	sbiw	r26, 0x07	; 7
    4128:	89 81       	ldd	r24, Y+1	; 0x01
    412a:	9a 81       	ldd	r25, Y+2	; 0x02
    412c:	20 e0       	ldi	r18, 0x00	; 0
    412e:	30 e0       	ldi	r19, 0x00	; 0
    4130:	4b 81       	ldd	r20, Y+3	; 0x03
    4132:	65 e1       	ldi	r22, 0x15	; 21
    4134:	09 95       	icall
    4136:	0f 90       	pop	r0
    4138:	0f 90       	pop	r0
    413a:	0f 90       	pop	r0
    413c:	df 91       	pop	r29
    413e:	cf 91       	pop	r28
    4140:	08 95       	ret

00004142 <u8x8_cad_SendArg>:
    4142:	cf 93       	push	r28
    4144:	df 93       	push	r29
    4146:	00 d0       	rcall	.+0      	; 0x4148 <u8x8_cad_SendArg+0x6>
    4148:	1f 92       	push	r1
    414a:	cd b7       	in	r28, 0x3d	; 61
    414c:	de b7       	in	r29, 0x3e	; 62
    414e:	9a 83       	std	Y+2, r25	; 0x02
    4150:	89 83       	std	Y+1, r24	; 0x01
    4152:	6b 83       	std	Y+3, r22	; 0x03
    4154:	89 81       	ldd	r24, Y+1	; 0x01
    4156:	9a 81       	ldd	r25, Y+2	; 0x02
    4158:	dc 01       	movw	r26, r24
    415a:	16 96       	adiw	r26, 0x06	; 6
    415c:	ed 91       	ld	r30, X+
    415e:	fc 91       	ld	r31, X
    4160:	17 97       	sbiw	r26, 0x07	; 7
    4162:	89 81       	ldd	r24, Y+1	; 0x01
    4164:	9a 81       	ldd	r25, Y+2	; 0x02
    4166:	20 e0       	ldi	r18, 0x00	; 0
    4168:	30 e0       	ldi	r19, 0x00	; 0
    416a:	4b 81       	ldd	r20, Y+3	; 0x03
    416c:	66 e1       	ldi	r22, 0x16	; 22
    416e:	09 95       	icall
    4170:	0f 90       	pop	r0
    4172:	0f 90       	pop	r0
    4174:	0f 90       	pop	r0
    4176:	df 91       	pop	r29
    4178:	cf 91       	pop	r28
    417a:	08 95       	ret

0000417c <u8x8_cad_SendData>:
    417c:	cf 93       	push	r28
    417e:	df 93       	push	r29
    4180:	00 d0       	rcall	.+0      	; 0x4182 <u8x8_cad_SendData+0x6>
    4182:	00 d0       	rcall	.+0      	; 0x4184 <u8x8_cad_SendData+0x8>
    4184:	1f 92       	push	r1
    4186:	cd b7       	in	r28, 0x3d	; 61
    4188:	de b7       	in	r29, 0x3e	; 62
    418a:	9a 83       	std	Y+2, r25	; 0x02
    418c:	89 83       	std	Y+1, r24	; 0x01
    418e:	6b 83       	std	Y+3, r22	; 0x03
    4190:	5d 83       	std	Y+5, r21	; 0x05
    4192:	4c 83       	std	Y+4, r20	; 0x04
    4194:	89 81       	ldd	r24, Y+1	; 0x01
    4196:	9a 81       	ldd	r25, Y+2	; 0x02
    4198:	dc 01       	movw	r26, r24
    419a:	16 96       	adiw	r26, 0x06	; 6
    419c:	ed 91       	ld	r30, X+
    419e:	fc 91       	ld	r31, X
    41a0:	17 97       	sbiw	r26, 0x07	; 7
    41a2:	2c 81       	ldd	r18, Y+4	; 0x04
    41a4:	3d 81       	ldd	r19, Y+5	; 0x05
    41a6:	89 81       	ldd	r24, Y+1	; 0x01
    41a8:	9a 81       	ldd	r25, Y+2	; 0x02
    41aa:	4b 81       	ldd	r20, Y+3	; 0x03
    41ac:	67 e1       	ldi	r22, 0x17	; 23
    41ae:	09 95       	icall
    41b0:	0f 90       	pop	r0
    41b2:	0f 90       	pop	r0
    41b4:	0f 90       	pop	r0
    41b6:	0f 90       	pop	r0
    41b8:	0f 90       	pop	r0
    41ba:	df 91       	pop	r29
    41bc:	cf 91       	pop	r28
    41be:	08 95       	ret

000041c0 <u8x8_cad_StartTransfer>:
    41c0:	cf 93       	push	r28
    41c2:	df 93       	push	r29
    41c4:	00 d0       	rcall	.+0      	; 0x41c6 <u8x8_cad_StartTransfer+0x6>
    41c6:	cd b7       	in	r28, 0x3d	; 61
    41c8:	de b7       	in	r29, 0x3e	; 62
    41ca:	9a 83       	std	Y+2, r25	; 0x02
    41cc:	89 83       	std	Y+1, r24	; 0x01
    41ce:	89 81       	ldd	r24, Y+1	; 0x01
    41d0:	9a 81       	ldd	r25, Y+2	; 0x02
    41d2:	dc 01       	movw	r26, r24
    41d4:	16 96       	adiw	r26, 0x06	; 6
    41d6:	ed 91       	ld	r30, X+
    41d8:	fc 91       	ld	r31, X
    41da:	17 97       	sbiw	r26, 0x07	; 7
    41dc:	89 81       	ldd	r24, Y+1	; 0x01
    41de:	9a 81       	ldd	r25, Y+2	; 0x02
    41e0:	20 e0       	ldi	r18, 0x00	; 0
    41e2:	30 e0       	ldi	r19, 0x00	; 0
    41e4:	40 e0       	ldi	r20, 0x00	; 0
    41e6:	68 e1       	ldi	r22, 0x18	; 24
    41e8:	09 95       	icall
    41ea:	0f 90       	pop	r0
    41ec:	0f 90       	pop	r0
    41ee:	df 91       	pop	r29
    41f0:	cf 91       	pop	r28
    41f2:	08 95       	ret

000041f4 <u8x8_cad_EndTransfer>:
    41f4:	cf 93       	push	r28
    41f6:	df 93       	push	r29
    41f8:	00 d0       	rcall	.+0      	; 0x41fa <u8x8_cad_EndTransfer+0x6>
    41fa:	cd b7       	in	r28, 0x3d	; 61
    41fc:	de b7       	in	r29, 0x3e	; 62
    41fe:	9a 83       	std	Y+2, r25	; 0x02
    4200:	89 83       	std	Y+1, r24	; 0x01
    4202:	89 81       	ldd	r24, Y+1	; 0x01
    4204:	9a 81       	ldd	r25, Y+2	; 0x02
    4206:	dc 01       	movw	r26, r24
    4208:	16 96       	adiw	r26, 0x06	; 6
    420a:	ed 91       	ld	r30, X+
    420c:	fc 91       	ld	r31, X
    420e:	17 97       	sbiw	r26, 0x07	; 7
    4210:	89 81       	ldd	r24, Y+1	; 0x01
    4212:	9a 81       	ldd	r25, Y+2	; 0x02
    4214:	20 e0       	ldi	r18, 0x00	; 0
    4216:	30 e0       	ldi	r19, 0x00	; 0
    4218:	40 e0       	ldi	r20, 0x00	; 0
    421a:	69 e1       	ldi	r22, 0x19	; 25
    421c:	09 95       	icall
    421e:	0f 90       	pop	r0
    4220:	0f 90       	pop	r0
    4222:	df 91       	pop	r29
    4224:	cf 91       	pop	r28
    4226:	08 95       	ret

00004228 <u8x8_cad_SendSequence>:
    4228:	cf 93       	push	r28
    422a:	df 93       	push	r29
    422c:	00 d0       	rcall	.+0      	; 0x422e <u8x8_cad_SendSequence+0x6>
    422e:	00 d0       	rcall	.+0      	; 0x4230 <u8x8_cad_SendSequence+0x8>
    4230:	00 d0       	rcall	.+0      	; 0x4232 <u8x8_cad_SendSequence+0xa>
    4232:	cd b7       	in	r28, 0x3d	; 61
    4234:	de b7       	in	r29, 0x3e	; 62
    4236:	9c 83       	std	Y+4, r25	; 0x04
    4238:	8b 83       	std	Y+3, r24	; 0x03
    423a:	7e 83       	std	Y+6, r23	; 0x06
    423c:	6d 83       	std	Y+5, r22	; 0x05
    423e:	8d 81       	ldd	r24, Y+5	; 0x05
    4240:	9e 81       	ldd	r25, Y+6	; 0x06
    4242:	dc 01       	movw	r26, r24
    4244:	8c 91       	ld	r24, X
    4246:	89 83       	std	Y+1, r24	; 0x01
    4248:	8d 81       	ldd	r24, Y+5	; 0x05
    424a:	9e 81       	ldd	r25, Y+6	; 0x06
    424c:	01 96       	adiw	r24, 0x01	; 1
    424e:	9e 83       	std	Y+6, r25	; 0x06
    4250:	8d 83       	std	Y+5, r24	; 0x05
    4252:	89 81       	ldd	r24, Y+1	; 0x01
    4254:	88 2f       	mov	r24, r24
    4256:	90 e0       	ldi	r25, 0x00	; 0
    4258:	87 31       	cpi	r24, 0x17	; 23
    425a:	91 05       	cpc	r25, r1
    425c:	39 f1       	breq	.+78     	; 0x42ac <u8x8_cad_SendSequence+0x84>
    425e:	88 31       	cpi	r24, 0x18	; 24
    4260:	91 05       	cpc	r25, r1
    4262:	24 f4       	brge	.+8      	; 0x426c <u8x8_cad_SendSequence+0x44>
    4264:	45 97       	sbiw	r24, 0x15	; 21
    4266:	0c f4       	brge	.+2      	; 0x426a <u8x8_cad_SendSequence+0x42>
    4268:	57 c0       	rjmp	.+174    	; 0x4318 <u8x8_cad_SendSequence+0xf0>
    426a:	07 c0       	rjmp	.+14     	; 0x427a <u8x8_cad_SendSequence+0x52>
    426c:	8a 31       	cpi	r24, 0x1A	; 26
    426e:	91 05       	cpc	r25, r1
    4270:	8c f1       	brlt	.+98     	; 0x42d4 <u8x8_cad_SendSequence+0xac>
    4272:	8e 3f       	cpi	r24, 0xFE	; 254
    4274:	91 05       	cpc	r25, r1
    4276:	e9 f1       	breq	.+122    	; 0x42f2 <u8x8_cad_SendSequence+0xca>
    4278:	4f c0       	rjmp	.+158    	; 0x4318 <u8x8_cad_SendSequence+0xf0>
    427a:	8d 81       	ldd	r24, Y+5	; 0x05
    427c:	9e 81       	ldd	r25, Y+6	; 0x06
    427e:	fc 01       	movw	r30, r24
    4280:	80 81       	ld	r24, Z
    4282:	8a 83       	std	Y+2, r24	; 0x02
    4284:	8b 81       	ldd	r24, Y+3	; 0x03
    4286:	9c 81       	ldd	r25, Y+4	; 0x04
    4288:	dc 01       	movw	r26, r24
    428a:	16 96       	adiw	r26, 0x06	; 6
    428c:	ed 91       	ld	r30, X+
    428e:	fc 91       	ld	r31, X
    4290:	17 97       	sbiw	r26, 0x07	; 7
    4292:	4a 81       	ldd	r20, Y+2	; 0x02
    4294:	8b 81       	ldd	r24, Y+3	; 0x03
    4296:	9c 81       	ldd	r25, Y+4	; 0x04
    4298:	20 e0       	ldi	r18, 0x00	; 0
    429a:	30 e0       	ldi	r19, 0x00	; 0
    429c:	69 81       	ldd	r22, Y+1	; 0x01
    429e:	09 95       	icall
    42a0:	8d 81       	ldd	r24, Y+5	; 0x05
    42a2:	9e 81       	ldd	r25, Y+6	; 0x06
    42a4:	01 96       	adiw	r24, 0x01	; 1
    42a6:	9e 83       	std	Y+6, r25	; 0x06
    42a8:	8d 83       	std	Y+5, r24	; 0x05
    42aa:	35 c0       	rjmp	.+106    	; 0x4316 <u8x8_cad_SendSequence+0xee>
    42ac:	8d 81       	ldd	r24, Y+5	; 0x05
    42ae:	9e 81       	ldd	r25, Y+6	; 0x06
    42b0:	fc 01       	movw	r30, r24
    42b2:	80 81       	ld	r24, Z
    42b4:	8a 83       	std	Y+2, r24	; 0x02
    42b6:	9e 01       	movw	r18, r28
    42b8:	2e 5f       	subi	r18, 0xFE	; 254
    42ba:	3f 4f       	sbci	r19, 0xFF	; 255
    42bc:	8b 81       	ldd	r24, Y+3	; 0x03
    42be:	9c 81       	ldd	r25, Y+4	; 0x04
    42c0:	a9 01       	movw	r20, r18
    42c2:	61 e0       	ldi	r22, 0x01	; 1
    42c4:	0e 94 be 20 	call	0x417c	; 0x417c <u8x8_cad_SendData>
    42c8:	8d 81       	ldd	r24, Y+5	; 0x05
    42ca:	9e 81       	ldd	r25, Y+6	; 0x06
    42cc:	01 96       	adiw	r24, 0x01	; 1
    42ce:	9e 83       	std	Y+6, r25	; 0x06
    42d0:	8d 83       	std	Y+5, r24	; 0x05
    42d2:	21 c0       	rjmp	.+66     	; 0x4316 <u8x8_cad_SendSequence+0xee>
    42d4:	8b 81       	ldd	r24, Y+3	; 0x03
    42d6:	9c 81       	ldd	r25, Y+4	; 0x04
    42d8:	dc 01       	movw	r26, r24
    42da:	16 96       	adiw	r26, 0x06	; 6
    42dc:	ed 91       	ld	r30, X+
    42de:	fc 91       	ld	r31, X
    42e0:	17 97       	sbiw	r26, 0x07	; 7
    42e2:	8b 81       	ldd	r24, Y+3	; 0x03
    42e4:	9c 81       	ldd	r25, Y+4	; 0x04
    42e6:	20 e0       	ldi	r18, 0x00	; 0
    42e8:	30 e0       	ldi	r19, 0x00	; 0
    42ea:	40 e0       	ldi	r20, 0x00	; 0
    42ec:	69 81       	ldd	r22, Y+1	; 0x01
    42ee:	09 95       	icall
    42f0:	12 c0       	rjmp	.+36     	; 0x4316 <u8x8_cad_SendSequence+0xee>
    42f2:	8d 81       	ldd	r24, Y+5	; 0x05
    42f4:	9e 81       	ldd	r25, Y+6	; 0x06
    42f6:	fc 01       	movw	r30, r24
    42f8:	80 81       	ld	r24, Z
    42fa:	8a 83       	std	Y+2, r24	; 0x02
    42fc:	2a 81       	ldd	r18, Y+2	; 0x02
    42fe:	8b 81       	ldd	r24, Y+3	; 0x03
    4300:	9c 81       	ldd	r25, Y+4	; 0x04
    4302:	42 2f       	mov	r20, r18
    4304:	69 e2       	ldi	r22, 0x29	; 41
    4306:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    430a:	8d 81       	ldd	r24, Y+5	; 0x05
    430c:	9e 81       	ldd	r25, Y+6	; 0x06
    430e:	01 96       	adiw	r24, 0x01	; 1
    4310:	9e 83       	std	Y+6, r25	; 0x06
    4312:	8d 83       	std	Y+5, r24	; 0x05
    4314:	00 00       	nop
    4316:	93 cf       	rjmp	.-218    	; 0x423e <u8x8_cad_SendSequence+0x16>
    4318:	00 00       	nop
    431a:	26 96       	adiw	r28, 0x06	; 6
    431c:	0f b6       	in	r0, 0x3f	; 63
    431e:	f8 94       	cli
    4320:	de bf       	out	0x3e, r29	; 62
    4322:	0f be       	out	0x3f, r0	; 63
    4324:	cd bf       	out	0x3d, r28	; 61
    4326:	df 91       	pop	r29
    4328:	cf 91       	pop	r28
    432a:	08 95       	ret

0000432c <u8x8_cad_001>:
  convert to bytes by using 
    dc = 0 for commands and args and
    dc = 1 for data
*/
uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    432c:	cf 93       	push	r28
    432e:	df 93       	push	r29
    4330:	00 d0       	rcall	.+0      	; 0x4332 <u8x8_cad_001+0x6>
    4332:	00 d0       	rcall	.+0      	; 0x4334 <u8x8_cad_001+0x8>
    4334:	00 d0       	rcall	.+0      	; 0x4336 <u8x8_cad_001+0xa>
    4336:	cd b7       	in	r28, 0x3d	; 61
    4338:	de b7       	in	r29, 0x3e	; 62
    433a:	9a 83       	std	Y+2, r25	; 0x02
    433c:	89 83       	std	Y+1, r24	; 0x01
    433e:	6b 83       	std	Y+3, r22	; 0x03
    4340:	4c 83       	std	Y+4, r20	; 0x04
    4342:	3e 83       	std	Y+6, r19	; 0x06
    4344:	2d 83       	std	Y+5, r18	; 0x05
  switch(msg)
    4346:	8b 81       	ldd	r24, Y+3	; 0x03
    4348:	88 2f       	mov	r24, r24
    434a:	90 e0       	ldi	r25, 0x00	; 0
    434c:	86 31       	cpi	r24, 0x16	; 22
    434e:	91 05       	cpc	r25, r1
    4350:	d1 f0       	breq	.+52     	; 0x4386 <u8x8_cad_001+0x5a>
    4352:	87 31       	cpi	r24, 0x17	; 23
    4354:	91 05       	cpc	r25, r1
    4356:	34 f4       	brge	.+12     	; 0x4364 <u8x8_cad_001+0x38>
    4358:	84 31       	cpi	r24, 0x14	; 20
    435a:	91 05       	cpc	r25, r1
    435c:	21 f1       	breq	.+72     	; 0x43a6 <u8x8_cad_001+0x7a>
    435e:	45 97       	sbiw	r24, 0x15	; 21
    4360:	39 f0       	breq	.+14     	; 0x4370 <u8x8_cad_001+0x44>
    4362:	30 c0       	rjmp	.+96     	; 0x43c4 <u8x8_cad_001+0x98>
    4364:	87 31       	cpi	r24, 0x17	; 23
    4366:	91 05       	cpc	r25, r1
    4368:	c9 f0       	breq	.+50     	; 0x439c <u8x8_cad_001+0x70>
    436a:	4a 97       	sbiw	r24, 0x1a	; 26
    436c:	5c f5       	brge	.+86     	; 0x43c4 <u8x8_cad_001+0x98>
    436e:	1b c0       	rjmp	.+54     	; 0x43a6 <u8x8_cad_001+0x7a>
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
    4370:	89 81       	ldd	r24, Y+1	; 0x01
    4372:	9a 81       	ldd	r25, Y+2	; 0x02
    4374:	60 e0       	ldi	r22, 0x00	; 0
    4376:	0e 94 2d 20 	call	0x405a	; 0x405a <u8x8_byte_SetDC>
      u8x8_byte_SendByte(u8x8, arg_int);
    437a:	89 81       	ldd	r24, Y+1	; 0x01
    437c:	9a 81       	ldd	r25, Y+2	; 0x02
    437e:	6c 81       	ldd	r22, Y+4	; 0x04
    4380:	0e 94 6c 20 	call	0x40d8	; 0x40d8 <u8x8_byte_SendByte>
      break;
    4384:	21 c0       	rjmp	.+66     	; 0x43c8 <u8x8_cad_001+0x9c>
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 0);
    4386:	89 81       	ldd	r24, Y+1	; 0x01
    4388:	9a 81       	ldd	r25, Y+2	; 0x02
    438a:	60 e0       	ldi	r22, 0x00	; 0
    438c:	0e 94 2d 20 	call	0x405a	; 0x405a <u8x8_byte_SetDC>
      u8x8_byte_SendByte(u8x8, arg_int);
    4390:	89 81       	ldd	r24, Y+1	; 0x01
    4392:	9a 81       	ldd	r25, Y+2	; 0x02
    4394:	6c 81       	ldd	r22, Y+4	; 0x04
    4396:	0e 94 6c 20 	call	0x40d8	; 0x40d8 <u8x8_byte_SendByte>
      break;
    439a:	16 c0       	rjmp	.+44     	; 0x43c8 <u8x8_cad_001+0x9c>
    case U8X8_MSG_CAD_SEND_DATA:
      u8x8_byte_SetDC(u8x8, 1);
    439c:	89 81       	ldd	r24, Y+1	; 0x01
    439e:	9a 81       	ldd	r25, Y+2	; 0x02
    43a0:	61 e0       	ldi	r22, 0x01	; 1
    43a2:	0e 94 2d 20 	call	0x405a	; 0x405a <u8x8_byte_SetDC>
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    43a6:	89 81       	ldd	r24, Y+1	; 0x01
    43a8:	9a 81       	ldd	r25, Y+2	; 0x02
    43aa:	dc 01       	movw	r26, r24
    43ac:	18 96       	adiw	r26, 0x08	; 8
    43ae:	ed 91       	ld	r30, X+
    43b0:	fc 91       	ld	r31, X
    43b2:	19 97       	sbiw	r26, 0x09	; 9
    43b4:	2d 81       	ldd	r18, Y+5	; 0x05
    43b6:	3e 81       	ldd	r19, Y+6	; 0x06
    43b8:	89 81       	ldd	r24, Y+1	; 0x01
    43ba:	9a 81       	ldd	r25, Y+2	; 0x02
    43bc:	4c 81       	ldd	r20, Y+4	; 0x04
    43be:	6b 81       	ldd	r22, Y+3	; 0x03
    43c0:	09 95       	icall
    43c2:	03 c0       	rjmp	.+6      	; 0x43ca <u8x8_cad_001+0x9e>
    default:
      return 0;
    43c4:	80 e0       	ldi	r24, 0x00	; 0
    43c6:	01 c0       	rjmp	.+2      	; 0x43ca <u8x8_cad_001+0x9e>
  }
  return 1;
    43c8:	81 e0       	ldi	r24, 0x01	; 1
}
    43ca:	26 96       	adiw	r28, 0x06	; 6
    43cc:	0f b6       	in	r0, 0x3f	; 63
    43ce:	f8 94       	cli
    43d0:	de bf       	out	0x3e, r29	; 62
    43d2:	0f be       	out	0x3f, r0	; 63
    43d4:	cd bf       	out	0x3d, r28	; 61
    43d6:	df 91       	pop	r29
    43d8:	cf 91       	pop	r28
    43da:	08 95       	ret

000043dc <u8x8_d_helper_display_setup_memory>:
*/
void u8x8_InitInterface(u8x8_t *u8x8)
{
  u8x8_gpio_Init(u8x8);
  u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will NOT call GPIO_INIT */
}
    43dc:	cf 93       	push	r28
    43de:	df 93       	push	r29
    43e0:	00 d0       	rcall	.+0      	; 0x43e2 <u8x8_d_helper_display_setup_memory+0x6>
    43e2:	00 d0       	rcall	.+0      	; 0x43e4 <u8x8_d_helper_display_setup_memory+0x8>
    43e4:	cd b7       	in	r28, 0x3d	; 61
    43e6:	de b7       	in	r29, 0x3e	; 62
    43e8:	9a 83       	std	Y+2, r25	; 0x02
    43ea:	89 83       	std	Y+1, r24	; 0x01
    43ec:	7c 83       	std	Y+4, r23	; 0x04
    43ee:	6b 83       	std	Y+3, r22	; 0x03
    43f0:	89 81       	ldd	r24, Y+1	; 0x01
    43f2:	9a 81       	ldd	r25, Y+2	; 0x02
    43f4:	2b 81       	ldd	r18, Y+3	; 0x03
    43f6:	3c 81       	ldd	r19, Y+4	; 0x04
    43f8:	fc 01       	movw	r30, r24
    43fa:	31 83       	std	Z+1, r19	; 0x01
    43fc:	20 83       	st	Z, r18
    43fe:	89 81       	ldd	r24, Y+1	; 0x01
    4400:	9a 81       	ldd	r25, Y+2	; 0x02
    4402:	fc 01       	movw	r30, r24
    4404:	80 81       	ld	r24, Z
    4406:	91 81       	ldd	r25, Z+1	; 0x01
    4408:	fc 01       	movw	r30, r24
    440a:	22 89       	ldd	r18, Z+18	; 0x12
    440c:	89 81       	ldd	r24, Y+1	; 0x01
    440e:	9a 81       	ldd	r25, Y+2	; 0x02
    4410:	fc 01       	movw	r30, r24
    4412:	24 8b       	std	Z+20, r18	; 0x14
    4414:	00 00       	nop
    4416:	0f 90       	pop	r0
    4418:	0f 90       	pop	r0
    441a:	0f 90       	pop	r0
    441c:	0f 90       	pop	r0
    441e:	df 91       	pop	r29
    4420:	cf 91       	pop	r28
    4422:	08 95       	ret

00004424 <u8x8_d_helper_display_init>:
    4424:	cf 93       	push	r28
    4426:	df 93       	push	r29
    4428:	00 d0       	rcall	.+0      	; 0x442a <u8x8_d_helper_display_init+0x6>
    442a:	cd b7       	in	r28, 0x3d	; 61
    442c:	de b7       	in	r29, 0x3e	; 62
    442e:	9a 83       	std	Y+2, r25	; 0x02
    4430:	89 83       	std	Y+1, r24	; 0x01
    4432:	89 81       	ldd	r24, Y+1	; 0x01
    4434:	9a 81       	ldd	r25, Y+2	; 0x02
    4436:	dc 01       	movw	r26, r24
    4438:	1a 96       	adiw	r26, 0x0a	; 10
    443a:	ed 91       	ld	r30, X+
    443c:	fc 91       	ld	r31, X
    443e:	1b 97       	sbiw	r26, 0x0b	; 11
    4440:	89 81       	ldd	r24, Y+1	; 0x01
    4442:	9a 81       	ldd	r25, Y+2	; 0x02
    4444:	20 e0       	ldi	r18, 0x00	; 0
    4446:	30 e0       	ldi	r19, 0x00	; 0
    4448:	40 e0       	ldi	r20, 0x00	; 0
    444a:	68 e2       	ldi	r22, 0x28	; 40
    444c:	09 95       	icall
    444e:	89 81       	ldd	r24, Y+1	; 0x01
    4450:	9a 81       	ldd	r25, Y+2	; 0x02
    4452:	dc 01       	movw	r26, r24
    4454:	16 96       	adiw	r26, 0x06	; 6
    4456:	ed 91       	ld	r30, X+
    4458:	fc 91       	ld	r31, X
    445a:	17 97       	sbiw	r26, 0x07	; 7
    445c:	89 81       	ldd	r24, Y+1	; 0x01
    445e:	9a 81       	ldd	r25, Y+2	; 0x02
    4460:	20 e0       	ldi	r18, 0x00	; 0
    4462:	30 e0       	ldi	r19, 0x00	; 0
    4464:	40 e0       	ldi	r20, 0x00	; 0
    4466:	64 e1       	ldi	r22, 0x14	; 20
    4468:	09 95       	icall
    446a:	89 81       	ldd	r24, Y+1	; 0x01
    446c:	9a 81       	ldd	r25, Y+2	; 0x02
    446e:	41 e0       	ldi	r20, 0x01	; 1
    4470:	6b e4       	ldi	r22, 0x4B	; 75
    4472:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    4476:	89 81       	ldd	r24, Y+1	; 0x01
    4478:	9a 81       	ldd	r25, Y+2	; 0x02
    447a:	fc 01       	movw	r30, r24
    447c:	80 81       	ld	r24, Z
    447e:	91 81       	ldd	r25, Z+1	; 0x01
    4480:	dc 01       	movw	r26, r24
    4482:	14 96       	adiw	r26, 0x04	; 4
    4484:	2c 91       	ld	r18, X
    4486:	89 81       	ldd	r24, Y+1	; 0x01
    4488:	9a 81       	ldd	r25, Y+2	; 0x02
    448a:	42 2f       	mov	r20, r18
    448c:	69 e2       	ldi	r22, 0x29	; 41
    448e:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    4492:	89 81       	ldd	r24, Y+1	; 0x01
    4494:	9a 81       	ldd	r25, Y+2	; 0x02
    4496:	40 e0       	ldi	r20, 0x00	; 0
    4498:	6b e4       	ldi	r22, 0x4B	; 75
    449a:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    449e:	89 81       	ldd	r24, Y+1	; 0x01
    44a0:	9a 81       	ldd	r25, Y+2	; 0x02
    44a2:	fc 01       	movw	r30, r24
    44a4:	80 81       	ld	r24, Z
    44a6:	91 81       	ldd	r25, Z+1	; 0x01
    44a8:	dc 01       	movw	r26, r24
    44aa:	14 96       	adiw	r26, 0x04	; 4
    44ac:	2c 91       	ld	r18, X
    44ae:	89 81       	ldd	r24, Y+1	; 0x01
    44b0:	9a 81       	ldd	r25, Y+2	; 0x02
    44b2:	42 2f       	mov	r20, r18
    44b4:	69 e2       	ldi	r22, 0x29	; 41
    44b6:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    44ba:	89 81       	ldd	r24, Y+1	; 0x01
    44bc:	9a 81       	ldd	r25, Y+2	; 0x02
    44be:	41 e0       	ldi	r20, 0x01	; 1
    44c0:	6b e4       	ldi	r22, 0x4B	; 75
    44c2:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    44c6:	89 81       	ldd	r24, Y+1	; 0x01
    44c8:	9a 81       	ldd	r25, Y+2	; 0x02
    44ca:	fc 01       	movw	r30, r24
    44cc:	80 81       	ld	r24, Z
    44ce:	91 81       	ldd	r25, Z+1	; 0x01
    44d0:	dc 01       	movw	r26, r24
    44d2:	15 96       	adiw	r26, 0x05	; 5
    44d4:	2c 91       	ld	r18, X
    44d6:	89 81       	ldd	r24, Y+1	; 0x01
    44d8:	9a 81       	ldd	r25, Y+2	; 0x02
    44da:	42 2f       	mov	r20, r18
    44dc:	69 e2       	ldi	r22, 0x29	; 41
    44de:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <u8x8_gpio_call>
    44e2:	00 00       	nop
    44e4:	0f 90       	pop	r0
    44e6:	0f 90       	pop	r0
    44e8:	df 91       	pop	r29
    44ea:	cf 91       	pop	r28
    44ec:	08 95       	ret

000044ee <u8x8_DrawTile>:
    44ee:	0f 93       	push	r16
    44f0:	1f 93       	push	r17
    44f2:	cf 93       	push	r28
    44f4:	df 93       	push	r29
    44f6:	cd b7       	in	r28, 0x3d	; 61
    44f8:	de b7       	in	r29, 0x3e	; 62
    44fa:	2c 97       	sbiw	r28, 0x0c	; 12
    44fc:	0f b6       	in	r0, 0x3f	; 63
    44fe:	f8 94       	cli
    4500:	de bf       	out	0x3e, r29	; 62
    4502:	0f be       	out	0x3f, r0	; 63
    4504:	cd bf       	out	0x3d, r28	; 61
    4506:	9f 83       	std	Y+7, r25	; 0x07
    4508:	8e 83       	std	Y+6, r24	; 0x06
    450a:	68 87       	std	Y+8, r22	; 0x08
    450c:	49 87       	std	Y+9, r20	; 0x09
    450e:	2a 87       	std	Y+10, r18	; 0x0a
    4510:	1c 87       	std	Y+12, r17	; 0x0c
    4512:	0b 87       	std	Y+11, r16	; 0x0b
    4514:	88 85       	ldd	r24, Y+8	; 0x08
    4516:	8c 83       	std	Y+4, r24	; 0x04
    4518:	89 85       	ldd	r24, Y+9	; 0x09
    451a:	8d 83       	std	Y+5, r24	; 0x05
    451c:	8a 85       	ldd	r24, Y+10	; 0x0a
    451e:	8b 83       	std	Y+3, r24	; 0x03
    4520:	8b 85       	ldd	r24, Y+11	; 0x0b
    4522:	9c 85       	ldd	r25, Y+12	; 0x0c
    4524:	9a 83       	std	Y+2, r25	; 0x02
    4526:	89 83       	std	Y+1, r24	; 0x01
    4528:	8e 81       	ldd	r24, Y+6	; 0x06
    452a:	9f 81       	ldd	r25, Y+7	; 0x07
    452c:	dc 01       	movw	r26, r24
    452e:	14 96       	adiw	r26, 0x04	; 4
    4530:	ed 91       	ld	r30, X+
    4532:	fc 91       	ld	r31, X
    4534:	15 97       	sbiw	r26, 0x05	; 5
    4536:	8e 81       	ldd	r24, Y+6	; 0x06
    4538:	9f 81       	ldd	r25, Y+7	; 0x07
    453a:	9e 01       	movw	r18, r28
    453c:	2f 5f       	subi	r18, 0xFF	; 255
    453e:	3f 4f       	sbci	r19, 0xFF	; 255
    4540:	41 e0       	ldi	r20, 0x01	; 1
    4542:	6f e0       	ldi	r22, 0x0F	; 15
    4544:	09 95       	icall
    4546:	2c 96       	adiw	r28, 0x0c	; 12
    4548:	0f b6       	in	r0, 0x3f	; 63
    454a:	f8 94       	cli
    454c:	de bf       	out	0x3e, r29	; 62
    454e:	0f be       	out	0x3f, r0	; 63
    4550:	cd bf       	out	0x3d, r28	; 61
    4552:	df 91       	pop	r29
    4554:	cf 91       	pop	r28
    4556:	1f 91       	pop	r17
    4558:	0f 91       	pop	r16
    455a:	08 95       	ret

0000455c <u8x8_SetupMemory>:
    455c:	cf 93       	push	r28
    455e:	df 93       	push	r29
    4560:	00 d0       	rcall	.+0      	; 0x4562 <u8x8_SetupMemory+0x6>
    4562:	cd b7       	in	r28, 0x3d	; 61
    4564:	de b7       	in	r29, 0x3e	; 62
    4566:	9a 83       	std	Y+2, r25	; 0x02
    4568:	89 83       	std	Y+1, r24	; 0x01
    456a:	89 81       	ldd	r24, Y+1	; 0x01
    456c:	9a 81       	ldd	r25, Y+2	; 0x02
    456e:	dc 01       	movw	r26, r24
    4570:	14 96       	adiw	r26, 0x04	; 4
    4572:	ed 91       	ld	r30, X+
    4574:	fc 91       	ld	r31, X
    4576:	15 97       	sbiw	r26, 0x05	; 5
    4578:	89 81       	ldd	r24, Y+1	; 0x01
    457a:	9a 81       	ldd	r25, Y+2	; 0x02
    457c:	20 e0       	ldi	r18, 0x00	; 0
    457e:	30 e0       	ldi	r19, 0x00	; 0
    4580:	40 e0       	ldi	r20, 0x00	; 0
    4582:	69 e0       	ldi	r22, 0x09	; 9
    4584:	09 95       	icall
    4586:	00 00       	nop
    4588:	0f 90       	pop	r0
    458a:	0f 90       	pop	r0
    458c:	df 91       	pop	r29
    458e:	cf 91       	pop	r28
    4590:	08 95       	ret

00004592 <u8x8_InitDisplay>:
  In some cases it is not required to init the display (for example if the display is already running, but the controller comes out of deep sleep mode).
  Then InitDisplay can be skipped, but u8x8_InitInterface()  (== u8x8_gpio_Init() and u8x8_cad_Init()) need to be executed.

*/
void u8x8_InitDisplay(u8x8_t *u8x8)
{
    4592:	cf 93       	push	r28
    4594:	df 93       	push	r29
    4596:	00 d0       	rcall	.+0      	; 0x4598 <u8x8_InitDisplay+0x6>
    4598:	cd b7       	in	r28, 0x3d	; 61
    459a:	de b7       	in	r29, 0x3e	; 62
    459c:	9a 83       	std	Y+2, r25	; 0x02
    459e:	89 83       	std	Y+1, r24	; 0x01
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);       /* this will call u8x8_d_helper_display_init() and send the init seqence to the display */
    45a0:	89 81       	ldd	r24, Y+1	; 0x01
    45a2:	9a 81       	ldd	r25, Y+2	; 0x02
    45a4:	dc 01       	movw	r26, r24
    45a6:	14 96       	adiw	r26, 0x04	; 4
    45a8:	ed 91       	ld	r30, X+
    45aa:	fc 91       	ld	r31, X
    45ac:	15 97       	sbiw	r26, 0x05	; 5
    45ae:	89 81       	ldd	r24, Y+1	; 0x01
    45b0:	9a 81       	ldd	r25, Y+2	; 0x02
    45b2:	20 e0       	ldi	r18, 0x00	; 0
    45b4:	30 e0       	ldi	r19, 0x00	; 0
    45b6:	40 e0       	ldi	r20, 0x00	; 0
    45b8:	6a e0       	ldi	r22, 0x0A	; 10
    45ba:	09 95       	icall
  /* u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, 0, NULL);  */ /* It would make sense to call flip mode 0 here after U8X8_MSG_DISPLAY_INIT */
}
    45bc:	00 00       	nop
    45be:	0f 90       	pop	r0
    45c0:	0f 90       	pop	r0
    45c2:	df 91       	pop	r29
    45c4:	cf 91       	pop	r28
    45c6:	08 95       	ret

000045c8 <u8x8_SetPowerSave>:

void u8x8_SetPowerSave(u8x8_t *u8x8, uint8_t is_enable)
{
    45c8:	cf 93       	push	r28
    45ca:	df 93       	push	r29
    45cc:	00 d0       	rcall	.+0      	; 0x45ce <u8x8_SetPowerSave+0x6>
    45ce:	1f 92       	push	r1
    45d0:	cd b7       	in	r28, 0x3d	; 61
    45d2:	de b7       	in	r29, 0x3e	; 62
    45d4:	9a 83       	std	Y+2, r25	; 0x02
    45d6:	89 83       	std	Y+1, r24	; 0x01
    45d8:	6b 83       	std	Y+3, r22	; 0x03
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
    45da:	89 81       	ldd	r24, Y+1	; 0x01
    45dc:	9a 81       	ldd	r25, Y+2	; 0x02
    45de:	dc 01       	movw	r26, r24
    45e0:	14 96       	adiw	r26, 0x04	; 4
    45e2:	ed 91       	ld	r30, X+
    45e4:	fc 91       	ld	r31, X
    45e6:	15 97       	sbiw	r26, 0x05	; 5
    45e8:	89 81       	ldd	r24, Y+1	; 0x01
    45ea:	9a 81       	ldd	r25, Y+2	; 0x02
    45ec:	20 e0       	ldi	r18, 0x00	; 0
    45ee:	30 e0       	ldi	r19, 0x00	; 0
    45f0:	4b 81       	ldd	r20, Y+3	; 0x03
    45f2:	6b e0       	ldi	r22, 0x0B	; 11
    45f4:	09 95       	icall
}
    45f6:	00 00       	nop
    45f8:	0f 90       	pop	r0
    45fa:	0f 90       	pop	r0
    45fc:	0f 90       	pop	r0
    45fe:	df 91       	pop	r29
    4600:	cf 91       	pop	r28
    4602:	08 95       	ret

00004604 <u8x8_SetFlipMode>:

void u8x8_SetFlipMode(u8x8_t *u8x8, uint8_t mode)
{
    4604:	cf 93       	push	r28
    4606:	df 93       	push	r29
    4608:	00 d0       	rcall	.+0      	; 0x460a <u8x8_SetFlipMode+0x6>
    460a:	1f 92       	push	r1
    460c:	cd b7       	in	r28, 0x3d	; 61
    460e:	de b7       	in	r29, 0x3e	; 62
    4610:	9a 83       	std	Y+2, r25	; 0x02
    4612:	89 83       	std	Y+1, r24	; 0x01
    4614:	6b 83       	std	Y+3, r22	; 0x03
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
    4616:	89 81       	ldd	r24, Y+1	; 0x01
    4618:	9a 81       	ldd	r25, Y+2	; 0x02
    461a:	dc 01       	movw	r26, r24
    461c:	14 96       	adiw	r26, 0x04	; 4
    461e:	ed 91       	ld	r30, X+
    4620:	fc 91       	ld	r31, X
    4622:	15 97       	sbiw	r26, 0x05	; 5
    4624:	89 81       	ldd	r24, Y+1	; 0x01
    4626:	9a 81       	ldd	r25, Y+2	; 0x02
    4628:	20 e0       	ldi	r18, 0x00	; 0
    462a:	30 e0       	ldi	r19, 0x00	; 0
    462c:	4b 81       	ldd	r20, Y+3	; 0x03
    462e:	6d e0       	ldi	r22, 0x0D	; 13
    4630:	09 95       	icall
}
    4632:	00 00       	nop
    4634:	0f 90       	pop	r0
    4636:	0f 90       	pop	r0
    4638:	0f 90       	pop	r0
    463a:	df 91       	pop	r29
    463c:	cf 91       	pop	r28
    463e:	08 95       	ret

00004640 <u8x8_SetContrast>:

void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
{
    4640:	cf 93       	push	r28
    4642:	df 93       	push	r29
    4644:	00 d0       	rcall	.+0      	; 0x4646 <u8x8_SetContrast+0x6>
    4646:	1f 92       	push	r1
    4648:	cd b7       	in	r28, 0x3d	; 61
    464a:	de b7       	in	r29, 0x3e	; 62
    464c:	9a 83       	std	Y+2, r25	; 0x02
    464e:	89 83       	std	Y+1, r24	; 0x01
    4650:	6b 83       	std	Y+3, r22	; 0x03
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
    4652:	89 81       	ldd	r24, Y+1	; 0x01
    4654:	9a 81       	ldd	r25, Y+2	; 0x02
    4656:	dc 01       	movw	r26, r24
    4658:	14 96       	adiw	r26, 0x04	; 4
    465a:	ed 91       	ld	r30, X+
    465c:	fc 91       	ld	r31, X
    465e:	15 97       	sbiw	r26, 0x05	; 5
    4660:	89 81       	ldd	r24, Y+1	; 0x01
    4662:	9a 81       	ldd	r25, Y+2	; 0x02
    4664:	20 e0       	ldi	r18, 0x00	; 0
    4666:	30 e0       	ldi	r19, 0x00	; 0
    4668:	4b 81       	ldd	r20, Y+3	; 0x03
    466a:	6e e0       	ldi	r22, 0x0E	; 14
    466c:	09 95       	icall
}
    466e:	00 00       	nop
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	df 91       	pop	r29
    4678:	cf 91       	pop	r28
    467a:	08 95       	ret

0000467c <u8x8_RefreshDisplay>:

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
    467c:	cf 93       	push	r28
    467e:	df 93       	push	r29
    4680:	00 d0       	rcall	.+0      	; 0x4682 <u8x8_RefreshDisplay+0x6>
    4682:	cd b7       	in	r28, 0x3d	; 61
    4684:	de b7       	in	r29, 0x3e	; 62
    4686:	9a 83       	std	Y+2, r25	; 0x02
    4688:	89 83       	std	Y+1, r24	; 0x01
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    468a:	89 81       	ldd	r24, Y+1	; 0x01
    468c:	9a 81       	ldd	r25, Y+2	; 0x02
    468e:	dc 01       	movw	r26, r24
    4690:	14 96       	adiw	r26, 0x04	; 4
    4692:	ed 91       	ld	r30, X+
    4694:	fc 91       	ld	r31, X
    4696:	15 97       	sbiw	r26, 0x05	; 5
    4698:	89 81       	ldd	r24, Y+1	; 0x01
    469a:	9a 81       	ldd	r25, Y+2	; 0x02
    469c:	20 e0       	ldi	r18, 0x00	; 0
    469e:	30 e0       	ldi	r19, 0x00	; 0
    46a0:	40 e0       	ldi	r20, 0x00	; 0
    46a2:	60 e1       	ldi	r22, 0x10	; 16
    46a4:	09 95       	icall
}
    46a6:	00 00       	nop
    46a8:	0f 90       	pop	r0
    46aa:	0f 90       	pop	r0
    46ac:	df 91       	pop	r29
    46ae:	cf 91       	pop	r28
    46b0:	08 95       	ret

000046b2 <u8x8_d_st7565_common>:
      default:
	return 0;		/* msg unknown */
    }
  }
  return 1;
}
    46b2:	cf 93       	push	r28
    46b4:	df 93       	push	r29
    46b6:	cd b7       	in	r28, 0x3d	; 61
    46b8:	de b7       	in	r29, 0x3e	; 62
    46ba:	2a 97       	sbiw	r28, 0x0a	; 10
    46bc:	0f b6       	in	r0, 0x3f	; 63
    46be:	f8 94       	cli
    46c0:	de bf       	out	0x3e, r29	; 62
    46c2:	0f be       	out	0x3f, r0	; 63
    46c4:	cd bf       	out	0x3d, r28	; 61
    46c6:	9e 83       	std	Y+6, r25	; 0x06
    46c8:	8d 83       	std	Y+5, r24	; 0x05
    46ca:	6f 83       	std	Y+7, r22	; 0x07
    46cc:	48 87       	std	Y+8, r20	; 0x08
    46ce:	3a 87       	std	Y+10, r19	; 0x0a
    46d0:	29 87       	std	Y+9, r18	; 0x09
    46d2:	8f 81       	ldd	r24, Y+7	; 0x07
    46d4:	88 2f       	mov	r24, r24
    46d6:	90 e0       	ldi	r25, 0x00	; 0
    46d8:	8e 30       	cpi	r24, 0x0E	; 14
    46da:	91 05       	cpc	r25, r1
    46dc:	09 f4       	brne	.+2      	; 0x46e0 <u8x8_d_st7565_common+0x2e>
    46de:	81 c0       	rjmp	.+258    	; 0x47e2 <u8x8_d_st7565_common+0x130>
    46e0:	8f 30       	cpi	r24, 0x0F	; 15
    46e2:	91 05       	cpc	r25, r1
    46e4:	21 f0       	breq	.+8      	; 0x46ee <u8x8_d_st7565_common+0x3c>
    46e6:	0b 97       	sbiw	r24, 0x0b	; 11
    46e8:	09 f4       	brne	.+2      	; 0x46ec <u8x8_d_st7565_common+0x3a>
    46ea:	6a c0       	rjmp	.+212    	; 0x47c0 <u8x8_d_st7565_common+0x10e>
    46ec:	91 c0       	rjmp	.+290    	; 0x4810 <u8x8_d_st7565_common+0x15e>
    46ee:	8d 81       	ldd	r24, Y+5	; 0x05
    46f0:	9e 81       	ldd	r25, Y+6	; 0x06
    46f2:	0e 94 e0 20 	call	0x41c0	; 0x41c0 <u8x8_cad_StartTransfer>
    46f6:	89 85       	ldd	r24, Y+9	; 0x09
    46f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    46fa:	fc 01       	movw	r30, r24
    46fc:	83 81       	ldd	r24, Z+3	; 0x03
    46fe:	8a 83       	std	Y+2, r24	; 0x02
    4700:	8a 81       	ldd	r24, Y+2	; 0x02
    4702:	88 0f       	add	r24, r24
    4704:	88 0f       	add	r24, r24
    4706:	88 0f       	add	r24, r24
    4708:	8a 83       	std	Y+2, r24	; 0x02
    470a:	8d 81       	ldd	r24, Y+5	; 0x05
    470c:	9e 81       	ldd	r25, Y+6	; 0x06
    470e:	fc 01       	movw	r30, r24
    4710:	84 89       	ldd	r24, Z+20	; 0x14
    4712:	9a 81       	ldd	r25, Y+2	; 0x02
    4714:	89 0f       	add	r24, r25
    4716:	8a 83       	std	Y+2, r24	; 0x02
    4718:	8a 81       	ldd	r24, Y+2	; 0x02
    471a:	82 95       	swap	r24
    471c:	8f 70       	andi	r24, 0x0F	; 15
    471e:	28 2f       	mov	r18, r24
    4720:	20 61       	ori	r18, 0x10	; 16
    4722:	8d 81       	ldd	r24, Y+5	; 0x05
    4724:	9e 81       	ldd	r25, Y+6	; 0x06
    4726:	62 2f       	mov	r22, r18
    4728:	0e 94 84 20 	call	0x4108	; 0x4108 <u8x8_cad_SendCmd>
    472c:	8a 81       	ldd	r24, Y+2	; 0x02
    472e:	28 2f       	mov	r18, r24
    4730:	2f 70       	andi	r18, 0x0F	; 15
    4732:	8d 81       	ldd	r24, Y+5	; 0x05
    4734:	9e 81       	ldd	r25, Y+6	; 0x06
    4736:	62 2f       	mov	r22, r18
    4738:	0e 94 84 20 	call	0x4108	; 0x4108 <u8x8_cad_SendCmd>
    473c:	89 85       	ldd	r24, Y+9	; 0x09
    473e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4740:	fc 01       	movw	r30, r24
    4742:	84 81       	ldd	r24, Z+4	; 0x04
    4744:	28 2f       	mov	r18, r24
    4746:	20 6b       	ori	r18, 0xB0	; 176
    4748:	8d 81       	ldd	r24, Y+5	; 0x05
    474a:	9e 81       	ldd	r25, Y+6	; 0x06
    474c:	62 2f       	mov	r22, r18
    474e:	0e 94 84 20 	call	0x4108	; 0x4108 <u8x8_cad_SendCmd>
    4752:	89 85       	ldd	r24, Y+9	; 0x09
    4754:	9a 85       	ldd	r25, Y+10	; 0x0a
    4756:	fc 01       	movw	r30, r24
    4758:	82 81       	ldd	r24, Z+2	; 0x02
    475a:	89 83       	std	Y+1, r24	; 0x01
    475c:	89 81       	ldd	r24, Y+1	; 0x01
    475e:	88 0f       	add	r24, r24
    4760:	88 0f       	add	r24, r24
    4762:	88 0f       	add	r24, r24
    4764:	89 83       	std	Y+1, r24	; 0x01
    4766:	89 85       	ldd	r24, Y+9	; 0x09
    4768:	9a 85       	ldd	r25, Y+10	; 0x0a
    476a:	fc 01       	movw	r30, r24
    476c:	80 81       	ld	r24, Z
    476e:	91 81       	ldd	r25, Z+1	; 0x01
    4770:	9c 83       	std	Y+4, r25	; 0x04
    4772:	8b 83       	std	Y+3, r24	; 0x03
    4774:	89 81       	ldd	r24, Y+1	; 0x01
    4776:	28 2f       	mov	r18, r24
    4778:	30 e0       	ldi	r19, 0x00	; 0
    477a:	8a 81       	ldd	r24, Y+2	; 0x02
    477c:	88 2f       	mov	r24, r24
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	82 0f       	add	r24, r18
    4782:	93 1f       	adc	r25, r19
    4784:	85 38       	cpi	r24, 0x85	; 133
    4786:	91 05       	cpc	r25, r1
    4788:	40 f0       	brcs	.+16     	; 0x479a <u8x8_d_st7565_common+0xe8>
    478a:	84 e8       	ldi	r24, 0x84	; 132
    478c:	89 83       	std	Y+1, r24	; 0x01
    478e:	99 81       	ldd	r25, Y+1	; 0x01
    4790:	8a 81       	ldd	r24, Y+2	; 0x02
    4792:	f9 2f       	mov	r31, r25
    4794:	f8 1b       	sub	r31, r24
    4796:	8f 2f       	mov	r24, r31
    4798:	89 83       	std	Y+1, r24	; 0x01
    479a:	2b 81       	ldd	r18, Y+3	; 0x03
    479c:	3c 81       	ldd	r19, Y+4	; 0x04
    479e:	8d 81       	ldd	r24, Y+5	; 0x05
    47a0:	9e 81       	ldd	r25, Y+6	; 0x06
    47a2:	a9 01       	movw	r20, r18
    47a4:	69 81       	ldd	r22, Y+1	; 0x01
    47a6:	0e 94 be 20 	call	0x417c	; 0x417c <u8x8_cad_SendData>
    47aa:	88 85       	ldd	r24, Y+8	; 0x08
    47ac:	81 50       	subi	r24, 0x01	; 1
    47ae:	88 87       	std	Y+8, r24	; 0x08
    47b0:	88 85       	ldd	r24, Y+8	; 0x08
    47b2:	88 23       	and	r24, r24
    47b4:	91 f7       	brne	.-28     	; 0x479a <u8x8_d_st7565_common+0xe8>
    47b6:	8d 81       	ldd	r24, Y+5	; 0x05
    47b8:	9e 81       	ldd	r25, Y+6	; 0x06
    47ba:	0e 94 fa 20 	call	0x41f4	; 0x41f4 <u8x8_cad_EndTransfer>
    47be:	2a c0       	rjmp	.+84     	; 0x4814 <u8x8_d_st7565_common+0x162>
    47c0:	88 85       	ldd	r24, Y+8	; 0x08
    47c2:	88 23       	and	r24, r24
    47c4:	39 f4       	brne	.+14     	; 0x47d4 <u8x8_d_st7565_common+0x122>
    47c6:	8d 81       	ldd	r24, Y+5	; 0x05
    47c8:	9e 81       	ldd	r25, Y+6	; 0x06
    47ca:	6f e3       	ldi	r22, 0x3F	; 63
    47cc:	72 e0       	ldi	r23, 0x02	; 2
    47ce:	0e 94 14 21 	call	0x4228	; 0x4228 <u8x8_cad_SendSequence>
    47d2:	20 c0       	rjmp	.+64     	; 0x4814 <u8x8_d_st7565_common+0x162>
    47d4:	8d 81       	ldd	r24, Y+5	; 0x05
    47d6:	9e 81       	ldd	r25, Y+6	; 0x06
    47d8:	66 e4       	ldi	r22, 0x46	; 70
    47da:	72 e0       	ldi	r23, 0x02	; 2
    47dc:	0e 94 14 21 	call	0x4228	; 0x4228 <u8x8_cad_SendSequence>
    47e0:	19 c0       	rjmp	.+50     	; 0x4814 <u8x8_d_st7565_common+0x162>
    47e2:	8d 81       	ldd	r24, Y+5	; 0x05
    47e4:	9e 81       	ldd	r25, Y+6	; 0x06
    47e6:	0e 94 e0 20 	call	0x41c0	; 0x41c0 <u8x8_cad_StartTransfer>
    47ea:	8d 81       	ldd	r24, Y+5	; 0x05
    47ec:	9e 81       	ldd	r25, Y+6	; 0x06
    47ee:	61 e8       	ldi	r22, 0x81	; 129
    47f0:	0e 94 84 20 	call	0x4108	; 0x4108 <u8x8_cad_SendCmd>
    47f4:	88 85       	ldd	r24, Y+8	; 0x08
    47f6:	28 2f       	mov	r18, r24
    47f8:	26 95       	lsr	r18
    47fa:	26 95       	lsr	r18
    47fc:	8d 81       	ldd	r24, Y+5	; 0x05
    47fe:	9e 81       	ldd	r25, Y+6	; 0x06
    4800:	62 2f       	mov	r22, r18
    4802:	0e 94 a1 20 	call	0x4142	; 0x4142 <u8x8_cad_SendArg>
    4806:	8d 81       	ldd	r24, Y+5	; 0x05
    4808:	9e 81       	ldd	r25, Y+6	; 0x06
    480a:	0e 94 fa 20 	call	0x41f4	; 0x41f4 <u8x8_cad_EndTransfer>
    480e:	02 c0       	rjmp	.+4      	; 0x4814 <u8x8_d_st7565_common+0x162>
    4810:	80 e0       	ldi	r24, 0x00	; 0
    4812:	01 c0       	rjmp	.+2      	; 0x4816 <u8x8_d_st7565_common+0x164>
    4814:	81 e0       	ldi	r24, 0x01	; 1
    4816:	2a 96       	adiw	r28, 0x0a	; 10
    4818:	0f b6       	in	r0, 0x3f	; 63
    481a:	f8 94       	cli
    481c:	de bf       	out	0x3e, r29	; 62
    481e:	0f be       	out	0x3f, r0	; 63
    4820:	cd bf       	out	0x3d, r28	; 61
    4822:	df 91       	pop	r29
    4824:	cf 91       	pop	r28
    4826:	08 95       	ret

00004828 <u8x8_d_st7565_zolen_128x64>:
  U8X8_END_TRANSFER(),             	/* disable chip */
  U8X8_END()             			/* end of sequence */
};

uint8_t u8x8_d_st7565_zolen_128x64(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    4828:	cf 93       	push	r28
    482a:	df 93       	push	r29
    482c:	00 d0       	rcall	.+0      	; 0x482e <u8x8_d_st7565_zolen_128x64+0x6>
    482e:	00 d0       	rcall	.+0      	; 0x4830 <u8x8_d_st7565_zolen_128x64+0x8>
    4830:	00 d0       	rcall	.+0      	; 0x4832 <u8x8_d_st7565_zolen_128x64+0xa>
    4832:	cd b7       	in	r28, 0x3d	; 61
    4834:	de b7       	in	r29, 0x3e	; 62
    4836:	9a 83       	std	Y+2, r25	; 0x02
    4838:	89 83       	std	Y+1, r24	; 0x01
    483a:	6b 83       	std	Y+3, r22	; 0x03
    483c:	4c 83       	std	Y+4, r20	; 0x04
    483e:	3e 83       	std	Y+6, r19	; 0x06
    4840:	2d 83       	std	Y+5, r18	; 0x05
  /* call common procedure first and handle messages there */
  if ( u8x8_d_st7565_common(u8x8, msg, arg_int, arg_ptr) == 0 )
    4842:	2d 81       	ldd	r18, Y+5	; 0x05
    4844:	3e 81       	ldd	r19, Y+6	; 0x06
    4846:	89 81       	ldd	r24, Y+1	; 0x01
    4848:	9a 81       	ldd	r25, Y+2	; 0x02
    484a:	4c 81       	ldd	r20, Y+4	; 0x04
    484c:	6b 81       	ldd	r22, Y+3	; 0x03
    484e:	0e 94 59 23 	call	0x46b2	; 0x46b2 <u8x8_d_st7565_common>
    4852:	88 23       	and	r24, r24
    4854:	09 f0       	breq	.+2      	; 0x4858 <u8x8_d_st7565_zolen_128x64+0x30>
    4856:	46 c0       	rjmp	.+140    	; 0x48e4 <u8x8_d_st7565_zolen_128x64+0xbc>
  {
    /* msg not handled, then try here */
    switch(msg)
    4858:	8b 81       	ldd	r24, Y+3	; 0x03
    485a:	88 2f       	mov	r24, r24
    485c:	90 e0       	ldi	r25, 0x00	; 0
    485e:	8a 30       	cpi	r24, 0x0A	; 10
    4860:	91 05       	cpc	r25, r1
    4862:	61 f0       	breq	.+24     	; 0x487c <u8x8_d_st7565_zolen_128x64+0x54>
    4864:	8d 30       	cpi	r24, 0x0D	; 13
    4866:	91 05       	cpc	r25, r1
    4868:	a1 f0       	breq	.+40     	; 0x4892 <u8x8_d_st7565_zolen_128x64+0x6a>
    486a:	09 97       	sbiw	r24, 0x09	; 9
    486c:	c9 f5       	brne	.+114    	; 0x48e0 <u8x8_d_st7565_zolen_128x64+0xb8>
    {
      case U8X8_MSG_DISPLAY_SETUP_MEMORY:
	u8x8_d_helper_display_setup_memory(u8x8, &u8x8_st7565_128x64_display_info);
    486e:	89 81       	ldd	r24, Y+1	; 0x01
    4870:	9a 81       	ldd	r25, Y+2	; 0x02
    4872:	6b e5       	ldi	r22, 0x5B	; 91
    4874:	72 e0       	ldi	r23, 0x02	; 2
    4876:	0e 94 ee 21 	call	0x43dc	; 0x43dc <u8x8_d_helper_display_setup_memory>
	break;
    487a:	34 c0       	rjmp	.+104    	; 0x48e4 <u8x8_d_st7565_zolen_128x64+0xbc>
      case U8X8_MSG_DISPLAY_INIT:
	u8x8_d_helper_display_init(u8x8);
    487c:	89 81       	ldd	r24, Y+1	; 0x01
    487e:	9a 81       	ldd	r25, Y+2	; 0x02
    4880:	0e 94 12 22 	call	0x4424	; 0x4424 <u8x8_d_helper_display_init>
	u8x8_cad_SendSequence(u8x8, u8x8_d_st7565_zolen_128x64_init_seq);
    4884:	89 81       	ldd	r24, Y+1	; 0x01
    4886:	9a 81       	ldd	r25, Y+2	; 0x02
    4888:	63 e7       	ldi	r22, 0x73	; 115
    488a:	72 e0       	ldi	r23, 0x02	; 2
    488c:	0e 94 14 21 	call	0x4228	; 0x4228 <u8x8_cad_SendSequence>
	break;
    4890:	29 c0       	rjmp	.+82     	; 0x48e4 <u8x8_d_st7565_zolen_128x64+0xbc>
      case U8X8_MSG_DISPLAY_SET_FLIP_MODE:
	if ( arg_int == 0 )
    4892:	8c 81       	ldd	r24, Y+4	; 0x04
    4894:	88 23       	and	r24, r24
    4896:	91 f4       	brne	.+36     	; 0x48bc <u8x8_d_st7565_zolen_128x64+0x94>
	{
	  u8x8_cad_SendSequence(u8x8, u8x8_d_st7565_zflip0_seq);
    4898:	89 81       	ldd	r24, Y+1	; 0x01
    489a:	9a 81       	ldd	r25, Y+2	; 0x02
    489c:	6d e4       	ldi	r22, 0x4D	; 77
    489e:	72 e0       	ldi	r23, 0x02	; 2
    48a0:	0e 94 14 21 	call	0x4228	; 0x4228 <u8x8_cad_SendSequence>
	  u8x8->x_offset = u8x8->display_info->default_x_offset;
    48a4:	89 81       	ldd	r24, Y+1	; 0x01
    48a6:	9a 81       	ldd	r25, Y+2	; 0x02
    48a8:	fc 01       	movw	r30, r24
    48aa:	80 81       	ld	r24, Z
    48ac:	91 81       	ldd	r25, Z+1	; 0x01
    48ae:	fc 01       	movw	r30, r24
    48b0:	22 89       	ldd	r18, Z+18	; 0x12
    48b2:	89 81       	ldd	r24, Y+1	; 0x01
    48b4:	9a 81       	ldd	r25, Y+2	; 0x02
    48b6:	fc 01       	movw	r30, r24
    48b8:	24 8b       	std	Z+20, r18	; 0x14
	else
	{
	  u8x8_cad_SendSequence(u8x8, u8x8_d_st7565_zflip1_seq);
	  u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
	}	
	break;
    48ba:	14 c0       	rjmp	.+40     	; 0x48e4 <u8x8_d_st7565_zolen_128x64+0xbc>
	  u8x8_cad_SendSequence(u8x8, u8x8_d_st7565_zflip0_seq);
	  u8x8->x_offset = u8x8->display_info->default_x_offset;
	}
	else
	{
	  u8x8_cad_SendSequence(u8x8, u8x8_d_st7565_zflip1_seq);
    48bc:	89 81       	ldd	r24, Y+1	; 0x01
    48be:	9a 81       	ldd	r25, Y+2	; 0x02
    48c0:	64 e5       	ldi	r22, 0x54	; 84
    48c2:	72 e0       	ldi	r23, 0x02	; 2
    48c4:	0e 94 14 21 	call	0x4228	; 0x4228 <u8x8_cad_SendSequence>
	  u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
    48c8:	89 81       	ldd	r24, Y+1	; 0x01
    48ca:	9a 81       	ldd	r25, Y+2	; 0x02
    48cc:	fc 01       	movw	r30, r24
    48ce:	80 81       	ld	r24, Z
    48d0:	91 81       	ldd	r25, Z+1	; 0x01
    48d2:	fc 01       	movw	r30, r24
    48d4:	23 89       	ldd	r18, Z+19	; 0x13
    48d6:	89 81       	ldd	r24, Y+1	; 0x01
    48d8:	9a 81       	ldd	r25, Y+2	; 0x02
    48da:	fc 01       	movw	r30, r24
    48dc:	24 8b       	std	Z+20, r18	; 0x14
	}	
	break;
    48de:	02 c0       	rjmp	.+4      	; 0x48e4 <u8x8_d_st7565_zolen_128x64+0xbc>
      default:
	return 0;		/* msg unknown */
    48e0:	80 e0       	ldi	r24, 0x00	; 0
    48e2:	01 c0       	rjmp	.+2      	; 0x48e6 <u8x8_d_st7565_zolen_128x64+0xbe>
    }
  }
  return 1;
    48e4:	81 e0       	ldi	r24, 0x01	; 1
}
    48e6:	26 96       	adiw	r28, 0x06	; 6
    48e8:	0f b6       	in	r0, 0x3f	; 63
    48ea:	f8 94       	cli
    48ec:	de bf       	out	0x3e, r29	; 62
    48ee:	0f be       	out	0x3f, r0	; 63
    48f0:	cd bf       	out	0x3d, r28	; 61
    48f2:	df 91       	pop	r29
    48f4:	cf 91       	pop	r28
    48f6:	08 95       	ret

000048f8 <u8x8_gpio_call>:

#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
    48f8:	cf 93       	push	r28
    48fa:	df 93       	push	r29
    48fc:	00 d0       	rcall	.+0      	; 0x48fe <u8x8_gpio_call+0x6>
    48fe:	00 d0       	rcall	.+0      	; 0x4900 <u8x8_gpio_call+0x8>
    4900:	cd b7       	in	r28, 0x3d	; 61
    4902:	de b7       	in	r29, 0x3e	; 62
    4904:	9a 83       	std	Y+2, r25	; 0x02
    4906:	89 83       	std	Y+1, r24	; 0x01
    4908:	6b 83       	std	Y+3, r22	; 0x03
    490a:	4c 83       	std	Y+4, r20	; 0x04
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    490c:	89 81       	ldd	r24, Y+1	; 0x01
    490e:	9a 81       	ldd	r25, Y+2	; 0x02
    4910:	dc 01       	movw	r26, r24
    4912:	1a 96       	adiw	r26, 0x0a	; 10
    4914:	ed 91       	ld	r30, X+
    4916:	fc 91       	ld	r31, X
    4918:	1b 97       	sbiw	r26, 0x0b	; 11
    491a:	89 81       	ldd	r24, Y+1	; 0x01
    491c:	9a 81       	ldd	r25, Y+2	; 0x02
    491e:	20 e0       	ldi	r18, 0x00	; 0
    4920:	30 e0       	ldi	r19, 0x00	; 0
    4922:	4c 81       	ldd	r20, Y+4	; 0x04
    4924:	6b 81       	ldd	r22, Y+3	; 0x03
    4926:	09 95       	icall
}
    4928:	00 00       	nop
    492a:	0f 90       	pop	r0
    492c:	0f 90       	pop	r0
    492e:	0f 90       	pop	r0
    4930:	0f 90       	pop	r0
    4932:	df 91       	pop	r29
    4934:	cf 91       	pop	r28
    4936:	08 95       	ret

00004938 <u8x8_dummy_cb>:
      u8x8_d_helper_display_init(u8x8);
      break;
  }
  /* the null device callback will succeed for all messages */
  return 1;
}
    4938:	cf 93       	push	r28
    493a:	df 93       	push	r29
    493c:	00 d0       	rcall	.+0      	; 0x493e <u8x8_dummy_cb+0x6>
    493e:	00 d0       	rcall	.+0      	; 0x4940 <u8x8_dummy_cb+0x8>
    4940:	00 d0       	rcall	.+0      	; 0x4942 <u8x8_dummy_cb+0xa>
    4942:	cd b7       	in	r28, 0x3d	; 61
    4944:	de b7       	in	r29, 0x3e	; 62
    4946:	9a 83       	std	Y+2, r25	; 0x02
    4948:	89 83       	std	Y+1, r24	; 0x01
    494a:	6b 83       	std	Y+3, r22	; 0x03
    494c:	4c 83       	std	Y+4, r20	; 0x04
    494e:	3e 83       	std	Y+6, r19	; 0x06
    4950:	2d 83       	std	Y+5, r18	; 0x05
    4952:	80 e0       	ldi	r24, 0x00	; 0
    4954:	26 96       	adiw	r28, 0x06	; 6
    4956:	0f b6       	in	r0, 0x3f	; 63
    4958:	f8 94       	cli
    495a:	de bf       	out	0x3e, r29	; 62
    495c:	0f be       	out	0x3f, r0	; 63
    495e:	cd bf       	out	0x3d, r28	; 61
    4960:	df 91       	pop	r29
    4962:	cf 91       	pop	r28
    4964:	08 95       	ret

00004966 <u8x8_SetupDefaults>:
    Setup u8x8
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    4966:	cf 93       	push	r28
    4968:	df 93       	push	r29
    496a:	00 d0       	rcall	.+0      	; 0x496c <u8x8_SetupDefaults+0x6>
    496c:	cd b7       	in	r28, 0x3d	; 61
    496e:	de b7       	in	r29, 0x3e	; 62
    4970:	9a 83       	std	Y+2, r25	; 0x02
    4972:	89 83       	std	Y+1, r24	; 0x01
    u8x8->display_info = NULL;
    4974:	89 81       	ldd	r24, Y+1	; 0x01
    4976:	9a 81       	ldd	r25, Y+2	; 0x02
    4978:	fc 01       	movw	r30, r24
    497a:	11 82       	std	Z+1, r1	; 0x01
    497c:	10 82       	st	Z, r1
    u8x8->display_cb = u8x8_dummy_cb;
    497e:	89 81       	ldd	r24, Y+1	; 0x01
    4980:	9a 81       	ldd	r25, Y+2	; 0x02
    4982:	2c e9       	ldi	r18, 0x9C	; 156
    4984:	34 e2       	ldi	r19, 0x24	; 36
    4986:	fc 01       	movw	r30, r24
    4988:	35 83       	std	Z+5, r19	; 0x05
    498a:	24 83       	std	Z+4, r18	; 0x04
    u8x8->cad_cb = u8x8_dummy_cb;
    498c:	89 81       	ldd	r24, Y+1	; 0x01
    498e:	9a 81       	ldd	r25, Y+2	; 0x02
    4990:	2c e9       	ldi	r18, 0x9C	; 156
    4992:	34 e2       	ldi	r19, 0x24	; 36
    4994:	fc 01       	movw	r30, r24
    4996:	37 83       	std	Z+7, r19	; 0x07
    4998:	26 83       	std	Z+6, r18	; 0x06
    u8x8->byte_cb = u8x8_dummy_cb;
    499a:	89 81       	ldd	r24, Y+1	; 0x01
    499c:	9a 81       	ldd	r25, Y+2	; 0x02
    499e:	2c e9       	ldi	r18, 0x9C	; 156
    49a0:	34 e2       	ldi	r19, 0x24	; 36
    49a2:	fc 01       	movw	r30, r24
    49a4:	31 87       	std	Z+9, r19	; 0x09
    49a6:	20 87       	std	Z+8, r18	; 0x08
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    49a8:	89 81       	ldd	r24, Y+1	; 0x01
    49aa:	9a 81       	ldd	r25, Y+2	; 0x02
    49ac:	2c e9       	ldi	r18, 0x9C	; 156
    49ae:	34 e2       	ldi	r19, 0x24	; 36
    49b0:	fc 01       	movw	r30, r24
    49b2:	33 87       	std	Z+11, r19	; 0x0b
    49b4:	22 87       	std	Z+10, r18	; 0x0a
    u8x8->is_font_inverse_mode = 0;
    49b6:	89 81       	ldd	r24, Y+1	; 0x01
    49b8:	9a 81       	ldd	r25, Y+2	; 0x02
    49ba:	fc 01       	movw	r30, r24
    49bc:	15 8a       	std	Z+21, r1	; 0x15
    //u8x8->device_address = 0;
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    49be:	89 81       	ldd	r24, Y+1	; 0x01
    49c0:	9a 81       	ldd	r25, Y+2	; 0x02
    49c2:	fc 01       	movw	r30, r24
    49c4:	10 8e       	std	Z+24, r1	; 0x18
    u8x8->bus_clock = 0;		/* issue 769 */
    49c6:	89 81       	ldd	r24, Y+1	; 0x01
    49c8:	9a 81       	ldd	r25, Y+2	; 0x02
    49ca:	fc 01       	movw	r30, r24
    49cc:	14 86       	std	Z+12, r1	; 0x0c
    49ce:	15 86       	std	Z+13, r1	; 0x0d
    49d0:	16 86       	std	Z+14, r1	; 0x0e
    49d2:	17 86       	std	Z+15, r1	; 0x0f
    u8x8->i2c_address = 255;
    49d4:	89 81       	ldd	r24, Y+1	; 0x01
    49d6:	9a 81       	ldd	r25, Y+2	; 0x02
    49d8:	2f ef       	ldi	r18, 0xFF	; 255
    49da:	fc 01       	movw	r30, r24
    49dc:	26 8b       	std	Z+22, r18	; 0x16
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    49de:	89 81       	ldd	r24, Y+1	; 0x01
    49e0:	9a 81       	ldd	r25, Y+2	; 0x02
    49e2:	2f ef       	ldi	r18, 0xFF	; 255
    49e4:	fc 01       	movw	r30, r24
    49e6:	22 8f       	std	Z+26, r18	; 0x1a
    uint8_t i;
    for( i = 0; i < U8X8_PIN_CNT; i++ )
      u8x8->pins[i] = U8X8_PIN_NONE;
  }
#endif
}
    49e8:	00 00       	nop
    49ea:	0f 90       	pop	r0
    49ec:	0f 90       	pop	r0
    49ee:	df 91       	pop	r29
    49f0:	cf 91       	pop	r28
    49f2:	08 95       	ret

000049f4 <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    49f4:	0f 93       	push	r16
    49f6:	1f 93       	push	r17
    49f8:	cf 93       	push	r28
    49fa:	df 93       	push	r29
    49fc:	cd b7       	in	r28, 0x3d	; 61
    49fe:	de b7       	in	r29, 0x3e	; 62
    4a00:	2a 97       	sbiw	r28, 0x0a	; 10
    4a02:	0f b6       	in	r0, 0x3f	; 63
    4a04:	f8 94       	cli
    4a06:	de bf       	out	0x3e, r29	; 62
    4a08:	0f be       	out	0x3f, r0	; 63
    4a0a:	cd bf       	out	0x3d, r28	; 61
    4a0c:	9a 83       	std	Y+2, r25	; 0x02
    4a0e:	89 83       	std	Y+1, r24	; 0x01
    4a10:	7c 83       	std	Y+4, r23	; 0x04
    4a12:	6b 83       	std	Y+3, r22	; 0x03
    4a14:	5e 83       	std	Y+6, r21	; 0x06
    4a16:	4d 83       	std	Y+5, r20	; 0x05
    4a18:	38 87       	std	Y+8, r19	; 0x08
    4a1a:	2f 83       	std	Y+7, r18	; 0x07
    4a1c:	1a 87       	std	Y+10, r17	; 0x0a
    4a1e:	09 87       	std	Y+9, r16	; 0x09
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    4a20:	89 81       	ldd	r24, Y+1	; 0x01
    4a22:	9a 81       	ldd	r25, Y+2	; 0x02
    4a24:	0e 94 b3 24 	call	0x4966	; 0x4966 <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    4a28:	89 81       	ldd	r24, Y+1	; 0x01
    4a2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a2c:	2b 81       	ldd	r18, Y+3	; 0x03
    4a2e:	3c 81       	ldd	r19, Y+4	; 0x04
    4a30:	fc 01       	movw	r30, r24
    4a32:	35 83       	std	Z+5, r19	; 0x05
    4a34:	24 83       	std	Z+4, r18	; 0x04
  u8x8->cad_cb = cad_cb;
    4a36:	89 81       	ldd	r24, Y+1	; 0x01
    4a38:	9a 81       	ldd	r25, Y+2	; 0x02
    4a3a:	2d 81       	ldd	r18, Y+5	; 0x05
    4a3c:	3e 81       	ldd	r19, Y+6	; 0x06
    4a3e:	fc 01       	movw	r30, r24
    4a40:	37 83       	std	Z+7, r19	; 0x07
    4a42:	26 83       	std	Z+6, r18	; 0x06
  u8x8->byte_cb = byte_cb;
    4a44:	89 81       	ldd	r24, Y+1	; 0x01
    4a46:	9a 81       	ldd	r25, Y+2	; 0x02
    4a48:	2f 81       	ldd	r18, Y+7	; 0x07
    4a4a:	38 85       	ldd	r19, Y+8	; 0x08
    4a4c:	fc 01       	movw	r30, r24
    4a4e:	31 87       	std	Z+9, r19	; 0x09
    4a50:	20 87       	std	Z+8, r18	; 0x08
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    4a52:	89 81       	ldd	r24, Y+1	; 0x01
    4a54:	9a 81       	ldd	r25, Y+2	; 0x02
    4a56:	29 85       	ldd	r18, Y+9	; 0x09
    4a58:	3a 85       	ldd	r19, Y+10	; 0x0a
    4a5a:	fc 01       	movw	r30, r24
    4a5c:	33 87       	std	Z+11, r19	; 0x0b
    4a5e:	22 87       	std	Z+10, r18	; 0x0a

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    4a60:	89 81       	ldd	r24, Y+1	; 0x01
    4a62:	9a 81       	ldd	r25, Y+2	; 0x02
    4a64:	0e 94 ae 22 	call	0x455c	; 0x455c <u8x8_SetupMemory>
}
    4a68:	00 00       	nop
    4a6a:	2a 96       	adiw	r28, 0x0a	; 10
    4a6c:	0f b6       	in	r0, 0x3f	; 63
    4a6e:	f8 94       	cli
    4a70:	de bf       	out	0x3e, r29	; 62
    4a72:	0f be       	out	0x3f, r0	; 63
    4a74:	cd bf       	out	0x3d, r28	; 61
    4a76:	df 91       	pop	r29
    4a78:	cf 91       	pop	r28
    4a7a:	1f 91       	pop	r17
    4a7c:	0f 91       	pop	r16
    4a7e:	08 95       	ret

00004a80 <__cmpsf2>:
    4a80:	0e 94 b1 25 	call	0x4b62	; 0x4b62 <__fp_cmp>
    4a84:	08 f4       	brcc	.+2      	; 0x4a88 <__cmpsf2+0x8>
    4a86:	81 e0       	ldi	r24, 0x01	; 1
    4a88:	08 95       	ret

00004a8a <__fixunssfsi>:
    4a8a:	0e 94 dd 25 	call	0x4bba	; 0x4bba <__fp_splitA>
    4a8e:	88 f0       	brcs	.+34     	; 0x4ab2 <__fixunssfsi+0x28>
    4a90:	9f 57       	subi	r25, 0x7F	; 127
    4a92:	98 f0       	brcs	.+38     	; 0x4aba <__fixunssfsi+0x30>
    4a94:	b9 2f       	mov	r27, r25
    4a96:	99 27       	eor	r25, r25
    4a98:	b7 51       	subi	r27, 0x17	; 23
    4a9a:	b0 f0       	brcs	.+44     	; 0x4ac8 <__fixunssfsi+0x3e>
    4a9c:	e1 f0       	breq	.+56     	; 0x4ad6 <__fixunssfsi+0x4c>
    4a9e:	66 0f       	add	r22, r22
    4aa0:	77 1f       	adc	r23, r23
    4aa2:	88 1f       	adc	r24, r24
    4aa4:	99 1f       	adc	r25, r25
    4aa6:	1a f0       	brmi	.+6      	; 0x4aae <__fixunssfsi+0x24>
    4aa8:	ba 95       	dec	r27
    4aaa:	c9 f7       	brne	.-14     	; 0x4a9e <__fixunssfsi+0x14>
    4aac:	14 c0       	rjmp	.+40     	; 0x4ad6 <__fixunssfsi+0x4c>
    4aae:	b1 30       	cpi	r27, 0x01	; 1
    4ab0:	91 f0       	breq	.+36     	; 0x4ad6 <__fixunssfsi+0x4c>
    4ab2:	0e 94 f7 25 	call	0x4bee	; 0x4bee <__fp_zero>
    4ab6:	b1 e0       	ldi	r27, 0x01	; 1
    4ab8:	08 95       	ret
    4aba:	0c 94 f7 25 	jmp	0x4bee	; 0x4bee <__fp_zero>
    4abe:	67 2f       	mov	r22, r23
    4ac0:	78 2f       	mov	r23, r24
    4ac2:	88 27       	eor	r24, r24
    4ac4:	b8 5f       	subi	r27, 0xF8	; 248
    4ac6:	39 f0       	breq	.+14     	; 0x4ad6 <__fixunssfsi+0x4c>
    4ac8:	b9 3f       	cpi	r27, 0xF9	; 249
    4aca:	cc f3       	brlt	.-14     	; 0x4abe <__fixunssfsi+0x34>
    4acc:	86 95       	lsr	r24
    4ace:	77 95       	ror	r23
    4ad0:	67 95       	ror	r22
    4ad2:	b3 95       	inc	r27
    4ad4:	d9 f7       	brne	.-10     	; 0x4acc <__fixunssfsi+0x42>
    4ad6:	3e f4       	brtc	.+14     	; 0x4ae6 <__fixunssfsi+0x5c>
    4ad8:	90 95       	com	r25
    4ada:	80 95       	com	r24
    4adc:	70 95       	com	r23
    4ade:	61 95       	neg	r22
    4ae0:	7f 4f       	sbci	r23, 0xFF	; 255
    4ae2:	8f 4f       	sbci	r24, 0xFF	; 255
    4ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    4ae6:	08 95       	ret

00004ae8 <__floatunsisf>:
    4ae8:	e8 94       	clt
    4aea:	09 c0       	rjmp	.+18     	; 0x4afe <__floatsisf+0x12>

00004aec <__floatsisf>:
    4aec:	97 fb       	bst	r25, 7
    4aee:	3e f4       	brtc	.+14     	; 0x4afe <__floatsisf+0x12>
    4af0:	90 95       	com	r25
    4af2:	80 95       	com	r24
    4af4:	70 95       	com	r23
    4af6:	61 95       	neg	r22
    4af8:	7f 4f       	sbci	r23, 0xFF	; 255
    4afa:	8f 4f       	sbci	r24, 0xFF	; 255
    4afc:	9f 4f       	sbci	r25, 0xFF	; 255
    4afe:	99 23       	and	r25, r25
    4b00:	a9 f0       	breq	.+42     	; 0x4b2c <__floatsisf+0x40>
    4b02:	f9 2f       	mov	r31, r25
    4b04:	96 e9       	ldi	r25, 0x96	; 150
    4b06:	bb 27       	eor	r27, r27
    4b08:	93 95       	inc	r25
    4b0a:	f6 95       	lsr	r31
    4b0c:	87 95       	ror	r24
    4b0e:	77 95       	ror	r23
    4b10:	67 95       	ror	r22
    4b12:	b7 95       	ror	r27
    4b14:	f1 11       	cpse	r31, r1
    4b16:	f8 cf       	rjmp	.-16     	; 0x4b08 <__floatsisf+0x1c>
    4b18:	fa f4       	brpl	.+62     	; 0x4b58 <__floatsisf+0x6c>
    4b1a:	bb 0f       	add	r27, r27
    4b1c:	11 f4       	brne	.+4      	; 0x4b22 <__floatsisf+0x36>
    4b1e:	60 ff       	sbrs	r22, 0
    4b20:	1b c0       	rjmp	.+54     	; 0x4b58 <__floatsisf+0x6c>
    4b22:	6f 5f       	subi	r22, 0xFF	; 255
    4b24:	7f 4f       	sbci	r23, 0xFF	; 255
    4b26:	8f 4f       	sbci	r24, 0xFF	; 255
    4b28:	9f 4f       	sbci	r25, 0xFF	; 255
    4b2a:	16 c0       	rjmp	.+44     	; 0x4b58 <__floatsisf+0x6c>
    4b2c:	88 23       	and	r24, r24
    4b2e:	11 f0       	breq	.+4      	; 0x4b34 <__floatsisf+0x48>
    4b30:	96 e9       	ldi	r25, 0x96	; 150
    4b32:	11 c0       	rjmp	.+34     	; 0x4b56 <__floatsisf+0x6a>
    4b34:	77 23       	and	r23, r23
    4b36:	21 f0       	breq	.+8      	; 0x4b40 <__floatsisf+0x54>
    4b38:	9e e8       	ldi	r25, 0x8E	; 142
    4b3a:	87 2f       	mov	r24, r23
    4b3c:	76 2f       	mov	r23, r22
    4b3e:	05 c0       	rjmp	.+10     	; 0x4b4a <__floatsisf+0x5e>
    4b40:	66 23       	and	r22, r22
    4b42:	71 f0       	breq	.+28     	; 0x4b60 <__floatsisf+0x74>
    4b44:	96 e8       	ldi	r25, 0x86	; 134
    4b46:	86 2f       	mov	r24, r22
    4b48:	70 e0       	ldi	r23, 0x00	; 0
    4b4a:	60 e0       	ldi	r22, 0x00	; 0
    4b4c:	2a f0       	brmi	.+10     	; 0x4b58 <__floatsisf+0x6c>
    4b4e:	9a 95       	dec	r25
    4b50:	66 0f       	add	r22, r22
    4b52:	77 1f       	adc	r23, r23
    4b54:	88 1f       	adc	r24, r24
    4b56:	da f7       	brpl	.-10     	; 0x4b4e <__floatsisf+0x62>
    4b58:	88 0f       	add	r24, r24
    4b5a:	96 95       	lsr	r25
    4b5c:	87 95       	ror	r24
    4b5e:	97 f9       	bld	r25, 7
    4b60:	08 95       	ret

00004b62 <__fp_cmp>:
    4b62:	99 0f       	add	r25, r25
    4b64:	00 08       	sbc	r0, r0
    4b66:	55 0f       	add	r21, r21
    4b68:	aa 0b       	sbc	r26, r26
    4b6a:	e0 e8       	ldi	r30, 0x80	; 128
    4b6c:	fe ef       	ldi	r31, 0xFE	; 254
    4b6e:	16 16       	cp	r1, r22
    4b70:	17 06       	cpc	r1, r23
    4b72:	e8 07       	cpc	r30, r24
    4b74:	f9 07       	cpc	r31, r25
    4b76:	c0 f0       	brcs	.+48     	; 0x4ba8 <__fp_cmp+0x46>
    4b78:	12 16       	cp	r1, r18
    4b7a:	13 06       	cpc	r1, r19
    4b7c:	e4 07       	cpc	r30, r20
    4b7e:	f5 07       	cpc	r31, r21
    4b80:	98 f0       	brcs	.+38     	; 0x4ba8 <__fp_cmp+0x46>
    4b82:	62 1b       	sub	r22, r18
    4b84:	73 0b       	sbc	r23, r19
    4b86:	84 0b       	sbc	r24, r20
    4b88:	95 0b       	sbc	r25, r21
    4b8a:	39 f4       	brne	.+14     	; 0x4b9a <__fp_cmp+0x38>
    4b8c:	0a 26       	eor	r0, r26
    4b8e:	61 f0       	breq	.+24     	; 0x4ba8 <__fp_cmp+0x46>
    4b90:	23 2b       	or	r18, r19
    4b92:	24 2b       	or	r18, r20
    4b94:	25 2b       	or	r18, r21
    4b96:	21 f4       	brne	.+8      	; 0x4ba0 <__fp_cmp+0x3e>
    4b98:	08 95       	ret
    4b9a:	0a 26       	eor	r0, r26
    4b9c:	09 f4       	brne	.+2      	; 0x4ba0 <__fp_cmp+0x3e>
    4b9e:	a1 40       	sbci	r26, 0x01	; 1
    4ba0:	a6 95       	lsr	r26
    4ba2:	8f ef       	ldi	r24, 0xFF	; 255
    4ba4:	81 1d       	adc	r24, r1
    4ba6:	81 1d       	adc	r24, r1
    4ba8:	08 95       	ret

00004baa <__fp_split3>:
    4baa:	57 fd       	sbrc	r21, 7
    4bac:	90 58       	subi	r25, 0x80	; 128
    4bae:	44 0f       	add	r20, r20
    4bb0:	55 1f       	adc	r21, r21
    4bb2:	59 f0       	breq	.+22     	; 0x4bca <__fp_splitA+0x10>
    4bb4:	5f 3f       	cpi	r21, 0xFF	; 255
    4bb6:	71 f0       	breq	.+28     	; 0x4bd4 <__fp_splitA+0x1a>
    4bb8:	47 95       	ror	r20

00004bba <__fp_splitA>:
    4bba:	88 0f       	add	r24, r24
    4bbc:	97 fb       	bst	r25, 7
    4bbe:	99 1f       	adc	r25, r25
    4bc0:	61 f0       	breq	.+24     	; 0x4bda <__fp_splitA+0x20>
    4bc2:	9f 3f       	cpi	r25, 0xFF	; 255
    4bc4:	79 f0       	breq	.+30     	; 0x4be4 <__fp_splitA+0x2a>
    4bc6:	87 95       	ror	r24
    4bc8:	08 95       	ret
    4bca:	12 16       	cp	r1, r18
    4bcc:	13 06       	cpc	r1, r19
    4bce:	14 06       	cpc	r1, r20
    4bd0:	55 1f       	adc	r21, r21
    4bd2:	f2 cf       	rjmp	.-28     	; 0x4bb8 <__fp_split3+0xe>
    4bd4:	46 95       	lsr	r20
    4bd6:	f1 df       	rcall	.-30     	; 0x4bba <__fp_splitA>
    4bd8:	08 c0       	rjmp	.+16     	; 0x4bea <__fp_splitA+0x30>
    4bda:	16 16       	cp	r1, r22
    4bdc:	17 06       	cpc	r1, r23
    4bde:	18 06       	cpc	r1, r24
    4be0:	99 1f       	adc	r25, r25
    4be2:	f1 cf       	rjmp	.-30     	; 0x4bc6 <__fp_splitA+0xc>
    4be4:	86 95       	lsr	r24
    4be6:	71 05       	cpc	r23, r1
    4be8:	61 05       	cpc	r22, r1
    4bea:	08 94       	sec
    4bec:	08 95       	ret

00004bee <__fp_zero>:
    4bee:	e8 94       	clt

00004bf0 <__fp_szero>:
    4bf0:	bb 27       	eor	r27, r27
    4bf2:	66 27       	eor	r22, r22
    4bf4:	77 27       	eor	r23, r23
    4bf6:	cb 01       	movw	r24, r22
    4bf8:	97 f9       	bld	r25, 7
    4bfa:	08 95       	ret

00004bfc <__gesf2>:
    4bfc:	0e 94 b1 25 	call	0x4b62	; 0x4b62 <__fp_cmp>
    4c00:	08 f4       	brcc	.+2      	; 0x4c04 <__gesf2+0x8>
    4c02:	8f ef       	ldi	r24, 0xFF	; 255
    4c04:	08 95       	ret

00004c06 <__mulsf3>:
    4c06:	0e 94 16 26 	call	0x4c2c	; 0x4c2c <__mulsf3x>
    4c0a:	0c 94 87 26 	jmp	0x4d0e	; 0x4d0e <__fp_round>
    4c0e:	0e 94 79 26 	call	0x4cf2	; 0x4cf2 <__fp_pscA>
    4c12:	38 f0       	brcs	.+14     	; 0x4c22 <__mulsf3+0x1c>
    4c14:	0e 94 80 26 	call	0x4d00	; 0x4d00 <__fp_pscB>
    4c18:	20 f0       	brcs	.+8      	; 0x4c22 <__mulsf3+0x1c>
    4c1a:	95 23       	and	r25, r21
    4c1c:	11 f0       	breq	.+4      	; 0x4c22 <__mulsf3+0x1c>
    4c1e:	0c 94 70 26 	jmp	0x4ce0	; 0x4ce0 <__fp_inf>
    4c22:	0c 94 76 26 	jmp	0x4cec	; 0x4cec <__fp_nan>
    4c26:	11 24       	eor	r1, r1
    4c28:	0c 94 f8 25 	jmp	0x4bf0	; 0x4bf0 <__fp_szero>

00004c2c <__mulsf3x>:
    4c2c:	0e 94 d5 25 	call	0x4baa	; 0x4baa <__fp_split3>
    4c30:	70 f3       	brcs	.-36     	; 0x4c0e <__mulsf3+0x8>

00004c32 <__mulsf3_pse>:
    4c32:	95 9f       	mul	r25, r21
    4c34:	c1 f3       	breq	.-16     	; 0x4c26 <__mulsf3+0x20>
    4c36:	95 0f       	add	r25, r21
    4c38:	50 e0       	ldi	r21, 0x00	; 0
    4c3a:	55 1f       	adc	r21, r21
    4c3c:	62 9f       	mul	r22, r18
    4c3e:	f0 01       	movw	r30, r0
    4c40:	72 9f       	mul	r23, r18
    4c42:	bb 27       	eor	r27, r27
    4c44:	f0 0d       	add	r31, r0
    4c46:	b1 1d       	adc	r27, r1
    4c48:	63 9f       	mul	r22, r19
    4c4a:	aa 27       	eor	r26, r26
    4c4c:	f0 0d       	add	r31, r0
    4c4e:	b1 1d       	adc	r27, r1
    4c50:	aa 1f       	adc	r26, r26
    4c52:	64 9f       	mul	r22, r20
    4c54:	66 27       	eor	r22, r22
    4c56:	b0 0d       	add	r27, r0
    4c58:	a1 1d       	adc	r26, r1
    4c5a:	66 1f       	adc	r22, r22
    4c5c:	82 9f       	mul	r24, r18
    4c5e:	22 27       	eor	r18, r18
    4c60:	b0 0d       	add	r27, r0
    4c62:	a1 1d       	adc	r26, r1
    4c64:	62 1f       	adc	r22, r18
    4c66:	73 9f       	mul	r23, r19
    4c68:	b0 0d       	add	r27, r0
    4c6a:	a1 1d       	adc	r26, r1
    4c6c:	62 1f       	adc	r22, r18
    4c6e:	83 9f       	mul	r24, r19
    4c70:	a0 0d       	add	r26, r0
    4c72:	61 1d       	adc	r22, r1
    4c74:	22 1f       	adc	r18, r18
    4c76:	74 9f       	mul	r23, r20
    4c78:	33 27       	eor	r19, r19
    4c7a:	a0 0d       	add	r26, r0
    4c7c:	61 1d       	adc	r22, r1
    4c7e:	23 1f       	adc	r18, r19
    4c80:	84 9f       	mul	r24, r20
    4c82:	60 0d       	add	r22, r0
    4c84:	21 1d       	adc	r18, r1
    4c86:	82 2f       	mov	r24, r18
    4c88:	76 2f       	mov	r23, r22
    4c8a:	6a 2f       	mov	r22, r26
    4c8c:	11 24       	eor	r1, r1
    4c8e:	9f 57       	subi	r25, 0x7F	; 127
    4c90:	50 40       	sbci	r21, 0x00	; 0
    4c92:	9a f0       	brmi	.+38     	; 0x4cba <__mulsf3_pse+0x88>
    4c94:	f1 f0       	breq	.+60     	; 0x4cd2 <__mulsf3_pse+0xa0>
    4c96:	88 23       	and	r24, r24
    4c98:	4a f0       	brmi	.+18     	; 0x4cac <__mulsf3_pse+0x7a>
    4c9a:	ee 0f       	add	r30, r30
    4c9c:	ff 1f       	adc	r31, r31
    4c9e:	bb 1f       	adc	r27, r27
    4ca0:	66 1f       	adc	r22, r22
    4ca2:	77 1f       	adc	r23, r23
    4ca4:	88 1f       	adc	r24, r24
    4ca6:	91 50       	subi	r25, 0x01	; 1
    4ca8:	50 40       	sbci	r21, 0x00	; 0
    4caa:	a9 f7       	brne	.-22     	; 0x4c96 <__mulsf3_pse+0x64>
    4cac:	9e 3f       	cpi	r25, 0xFE	; 254
    4cae:	51 05       	cpc	r21, r1
    4cb0:	80 f0       	brcs	.+32     	; 0x4cd2 <__mulsf3_pse+0xa0>
    4cb2:	0c 94 70 26 	jmp	0x4ce0	; 0x4ce0 <__fp_inf>
    4cb6:	0c 94 f8 25 	jmp	0x4bf0	; 0x4bf0 <__fp_szero>
    4cba:	5f 3f       	cpi	r21, 0xFF	; 255
    4cbc:	e4 f3       	brlt	.-8      	; 0x4cb6 <__mulsf3_pse+0x84>
    4cbe:	98 3e       	cpi	r25, 0xE8	; 232
    4cc0:	d4 f3       	brlt	.-12     	; 0x4cb6 <__mulsf3_pse+0x84>
    4cc2:	86 95       	lsr	r24
    4cc4:	77 95       	ror	r23
    4cc6:	67 95       	ror	r22
    4cc8:	b7 95       	ror	r27
    4cca:	f7 95       	ror	r31
    4ccc:	e7 95       	ror	r30
    4cce:	9f 5f       	subi	r25, 0xFF	; 255
    4cd0:	c1 f7       	brne	.-16     	; 0x4cc2 <__mulsf3_pse+0x90>
    4cd2:	fe 2b       	or	r31, r30
    4cd4:	88 0f       	add	r24, r24
    4cd6:	91 1d       	adc	r25, r1
    4cd8:	96 95       	lsr	r25
    4cda:	87 95       	ror	r24
    4cdc:	97 f9       	bld	r25, 7
    4cde:	08 95       	ret

00004ce0 <__fp_inf>:
    4ce0:	97 f9       	bld	r25, 7
    4ce2:	9f 67       	ori	r25, 0x7F	; 127
    4ce4:	80 e8       	ldi	r24, 0x80	; 128
    4ce6:	70 e0       	ldi	r23, 0x00	; 0
    4ce8:	60 e0       	ldi	r22, 0x00	; 0
    4cea:	08 95       	ret

00004cec <__fp_nan>:
    4cec:	9f ef       	ldi	r25, 0xFF	; 255
    4cee:	80 ec       	ldi	r24, 0xC0	; 192
    4cf0:	08 95       	ret

00004cf2 <__fp_pscA>:
    4cf2:	00 24       	eor	r0, r0
    4cf4:	0a 94       	dec	r0
    4cf6:	16 16       	cp	r1, r22
    4cf8:	17 06       	cpc	r1, r23
    4cfa:	18 06       	cpc	r1, r24
    4cfc:	09 06       	cpc	r0, r25
    4cfe:	08 95       	ret

00004d00 <__fp_pscB>:
    4d00:	00 24       	eor	r0, r0
    4d02:	0a 94       	dec	r0
    4d04:	12 16       	cp	r1, r18
    4d06:	13 06       	cpc	r1, r19
    4d08:	14 06       	cpc	r1, r20
    4d0a:	05 06       	cpc	r0, r21
    4d0c:	08 95       	ret

00004d0e <__fp_round>:
    4d0e:	09 2e       	mov	r0, r25
    4d10:	03 94       	inc	r0
    4d12:	00 0c       	add	r0, r0
    4d14:	11 f4       	brne	.+4      	; 0x4d1a <__fp_round+0xc>
    4d16:	88 23       	and	r24, r24
    4d18:	52 f0       	brmi	.+20     	; 0x4d2e <__fp_round+0x20>
    4d1a:	bb 0f       	add	r27, r27
    4d1c:	40 f4       	brcc	.+16     	; 0x4d2e <__fp_round+0x20>
    4d1e:	bf 2b       	or	r27, r31
    4d20:	11 f4       	brne	.+4      	; 0x4d26 <__fp_round+0x18>
    4d22:	60 ff       	sbrs	r22, 0
    4d24:	04 c0       	rjmp	.+8      	; 0x4d2e <__fp_round+0x20>
    4d26:	6f 5f       	subi	r22, 0xFF	; 255
    4d28:	7f 4f       	sbci	r23, 0xFF	; 255
    4d2a:	8f 4f       	sbci	r24, 0xFF	; 255
    4d2c:	9f 4f       	sbci	r25, 0xFF	; 255
    4d2e:	08 95       	ret

00004d30 <__mulsi3>:
    4d30:	db 01       	movw	r26, r22
    4d32:	8f 93       	push	r24
    4d34:	9f 93       	push	r25
    4d36:	0e 94 01 27 	call	0x4e02	; 0x4e02 <__muluhisi3>
    4d3a:	bf 91       	pop	r27
    4d3c:	af 91       	pop	r26
    4d3e:	a2 9f       	mul	r26, r18
    4d40:	80 0d       	add	r24, r0
    4d42:	91 1d       	adc	r25, r1
    4d44:	a3 9f       	mul	r26, r19
    4d46:	90 0d       	add	r25, r0
    4d48:	b2 9f       	mul	r27, r18
    4d4a:	90 0d       	add	r25, r0
    4d4c:	11 24       	eor	r1, r1
    4d4e:	08 95       	ret

00004d50 <__udivmodhi4>:
    4d50:	aa 1b       	sub	r26, r26
    4d52:	bb 1b       	sub	r27, r27
    4d54:	51 e1       	ldi	r21, 0x11	; 17
    4d56:	07 c0       	rjmp	.+14     	; 0x4d66 <__udivmodhi4_ep>

00004d58 <__udivmodhi4_loop>:
    4d58:	aa 1f       	adc	r26, r26
    4d5a:	bb 1f       	adc	r27, r27
    4d5c:	a6 17       	cp	r26, r22
    4d5e:	b7 07       	cpc	r27, r23
    4d60:	10 f0       	brcs	.+4      	; 0x4d66 <__udivmodhi4_ep>
    4d62:	a6 1b       	sub	r26, r22
    4d64:	b7 0b       	sbc	r27, r23

00004d66 <__udivmodhi4_ep>:
    4d66:	88 1f       	adc	r24, r24
    4d68:	99 1f       	adc	r25, r25
    4d6a:	5a 95       	dec	r21
    4d6c:	a9 f7       	brne	.-22     	; 0x4d58 <__udivmodhi4_loop>
    4d6e:	80 95       	com	r24
    4d70:	90 95       	com	r25
    4d72:	bc 01       	movw	r22, r24
    4d74:	cd 01       	movw	r24, r26
    4d76:	08 95       	ret

00004d78 <__divmodhi4>:
    4d78:	97 fb       	bst	r25, 7
    4d7a:	07 2e       	mov	r0, r23
    4d7c:	16 f4       	brtc	.+4      	; 0x4d82 <__divmodhi4+0xa>
    4d7e:	00 94       	com	r0
    4d80:	07 d0       	rcall	.+14     	; 0x4d90 <__divmodhi4_neg1>
    4d82:	77 fd       	sbrc	r23, 7
    4d84:	09 d0       	rcall	.+18     	; 0x4d98 <__divmodhi4_neg2>
    4d86:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <__udivmodhi4>
    4d8a:	07 fc       	sbrc	r0, 7
    4d8c:	05 d0       	rcall	.+10     	; 0x4d98 <__divmodhi4_neg2>
    4d8e:	3e f4       	brtc	.+14     	; 0x4d9e <__divmodhi4_exit>

00004d90 <__divmodhi4_neg1>:
    4d90:	90 95       	com	r25
    4d92:	81 95       	neg	r24
    4d94:	9f 4f       	sbci	r25, 0xFF	; 255
    4d96:	08 95       	ret

00004d98 <__divmodhi4_neg2>:
    4d98:	70 95       	com	r23
    4d9a:	61 95       	neg	r22
    4d9c:	7f 4f       	sbci	r23, 0xFF	; 255

00004d9e <__divmodhi4_exit>:
    4d9e:	08 95       	ret

00004da0 <__udivmodsi4>:
    4da0:	a1 e2       	ldi	r26, 0x21	; 33
    4da2:	1a 2e       	mov	r1, r26
    4da4:	aa 1b       	sub	r26, r26
    4da6:	bb 1b       	sub	r27, r27
    4da8:	fd 01       	movw	r30, r26
    4daa:	0d c0       	rjmp	.+26     	; 0x4dc6 <__udivmodsi4_ep>

00004dac <__udivmodsi4_loop>:
    4dac:	aa 1f       	adc	r26, r26
    4dae:	bb 1f       	adc	r27, r27
    4db0:	ee 1f       	adc	r30, r30
    4db2:	ff 1f       	adc	r31, r31
    4db4:	a2 17       	cp	r26, r18
    4db6:	b3 07       	cpc	r27, r19
    4db8:	e4 07       	cpc	r30, r20
    4dba:	f5 07       	cpc	r31, r21
    4dbc:	20 f0       	brcs	.+8      	; 0x4dc6 <__udivmodsi4_ep>
    4dbe:	a2 1b       	sub	r26, r18
    4dc0:	b3 0b       	sbc	r27, r19
    4dc2:	e4 0b       	sbc	r30, r20
    4dc4:	f5 0b       	sbc	r31, r21

00004dc6 <__udivmodsi4_ep>:
    4dc6:	66 1f       	adc	r22, r22
    4dc8:	77 1f       	adc	r23, r23
    4dca:	88 1f       	adc	r24, r24
    4dcc:	99 1f       	adc	r25, r25
    4dce:	1a 94       	dec	r1
    4dd0:	69 f7       	brne	.-38     	; 0x4dac <__udivmodsi4_loop>
    4dd2:	60 95       	com	r22
    4dd4:	70 95       	com	r23
    4dd6:	80 95       	com	r24
    4dd8:	90 95       	com	r25
    4dda:	9b 01       	movw	r18, r22
    4ddc:	ac 01       	movw	r20, r24
    4dde:	bd 01       	movw	r22, r26
    4de0:	cf 01       	movw	r24, r30
    4de2:	08 95       	ret

00004de4 <__umulhisi3>:
    4de4:	a2 9f       	mul	r26, r18
    4de6:	b0 01       	movw	r22, r0
    4de8:	b3 9f       	mul	r27, r19
    4dea:	c0 01       	movw	r24, r0
    4dec:	a3 9f       	mul	r26, r19
    4dee:	70 0d       	add	r23, r0
    4df0:	81 1d       	adc	r24, r1
    4df2:	11 24       	eor	r1, r1
    4df4:	91 1d       	adc	r25, r1
    4df6:	b2 9f       	mul	r27, r18
    4df8:	70 0d       	add	r23, r0
    4dfa:	81 1d       	adc	r24, r1
    4dfc:	11 24       	eor	r1, r1
    4dfe:	91 1d       	adc	r25, r1
    4e00:	08 95       	ret

00004e02 <__muluhisi3>:
    4e02:	0e 94 f2 26 	call	0x4de4	; 0x4de4 <__umulhisi3>
    4e06:	a5 9f       	mul	r26, r21
    4e08:	90 0d       	add	r25, r0
    4e0a:	b4 9f       	mul	r27, r20
    4e0c:	90 0d       	add	r25, r0
    4e0e:	a4 9f       	mul	r26, r20
    4e10:	80 0d       	add	r24, r0
    4e12:	91 1d       	adc	r25, r1
    4e14:	11 24       	eor	r1, r1
    4e16:	08 95       	ret

00004e18 <memset>:
    4e18:	dc 01       	movw	r26, r24
    4e1a:	01 c0       	rjmp	.+2      	; 0x4e1e <memset+0x6>
    4e1c:	6d 93       	st	X+, r22
    4e1e:	41 50       	subi	r20, 0x01	; 1
    4e20:	50 40       	sbci	r21, 0x00	; 0
    4e22:	e0 f7       	brcc	.-8      	; 0x4e1c <memset+0x4>
    4e24:	08 95       	ret

00004e26 <sprintf>:
    4e26:	ae e0       	ldi	r26, 0x0E	; 14
    4e28:	b0 e0       	ldi	r27, 0x00	; 0
    4e2a:	e9 e1       	ldi	r30, 0x19	; 25
    4e2c:	f7 e2       	ldi	r31, 0x27	; 39
    4e2e:	0c 94 d4 29 	jmp	0x53a8	; 0x53a8 <__prologue_saves__+0x1c>
    4e32:	0d 89       	ldd	r16, Y+21	; 0x15
    4e34:	1e 89       	ldd	r17, Y+22	; 0x16
    4e36:	86 e0       	ldi	r24, 0x06	; 6
    4e38:	8c 83       	std	Y+4, r24	; 0x04
    4e3a:	1a 83       	std	Y+2, r17	; 0x02
    4e3c:	09 83       	std	Y+1, r16	; 0x01
    4e3e:	8f ef       	ldi	r24, 0xFF	; 255
    4e40:	9f e7       	ldi	r25, 0x7F	; 127
    4e42:	9e 83       	std	Y+6, r25	; 0x06
    4e44:	8d 83       	std	Y+5, r24	; 0x05
    4e46:	ae 01       	movw	r20, r28
    4e48:	47 5e       	subi	r20, 0xE7	; 231
    4e4a:	5f 4f       	sbci	r21, 0xFF	; 255
    4e4c:	6f 89       	ldd	r22, Y+23	; 0x17
    4e4e:	78 8d       	ldd	r23, Y+24	; 0x18
    4e50:	ce 01       	movw	r24, r28
    4e52:	01 96       	adiw	r24, 0x01	; 1
    4e54:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <vfprintf>
    4e58:	ef 81       	ldd	r30, Y+7	; 0x07
    4e5a:	f8 85       	ldd	r31, Y+8	; 0x08
    4e5c:	e0 0f       	add	r30, r16
    4e5e:	f1 1f       	adc	r31, r17
    4e60:	10 82       	st	Z, r1
    4e62:	2e 96       	adiw	r28, 0x0e	; 14
    4e64:	e4 e0       	ldi	r30, 0x04	; 4
    4e66:	0c 94 f0 29 	jmp	0x53e0	; 0x53e0 <__epilogue_restores__+0x1c>

00004e6a <vfprintf>:
    4e6a:	ab e0       	ldi	r26, 0x0B	; 11
    4e6c:	b0 e0       	ldi	r27, 0x00	; 0
    4e6e:	eb e3       	ldi	r30, 0x3B	; 59
    4e70:	f7 e2       	ldi	r31, 0x27	; 39
    4e72:	0c 94 c6 29 	jmp	0x538c	; 0x538c <__prologue_saves__>
    4e76:	6c 01       	movw	r12, r24
    4e78:	7b 01       	movw	r14, r22
    4e7a:	8a 01       	movw	r16, r20
    4e7c:	fc 01       	movw	r30, r24
    4e7e:	17 82       	std	Z+7, r1	; 0x07
    4e80:	16 82       	std	Z+6, r1	; 0x06
    4e82:	83 81       	ldd	r24, Z+3	; 0x03
    4e84:	81 ff       	sbrs	r24, 1
    4e86:	cc c1       	rjmp	.+920    	; 0x5220 <vfprintf+0x3b6>
    4e88:	ce 01       	movw	r24, r28
    4e8a:	01 96       	adiw	r24, 0x01	; 1
    4e8c:	3c 01       	movw	r6, r24
    4e8e:	f6 01       	movw	r30, r12
    4e90:	93 81       	ldd	r25, Z+3	; 0x03
    4e92:	f7 01       	movw	r30, r14
    4e94:	93 fd       	sbrc	r25, 3
    4e96:	85 91       	lpm	r24, Z+
    4e98:	93 ff       	sbrs	r25, 3
    4e9a:	81 91       	ld	r24, Z+
    4e9c:	7f 01       	movw	r14, r30
    4e9e:	88 23       	and	r24, r24
    4ea0:	09 f4       	brne	.+2      	; 0x4ea4 <vfprintf+0x3a>
    4ea2:	ba c1       	rjmp	.+884    	; 0x5218 <vfprintf+0x3ae>
    4ea4:	85 32       	cpi	r24, 0x25	; 37
    4ea6:	39 f4       	brne	.+14     	; 0x4eb6 <vfprintf+0x4c>
    4ea8:	93 fd       	sbrc	r25, 3
    4eaa:	85 91       	lpm	r24, Z+
    4eac:	93 ff       	sbrs	r25, 3
    4eae:	81 91       	ld	r24, Z+
    4eb0:	7f 01       	movw	r14, r30
    4eb2:	85 32       	cpi	r24, 0x25	; 37
    4eb4:	29 f4       	brne	.+10     	; 0x4ec0 <vfprintf+0x56>
    4eb6:	b6 01       	movw	r22, r12
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    4ebe:	e7 cf       	rjmp	.-50     	; 0x4e8e <vfprintf+0x24>
    4ec0:	91 2c       	mov	r9, r1
    4ec2:	21 2c       	mov	r2, r1
    4ec4:	31 2c       	mov	r3, r1
    4ec6:	ff e1       	ldi	r31, 0x1F	; 31
    4ec8:	f3 15       	cp	r31, r3
    4eca:	d8 f0       	brcs	.+54     	; 0x4f02 <vfprintf+0x98>
    4ecc:	8b 32       	cpi	r24, 0x2B	; 43
    4ece:	79 f0       	breq	.+30     	; 0x4eee <vfprintf+0x84>
    4ed0:	38 f4       	brcc	.+14     	; 0x4ee0 <vfprintf+0x76>
    4ed2:	80 32       	cpi	r24, 0x20	; 32
    4ed4:	79 f0       	breq	.+30     	; 0x4ef4 <vfprintf+0x8a>
    4ed6:	83 32       	cpi	r24, 0x23	; 35
    4ed8:	a1 f4       	brne	.+40     	; 0x4f02 <vfprintf+0x98>
    4eda:	23 2d       	mov	r18, r3
    4edc:	20 61       	ori	r18, 0x10	; 16
    4ede:	1d c0       	rjmp	.+58     	; 0x4f1a <vfprintf+0xb0>
    4ee0:	8d 32       	cpi	r24, 0x2D	; 45
    4ee2:	61 f0       	breq	.+24     	; 0x4efc <vfprintf+0x92>
    4ee4:	80 33       	cpi	r24, 0x30	; 48
    4ee6:	69 f4       	brne	.+26     	; 0x4f02 <vfprintf+0x98>
    4ee8:	23 2d       	mov	r18, r3
    4eea:	21 60       	ori	r18, 0x01	; 1
    4eec:	16 c0       	rjmp	.+44     	; 0x4f1a <vfprintf+0xb0>
    4eee:	83 2d       	mov	r24, r3
    4ef0:	82 60       	ori	r24, 0x02	; 2
    4ef2:	38 2e       	mov	r3, r24
    4ef4:	e3 2d       	mov	r30, r3
    4ef6:	e4 60       	ori	r30, 0x04	; 4
    4ef8:	3e 2e       	mov	r3, r30
    4efa:	2a c0       	rjmp	.+84     	; 0x4f50 <vfprintf+0xe6>
    4efc:	f3 2d       	mov	r31, r3
    4efe:	f8 60       	ori	r31, 0x08	; 8
    4f00:	1d c0       	rjmp	.+58     	; 0x4f3c <vfprintf+0xd2>
    4f02:	37 fc       	sbrc	r3, 7
    4f04:	2d c0       	rjmp	.+90     	; 0x4f60 <vfprintf+0xf6>
    4f06:	20 ed       	ldi	r18, 0xD0	; 208
    4f08:	28 0f       	add	r18, r24
    4f0a:	2a 30       	cpi	r18, 0x0A	; 10
    4f0c:	40 f0       	brcs	.+16     	; 0x4f1e <vfprintf+0xb4>
    4f0e:	8e 32       	cpi	r24, 0x2E	; 46
    4f10:	b9 f4       	brne	.+46     	; 0x4f40 <vfprintf+0xd6>
    4f12:	36 fc       	sbrc	r3, 6
    4f14:	81 c1       	rjmp	.+770    	; 0x5218 <vfprintf+0x3ae>
    4f16:	23 2d       	mov	r18, r3
    4f18:	20 64       	ori	r18, 0x40	; 64
    4f1a:	32 2e       	mov	r3, r18
    4f1c:	19 c0       	rjmp	.+50     	; 0x4f50 <vfprintf+0xe6>
    4f1e:	36 fe       	sbrs	r3, 6
    4f20:	06 c0       	rjmp	.+12     	; 0x4f2e <vfprintf+0xc4>
    4f22:	8a e0       	ldi	r24, 0x0A	; 10
    4f24:	98 9e       	mul	r9, r24
    4f26:	20 0d       	add	r18, r0
    4f28:	11 24       	eor	r1, r1
    4f2a:	92 2e       	mov	r9, r18
    4f2c:	11 c0       	rjmp	.+34     	; 0x4f50 <vfprintf+0xe6>
    4f2e:	ea e0       	ldi	r30, 0x0A	; 10
    4f30:	2e 9e       	mul	r2, r30
    4f32:	20 0d       	add	r18, r0
    4f34:	11 24       	eor	r1, r1
    4f36:	22 2e       	mov	r2, r18
    4f38:	f3 2d       	mov	r31, r3
    4f3a:	f0 62       	ori	r31, 0x20	; 32
    4f3c:	3f 2e       	mov	r3, r31
    4f3e:	08 c0       	rjmp	.+16     	; 0x4f50 <vfprintf+0xe6>
    4f40:	8c 36       	cpi	r24, 0x6C	; 108
    4f42:	21 f4       	brne	.+8      	; 0x4f4c <vfprintf+0xe2>
    4f44:	83 2d       	mov	r24, r3
    4f46:	80 68       	ori	r24, 0x80	; 128
    4f48:	38 2e       	mov	r3, r24
    4f4a:	02 c0       	rjmp	.+4      	; 0x4f50 <vfprintf+0xe6>
    4f4c:	88 36       	cpi	r24, 0x68	; 104
    4f4e:	41 f4       	brne	.+16     	; 0x4f60 <vfprintf+0xf6>
    4f50:	f7 01       	movw	r30, r14
    4f52:	93 fd       	sbrc	r25, 3
    4f54:	85 91       	lpm	r24, Z+
    4f56:	93 ff       	sbrs	r25, 3
    4f58:	81 91       	ld	r24, Z+
    4f5a:	7f 01       	movw	r14, r30
    4f5c:	81 11       	cpse	r24, r1
    4f5e:	b3 cf       	rjmp	.-154    	; 0x4ec6 <vfprintf+0x5c>
    4f60:	98 2f       	mov	r25, r24
    4f62:	9f 7d       	andi	r25, 0xDF	; 223
    4f64:	95 54       	subi	r25, 0x45	; 69
    4f66:	93 30       	cpi	r25, 0x03	; 3
    4f68:	28 f4       	brcc	.+10     	; 0x4f74 <vfprintf+0x10a>
    4f6a:	0c 5f       	subi	r16, 0xFC	; 252
    4f6c:	1f 4f       	sbci	r17, 0xFF	; 255
    4f6e:	9f e3       	ldi	r25, 0x3F	; 63
    4f70:	99 83       	std	Y+1, r25	; 0x01
    4f72:	0d c0       	rjmp	.+26     	; 0x4f8e <vfprintf+0x124>
    4f74:	83 36       	cpi	r24, 0x63	; 99
    4f76:	31 f0       	breq	.+12     	; 0x4f84 <vfprintf+0x11a>
    4f78:	83 37       	cpi	r24, 0x73	; 115
    4f7a:	71 f0       	breq	.+28     	; 0x4f98 <vfprintf+0x12e>
    4f7c:	83 35       	cpi	r24, 0x53	; 83
    4f7e:	09 f0       	breq	.+2      	; 0x4f82 <vfprintf+0x118>
    4f80:	59 c0       	rjmp	.+178    	; 0x5034 <vfprintf+0x1ca>
    4f82:	21 c0       	rjmp	.+66     	; 0x4fc6 <vfprintf+0x15c>
    4f84:	f8 01       	movw	r30, r16
    4f86:	80 81       	ld	r24, Z
    4f88:	89 83       	std	Y+1, r24	; 0x01
    4f8a:	0e 5f       	subi	r16, 0xFE	; 254
    4f8c:	1f 4f       	sbci	r17, 0xFF	; 255
    4f8e:	88 24       	eor	r8, r8
    4f90:	83 94       	inc	r8
    4f92:	91 2c       	mov	r9, r1
    4f94:	53 01       	movw	r10, r6
    4f96:	13 c0       	rjmp	.+38     	; 0x4fbe <vfprintf+0x154>
    4f98:	28 01       	movw	r4, r16
    4f9a:	f2 e0       	ldi	r31, 0x02	; 2
    4f9c:	4f 0e       	add	r4, r31
    4f9e:	51 1c       	adc	r5, r1
    4fa0:	f8 01       	movw	r30, r16
    4fa2:	a0 80       	ld	r10, Z
    4fa4:	b1 80       	ldd	r11, Z+1	; 0x01
    4fa6:	36 fe       	sbrs	r3, 6
    4fa8:	03 c0       	rjmp	.+6      	; 0x4fb0 <vfprintf+0x146>
    4faa:	69 2d       	mov	r22, r9
    4fac:	70 e0       	ldi	r23, 0x00	; 0
    4fae:	02 c0       	rjmp	.+4      	; 0x4fb4 <vfprintf+0x14a>
    4fb0:	6f ef       	ldi	r22, 0xFF	; 255
    4fb2:	7f ef       	ldi	r23, 0xFF	; 255
    4fb4:	c5 01       	movw	r24, r10
    4fb6:	0e 94 21 29 	call	0x5242	; 0x5242 <strnlen>
    4fba:	4c 01       	movw	r8, r24
    4fbc:	82 01       	movw	r16, r4
    4fbe:	f3 2d       	mov	r31, r3
    4fc0:	ff 77       	andi	r31, 0x7F	; 127
    4fc2:	3f 2e       	mov	r3, r31
    4fc4:	16 c0       	rjmp	.+44     	; 0x4ff2 <vfprintf+0x188>
    4fc6:	28 01       	movw	r4, r16
    4fc8:	22 e0       	ldi	r18, 0x02	; 2
    4fca:	42 0e       	add	r4, r18
    4fcc:	51 1c       	adc	r5, r1
    4fce:	f8 01       	movw	r30, r16
    4fd0:	a0 80       	ld	r10, Z
    4fd2:	b1 80       	ldd	r11, Z+1	; 0x01
    4fd4:	36 fe       	sbrs	r3, 6
    4fd6:	03 c0       	rjmp	.+6      	; 0x4fde <vfprintf+0x174>
    4fd8:	69 2d       	mov	r22, r9
    4fda:	70 e0       	ldi	r23, 0x00	; 0
    4fdc:	02 c0       	rjmp	.+4      	; 0x4fe2 <vfprintf+0x178>
    4fde:	6f ef       	ldi	r22, 0xFF	; 255
    4fe0:	7f ef       	ldi	r23, 0xFF	; 255
    4fe2:	c5 01       	movw	r24, r10
    4fe4:	0e 94 16 29 	call	0x522c	; 0x522c <strnlen_P>
    4fe8:	4c 01       	movw	r8, r24
    4fea:	f3 2d       	mov	r31, r3
    4fec:	f0 68       	ori	r31, 0x80	; 128
    4fee:	3f 2e       	mov	r3, r31
    4ff0:	82 01       	movw	r16, r4
    4ff2:	33 fc       	sbrc	r3, 3
    4ff4:	1b c0       	rjmp	.+54     	; 0x502c <vfprintf+0x1c2>
    4ff6:	82 2d       	mov	r24, r2
    4ff8:	90 e0       	ldi	r25, 0x00	; 0
    4ffa:	88 16       	cp	r8, r24
    4ffc:	99 06       	cpc	r9, r25
    4ffe:	b0 f4       	brcc	.+44     	; 0x502c <vfprintf+0x1c2>
    5000:	b6 01       	movw	r22, r12
    5002:	80 e2       	ldi	r24, 0x20	; 32
    5004:	90 e0       	ldi	r25, 0x00	; 0
    5006:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    500a:	2a 94       	dec	r2
    500c:	f4 cf       	rjmp	.-24     	; 0x4ff6 <vfprintf+0x18c>
    500e:	f5 01       	movw	r30, r10
    5010:	37 fc       	sbrc	r3, 7
    5012:	85 91       	lpm	r24, Z+
    5014:	37 fe       	sbrs	r3, 7
    5016:	81 91       	ld	r24, Z+
    5018:	5f 01       	movw	r10, r30
    501a:	b6 01       	movw	r22, r12
    501c:	90 e0       	ldi	r25, 0x00	; 0
    501e:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    5022:	21 10       	cpse	r2, r1
    5024:	2a 94       	dec	r2
    5026:	21 e0       	ldi	r18, 0x01	; 1
    5028:	82 1a       	sub	r8, r18
    502a:	91 08       	sbc	r9, r1
    502c:	81 14       	cp	r8, r1
    502e:	91 04       	cpc	r9, r1
    5030:	71 f7       	brne	.-36     	; 0x500e <vfprintf+0x1a4>
    5032:	e8 c0       	rjmp	.+464    	; 0x5204 <vfprintf+0x39a>
    5034:	84 36       	cpi	r24, 0x64	; 100
    5036:	11 f0       	breq	.+4      	; 0x503c <vfprintf+0x1d2>
    5038:	89 36       	cpi	r24, 0x69	; 105
    503a:	41 f5       	brne	.+80     	; 0x508c <vfprintf+0x222>
    503c:	f8 01       	movw	r30, r16
    503e:	37 fe       	sbrs	r3, 7
    5040:	07 c0       	rjmp	.+14     	; 0x5050 <vfprintf+0x1e6>
    5042:	60 81       	ld	r22, Z
    5044:	71 81       	ldd	r23, Z+1	; 0x01
    5046:	82 81       	ldd	r24, Z+2	; 0x02
    5048:	93 81       	ldd	r25, Z+3	; 0x03
    504a:	0c 5f       	subi	r16, 0xFC	; 252
    504c:	1f 4f       	sbci	r17, 0xFF	; 255
    504e:	08 c0       	rjmp	.+16     	; 0x5060 <vfprintf+0x1f6>
    5050:	60 81       	ld	r22, Z
    5052:	71 81       	ldd	r23, Z+1	; 0x01
    5054:	07 2e       	mov	r0, r23
    5056:	00 0c       	add	r0, r0
    5058:	88 0b       	sbc	r24, r24
    505a:	99 0b       	sbc	r25, r25
    505c:	0e 5f       	subi	r16, 0xFE	; 254
    505e:	1f 4f       	sbci	r17, 0xFF	; 255
    5060:	f3 2d       	mov	r31, r3
    5062:	ff 76       	andi	r31, 0x6F	; 111
    5064:	3f 2e       	mov	r3, r31
    5066:	97 ff       	sbrs	r25, 7
    5068:	09 c0       	rjmp	.+18     	; 0x507c <vfprintf+0x212>
    506a:	90 95       	com	r25
    506c:	80 95       	com	r24
    506e:	70 95       	com	r23
    5070:	61 95       	neg	r22
    5072:	7f 4f       	sbci	r23, 0xFF	; 255
    5074:	8f 4f       	sbci	r24, 0xFF	; 255
    5076:	9f 4f       	sbci	r25, 0xFF	; 255
    5078:	f0 68       	ori	r31, 0x80	; 128
    507a:	3f 2e       	mov	r3, r31
    507c:	2a e0       	ldi	r18, 0x0A	; 10
    507e:	30 e0       	ldi	r19, 0x00	; 0
    5080:	a3 01       	movw	r20, r6
    5082:	0e 94 68 29 	call	0x52d0	; 0x52d0 <__ultoa_invert>
    5086:	88 2e       	mov	r8, r24
    5088:	86 18       	sub	r8, r6
    508a:	45 c0       	rjmp	.+138    	; 0x5116 <vfprintf+0x2ac>
    508c:	85 37       	cpi	r24, 0x75	; 117
    508e:	31 f4       	brne	.+12     	; 0x509c <vfprintf+0x232>
    5090:	23 2d       	mov	r18, r3
    5092:	2f 7e       	andi	r18, 0xEF	; 239
    5094:	b2 2e       	mov	r11, r18
    5096:	2a e0       	ldi	r18, 0x0A	; 10
    5098:	30 e0       	ldi	r19, 0x00	; 0
    509a:	25 c0       	rjmp	.+74     	; 0x50e6 <vfprintf+0x27c>
    509c:	93 2d       	mov	r25, r3
    509e:	99 7f       	andi	r25, 0xF9	; 249
    50a0:	b9 2e       	mov	r11, r25
    50a2:	8f 36       	cpi	r24, 0x6F	; 111
    50a4:	c1 f0       	breq	.+48     	; 0x50d6 <vfprintf+0x26c>
    50a6:	18 f4       	brcc	.+6      	; 0x50ae <vfprintf+0x244>
    50a8:	88 35       	cpi	r24, 0x58	; 88
    50aa:	79 f0       	breq	.+30     	; 0x50ca <vfprintf+0x260>
    50ac:	b5 c0       	rjmp	.+362    	; 0x5218 <vfprintf+0x3ae>
    50ae:	80 37       	cpi	r24, 0x70	; 112
    50b0:	19 f0       	breq	.+6      	; 0x50b8 <vfprintf+0x24e>
    50b2:	88 37       	cpi	r24, 0x78	; 120
    50b4:	21 f0       	breq	.+8      	; 0x50be <vfprintf+0x254>
    50b6:	b0 c0       	rjmp	.+352    	; 0x5218 <vfprintf+0x3ae>
    50b8:	e9 2f       	mov	r30, r25
    50ba:	e0 61       	ori	r30, 0x10	; 16
    50bc:	be 2e       	mov	r11, r30
    50be:	b4 fe       	sbrs	r11, 4
    50c0:	0d c0       	rjmp	.+26     	; 0x50dc <vfprintf+0x272>
    50c2:	fb 2d       	mov	r31, r11
    50c4:	f4 60       	ori	r31, 0x04	; 4
    50c6:	bf 2e       	mov	r11, r31
    50c8:	09 c0       	rjmp	.+18     	; 0x50dc <vfprintf+0x272>
    50ca:	34 fe       	sbrs	r3, 4
    50cc:	0a c0       	rjmp	.+20     	; 0x50e2 <vfprintf+0x278>
    50ce:	29 2f       	mov	r18, r25
    50d0:	26 60       	ori	r18, 0x06	; 6
    50d2:	b2 2e       	mov	r11, r18
    50d4:	06 c0       	rjmp	.+12     	; 0x50e2 <vfprintf+0x278>
    50d6:	28 e0       	ldi	r18, 0x08	; 8
    50d8:	30 e0       	ldi	r19, 0x00	; 0
    50da:	05 c0       	rjmp	.+10     	; 0x50e6 <vfprintf+0x27c>
    50dc:	20 e1       	ldi	r18, 0x10	; 16
    50de:	30 e0       	ldi	r19, 0x00	; 0
    50e0:	02 c0       	rjmp	.+4      	; 0x50e6 <vfprintf+0x27c>
    50e2:	20 e1       	ldi	r18, 0x10	; 16
    50e4:	32 e0       	ldi	r19, 0x02	; 2
    50e6:	f8 01       	movw	r30, r16
    50e8:	b7 fe       	sbrs	r11, 7
    50ea:	07 c0       	rjmp	.+14     	; 0x50fa <vfprintf+0x290>
    50ec:	60 81       	ld	r22, Z
    50ee:	71 81       	ldd	r23, Z+1	; 0x01
    50f0:	82 81       	ldd	r24, Z+2	; 0x02
    50f2:	93 81       	ldd	r25, Z+3	; 0x03
    50f4:	0c 5f       	subi	r16, 0xFC	; 252
    50f6:	1f 4f       	sbci	r17, 0xFF	; 255
    50f8:	06 c0       	rjmp	.+12     	; 0x5106 <vfprintf+0x29c>
    50fa:	60 81       	ld	r22, Z
    50fc:	71 81       	ldd	r23, Z+1	; 0x01
    50fe:	80 e0       	ldi	r24, 0x00	; 0
    5100:	90 e0       	ldi	r25, 0x00	; 0
    5102:	0e 5f       	subi	r16, 0xFE	; 254
    5104:	1f 4f       	sbci	r17, 0xFF	; 255
    5106:	a3 01       	movw	r20, r6
    5108:	0e 94 68 29 	call	0x52d0	; 0x52d0 <__ultoa_invert>
    510c:	88 2e       	mov	r8, r24
    510e:	86 18       	sub	r8, r6
    5110:	fb 2d       	mov	r31, r11
    5112:	ff 77       	andi	r31, 0x7F	; 127
    5114:	3f 2e       	mov	r3, r31
    5116:	36 fe       	sbrs	r3, 6
    5118:	0d c0       	rjmp	.+26     	; 0x5134 <vfprintf+0x2ca>
    511a:	23 2d       	mov	r18, r3
    511c:	2e 7f       	andi	r18, 0xFE	; 254
    511e:	a2 2e       	mov	r10, r18
    5120:	89 14       	cp	r8, r9
    5122:	58 f4       	brcc	.+22     	; 0x513a <vfprintf+0x2d0>
    5124:	34 fe       	sbrs	r3, 4
    5126:	0b c0       	rjmp	.+22     	; 0x513e <vfprintf+0x2d4>
    5128:	32 fc       	sbrc	r3, 2
    512a:	09 c0       	rjmp	.+18     	; 0x513e <vfprintf+0x2d4>
    512c:	83 2d       	mov	r24, r3
    512e:	8e 7e       	andi	r24, 0xEE	; 238
    5130:	a8 2e       	mov	r10, r24
    5132:	05 c0       	rjmp	.+10     	; 0x513e <vfprintf+0x2d4>
    5134:	b8 2c       	mov	r11, r8
    5136:	a3 2c       	mov	r10, r3
    5138:	03 c0       	rjmp	.+6      	; 0x5140 <vfprintf+0x2d6>
    513a:	b8 2c       	mov	r11, r8
    513c:	01 c0       	rjmp	.+2      	; 0x5140 <vfprintf+0x2d6>
    513e:	b9 2c       	mov	r11, r9
    5140:	a4 fe       	sbrs	r10, 4
    5142:	0f c0       	rjmp	.+30     	; 0x5162 <vfprintf+0x2f8>
    5144:	fe 01       	movw	r30, r28
    5146:	e8 0d       	add	r30, r8
    5148:	f1 1d       	adc	r31, r1
    514a:	80 81       	ld	r24, Z
    514c:	80 33       	cpi	r24, 0x30	; 48
    514e:	21 f4       	brne	.+8      	; 0x5158 <vfprintf+0x2ee>
    5150:	9a 2d       	mov	r25, r10
    5152:	99 7e       	andi	r25, 0xE9	; 233
    5154:	a9 2e       	mov	r10, r25
    5156:	09 c0       	rjmp	.+18     	; 0x516a <vfprintf+0x300>
    5158:	a2 fe       	sbrs	r10, 2
    515a:	06 c0       	rjmp	.+12     	; 0x5168 <vfprintf+0x2fe>
    515c:	b3 94       	inc	r11
    515e:	b3 94       	inc	r11
    5160:	04 c0       	rjmp	.+8      	; 0x516a <vfprintf+0x300>
    5162:	8a 2d       	mov	r24, r10
    5164:	86 78       	andi	r24, 0x86	; 134
    5166:	09 f0       	breq	.+2      	; 0x516a <vfprintf+0x300>
    5168:	b3 94       	inc	r11
    516a:	a3 fc       	sbrc	r10, 3
    516c:	11 c0       	rjmp	.+34     	; 0x5190 <vfprintf+0x326>
    516e:	a0 fe       	sbrs	r10, 0
    5170:	06 c0       	rjmp	.+12     	; 0x517e <vfprintf+0x314>
    5172:	b2 14       	cp	r11, r2
    5174:	88 f4       	brcc	.+34     	; 0x5198 <vfprintf+0x32e>
    5176:	28 0c       	add	r2, r8
    5178:	92 2c       	mov	r9, r2
    517a:	9b 18       	sub	r9, r11
    517c:	0e c0       	rjmp	.+28     	; 0x519a <vfprintf+0x330>
    517e:	b2 14       	cp	r11, r2
    5180:	60 f4       	brcc	.+24     	; 0x519a <vfprintf+0x330>
    5182:	b6 01       	movw	r22, r12
    5184:	80 e2       	ldi	r24, 0x20	; 32
    5186:	90 e0       	ldi	r25, 0x00	; 0
    5188:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    518c:	b3 94       	inc	r11
    518e:	f7 cf       	rjmp	.-18     	; 0x517e <vfprintf+0x314>
    5190:	b2 14       	cp	r11, r2
    5192:	18 f4       	brcc	.+6      	; 0x519a <vfprintf+0x330>
    5194:	2b 18       	sub	r2, r11
    5196:	02 c0       	rjmp	.+4      	; 0x519c <vfprintf+0x332>
    5198:	98 2c       	mov	r9, r8
    519a:	21 2c       	mov	r2, r1
    519c:	a4 fe       	sbrs	r10, 4
    519e:	10 c0       	rjmp	.+32     	; 0x51c0 <vfprintf+0x356>
    51a0:	b6 01       	movw	r22, r12
    51a2:	80 e3       	ldi	r24, 0x30	; 48
    51a4:	90 e0       	ldi	r25, 0x00	; 0
    51a6:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    51aa:	a2 fe       	sbrs	r10, 2
    51ac:	17 c0       	rjmp	.+46     	; 0x51dc <vfprintf+0x372>
    51ae:	a1 fc       	sbrc	r10, 1
    51b0:	03 c0       	rjmp	.+6      	; 0x51b8 <vfprintf+0x34e>
    51b2:	88 e7       	ldi	r24, 0x78	; 120
    51b4:	90 e0       	ldi	r25, 0x00	; 0
    51b6:	02 c0       	rjmp	.+4      	; 0x51bc <vfprintf+0x352>
    51b8:	88 e5       	ldi	r24, 0x58	; 88
    51ba:	90 e0       	ldi	r25, 0x00	; 0
    51bc:	b6 01       	movw	r22, r12
    51be:	0c c0       	rjmp	.+24     	; 0x51d8 <vfprintf+0x36e>
    51c0:	8a 2d       	mov	r24, r10
    51c2:	86 78       	andi	r24, 0x86	; 134
    51c4:	59 f0       	breq	.+22     	; 0x51dc <vfprintf+0x372>
    51c6:	a1 fe       	sbrs	r10, 1
    51c8:	02 c0       	rjmp	.+4      	; 0x51ce <vfprintf+0x364>
    51ca:	8b e2       	ldi	r24, 0x2B	; 43
    51cc:	01 c0       	rjmp	.+2      	; 0x51d0 <vfprintf+0x366>
    51ce:	80 e2       	ldi	r24, 0x20	; 32
    51d0:	a7 fc       	sbrc	r10, 7
    51d2:	8d e2       	ldi	r24, 0x2D	; 45
    51d4:	b6 01       	movw	r22, r12
    51d6:	90 e0       	ldi	r25, 0x00	; 0
    51d8:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    51dc:	89 14       	cp	r8, r9
    51de:	38 f4       	brcc	.+14     	; 0x51ee <vfprintf+0x384>
    51e0:	b6 01       	movw	r22, r12
    51e2:	80 e3       	ldi	r24, 0x30	; 48
    51e4:	90 e0       	ldi	r25, 0x00	; 0
    51e6:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    51ea:	9a 94       	dec	r9
    51ec:	f7 cf       	rjmp	.-18     	; 0x51dc <vfprintf+0x372>
    51ee:	8a 94       	dec	r8
    51f0:	f3 01       	movw	r30, r6
    51f2:	e8 0d       	add	r30, r8
    51f4:	f1 1d       	adc	r31, r1
    51f6:	80 81       	ld	r24, Z
    51f8:	b6 01       	movw	r22, r12
    51fa:	90 e0       	ldi	r25, 0x00	; 0
    51fc:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    5200:	81 10       	cpse	r8, r1
    5202:	f5 cf       	rjmp	.-22     	; 0x51ee <vfprintf+0x384>
    5204:	22 20       	and	r2, r2
    5206:	09 f4       	brne	.+2      	; 0x520a <vfprintf+0x3a0>
    5208:	42 ce       	rjmp	.-892    	; 0x4e8e <vfprintf+0x24>
    520a:	b6 01       	movw	r22, r12
    520c:	80 e2       	ldi	r24, 0x20	; 32
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	0e 94 2c 29 	call	0x5258	; 0x5258 <fputc>
    5214:	2a 94       	dec	r2
    5216:	f6 cf       	rjmp	.-20     	; 0x5204 <vfprintf+0x39a>
    5218:	f6 01       	movw	r30, r12
    521a:	86 81       	ldd	r24, Z+6	; 0x06
    521c:	97 81       	ldd	r25, Z+7	; 0x07
    521e:	02 c0       	rjmp	.+4      	; 0x5224 <vfprintf+0x3ba>
    5220:	8f ef       	ldi	r24, 0xFF	; 255
    5222:	9f ef       	ldi	r25, 0xFF	; 255
    5224:	2b 96       	adiw	r28, 0x0b	; 11
    5226:	e2 e1       	ldi	r30, 0x12	; 18
    5228:	0c 94 e2 29 	jmp	0x53c4	; 0x53c4 <__epilogue_restores__>

0000522c <strnlen_P>:
    522c:	fc 01       	movw	r30, r24
    522e:	05 90       	lpm	r0, Z+
    5230:	61 50       	subi	r22, 0x01	; 1
    5232:	70 40       	sbci	r23, 0x00	; 0
    5234:	01 10       	cpse	r0, r1
    5236:	d8 f7       	brcc	.-10     	; 0x522e <strnlen_P+0x2>
    5238:	80 95       	com	r24
    523a:	90 95       	com	r25
    523c:	8e 0f       	add	r24, r30
    523e:	9f 1f       	adc	r25, r31
    5240:	08 95       	ret

00005242 <strnlen>:
    5242:	fc 01       	movw	r30, r24
    5244:	61 50       	subi	r22, 0x01	; 1
    5246:	70 40       	sbci	r23, 0x00	; 0
    5248:	01 90       	ld	r0, Z+
    524a:	01 10       	cpse	r0, r1
    524c:	d8 f7       	brcc	.-10     	; 0x5244 <strnlen+0x2>
    524e:	80 95       	com	r24
    5250:	90 95       	com	r25
    5252:	8e 0f       	add	r24, r30
    5254:	9f 1f       	adc	r25, r31
    5256:	08 95       	ret

00005258 <fputc>:
    5258:	0f 93       	push	r16
    525a:	1f 93       	push	r17
    525c:	cf 93       	push	r28
    525e:	df 93       	push	r29
    5260:	fb 01       	movw	r30, r22
    5262:	23 81       	ldd	r18, Z+3	; 0x03
    5264:	21 fd       	sbrc	r18, 1
    5266:	03 c0       	rjmp	.+6      	; 0x526e <fputc+0x16>
    5268:	8f ef       	ldi	r24, 0xFF	; 255
    526a:	9f ef       	ldi	r25, 0xFF	; 255
    526c:	2c c0       	rjmp	.+88     	; 0x52c6 <fputc+0x6e>
    526e:	22 ff       	sbrs	r18, 2
    5270:	16 c0       	rjmp	.+44     	; 0x529e <fputc+0x46>
    5272:	46 81       	ldd	r20, Z+6	; 0x06
    5274:	57 81       	ldd	r21, Z+7	; 0x07
    5276:	24 81       	ldd	r18, Z+4	; 0x04
    5278:	35 81       	ldd	r19, Z+5	; 0x05
    527a:	42 17       	cp	r20, r18
    527c:	53 07       	cpc	r21, r19
    527e:	44 f4       	brge	.+16     	; 0x5290 <fputc+0x38>
    5280:	a0 81       	ld	r26, Z
    5282:	b1 81       	ldd	r27, Z+1	; 0x01
    5284:	9d 01       	movw	r18, r26
    5286:	2f 5f       	subi	r18, 0xFF	; 255
    5288:	3f 4f       	sbci	r19, 0xFF	; 255
    528a:	31 83       	std	Z+1, r19	; 0x01
    528c:	20 83       	st	Z, r18
    528e:	8c 93       	st	X, r24
    5290:	26 81       	ldd	r18, Z+6	; 0x06
    5292:	37 81       	ldd	r19, Z+7	; 0x07
    5294:	2f 5f       	subi	r18, 0xFF	; 255
    5296:	3f 4f       	sbci	r19, 0xFF	; 255
    5298:	37 83       	std	Z+7, r19	; 0x07
    529a:	26 83       	std	Z+6, r18	; 0x06
    529c:	14 c0       	rjmp	.+40     	; 0x52c6 <fputc+0x6e>
    529e:	8b 01       	movw	r16, r22
    52a0:	ec 01       	movw	r28, r24
    52a2:	fb 01       	movw	r30, r22
    52a4:	00 84       	ldd	r0, Z+8	; 0x08
    52a6:	f1 85       	ldd	r31, Z+9	; 0x09
    52a8:	e0 2d       	mov	r30, r0
    52aa:	09 95       	icall
    52ac:	89 2b       	or	r24, r25
    52ae:	e1 f6       	brne	.-72     	; 0x5268 <fputc+0x10>
    52b0:	d8 01       	movw	r26, r16
    52b2:	16 96       	adiw	r26, 0x06	; 6
    52b4:	8d 91       	ld	r24, X+
    52b6:	9c 91       	ld	r25, X
    52b8:	17 97       	sbiw	r26, 0x07	; 7
    52ba:	01 96       	adiw	r24, 0x01	; 1
    52bc:	17 96       	adiw	r26, 0x07	; 7
    52be:	9c 93       	st	X, r25
    52c0:	8e 93       	st	-X, r24
    52c2:	16 97       	sbiw	r26, 0x06	; 6
    52c4:	ce 01       	movw	r24, r28
    52c6:	df 91       	pop	r29
    52c8:	cf 91       	pop	r28
    52ca:	1f 91       	pop	r17
    52cc:	0f 91       	pop	r16
    52ce:	08 95       	ret

000052d0 <__ultoa_invert>:
    52d0:	fa 01       	movw	r30, r20
    52d2:	aa 27       	eor	r26, r26
    52d4:	28 30       	cpi	r18, 0x08	; 8
    52d6:	51 f1       	breq	.+84     	; 0x532c <__ultoa_invert+0x5c>
    52d8:	20 31       	cpi	r18, 0x10	; 16
    52da:	81 f1       	breq	.+96     	; 0x533c <__ultoa_invert+0x6c>
    52dc:	e8 94       	clt
    52de:	6f 93       	push	r22
    52e0:	6e 7f       	andi	r22, 0xFE	; 254
    52e2:	6e 5f       	subi	r22, 0xFE	; 254
    52e4:	7f 4f       	sbci	r23, 0xFF	; 255
    52e6:	8f 4f       	sbci	r24, 0xFF	; 255
    52e8:	9f 4f       	sbci	r25, 0xFF	; 255
    52ea:	af 4f       	sbci	r26, 0xFF	; 255
    52ec:	b1 e0       	ldi	r27, 0x01	; 1
    52ee:	3e d0       	rcall	.+124    	; 0x536c <__ultoa_invert+0x9c>
    52f0:	b4 e0       	ldi	r27, 0x04	; 4
    52f2:	3c d0       	rcall	.+120    	; 0x536c <__ultoa_invert+0x9c>
    52f4:	67 0f       	add	r22, r23
    52f6:	78 1f       	adc	r23, r24
    52f8:	89 1f       	adc	r24, r25
    52fa:	9a 1f       	adc	r25, r26
    52fc:	a1 1d       	adc	r26, r1
    52fe:	68 0f       	add	r22, r24
    5300:	79 1f       	adc	r23, r25
    5302:	8a 1f       	adc	r24, r26
    5304:	91 1d       	adc	r25, r1
    5306:	a1 1d       	adc	r26, r1
    5308:	6a 0f       	add	r22, r26
    530a:	71 1d       	adc	r23, r1
    530c:	81 1d       	adc	r24, r1
    530e:	91 1d       	adc	r25, r1
    5310:	a1 1d       	adc	r26, r1
    5312:	20 d0       	rcall	.+64     	; 0x5354 <__ultoa_invert+0x84>
    5314:	09 f4       	brne	.+2      	; 0x5318 <__ultoa_invert+0x48>
    5316:	68 94       	set
    5318:	3f 91       	pop	r19
    531a:	2a e0       	ldi	r18, 0x0A	; 10
    531c:	26 9f       	mul	r18, r22
    531e:	11 24       	eor	r1, r1
    5320:	30 19       	sub	r19, r0
    5322:	30 5d       	subi	r19, 0xD0	; 208
    5324:	31 93       	st	Z+, r19
    5326:	de f6       	brtc	.-74     	; 0x52de <__ultoa_invert+0xe>
    5328:	cf 01       	movw	r24, r30
    532a:	08 95       	ret
    532c:	46 2f       	mov	r20, r22
    532e:	47 70       	andi	r20, 0x07	; 7
    5330:	40 5d       	subi	r20, 0xD0	; 208
    5332:	41 93       	st	Z+, r20
    5334:	b3 e0       	ldi	r27, 0x03	; 3
    5336:	0f d0       	rcall	.+30     	; 0x5356 <__ultoa_invert+0x86>
    5338:	c9 f7       	brne	.-14     	; 0x532c <__ultoa_invert+0x5c>
    533a:	f6 cf       	rjmp	.-20     	; 0x5328 <__ultoa_invert+0x58>
    533c:	46 2f       	mov	r20, r22
    533e:	4f 70       	andi	r20, 0x0F	; 15
    5340:	40 5d       	subi	r20, 0xD0	; 208
    5342:	4a 33       	cpi	r20, 0x3A	; 58
    5344:	18 f0       	brcs	.+6      	; 0x534c <__ultoa_invert+0x7c>
    5346:	49 5d       	subi	r20, 0xD9	; 217
    5348:	31 fd       	sbrc	r19, 1
    534a:	40 52       	subi	r20, 0x20	; 32
    534c:	41 93       	st	Z+, r20
    534e:	02 d0       	rcall	.+4      	; 0x5354 <__ultoa_invert+0x84>
    5350:	a9 f7       	brne	.-22     	; 0x533c <__ultoa_invert+0x6c>
    5352:	ea cf       	rjmp	.-44     	; 0x5328 <__ultoa_invert+0x58>
    5354:	b4 e0       	ldi	r27, 0x04	; 4
    5356:	a6 95       	lsr	r26
    5358:	97 95       	ror	r25
    535a:	87 95       	ror	r24
    535c:	77 95       	ror	r23
    535e:	67 95       	ror	r22
    5360:	ba 95       	dec	r27
    5362:	c9 f7       	brne	.-14     	; 0x5356 <__ultoa_invert+0x86>
    5364:	00 97       	sbiw	r24, 0x00	; 0
    5366:	61 05       	cpc	r22, r1
    5368:	71 05       	cpc	r23, r1
    536a:	08 95       	ret
    536c:	9b 01       	movw	r18, r22
    536e:	ac 01       	movw	r20, r24
    5370:	0a 2e       	mov	r0, r26
    5372:	06 94       	lsr	r0
    5374:	57 95       	ror	r21
    5376:	47 95       	ror	r20
    5378:	37 95       	ror	r19
    537a:	27 95       	ror	r18
    537c:	ba 95       	dec	r27
    537e:	c9 f7       	brne	.-14     	; 0x5372 <__ultoa_invert+0xa2>
    5380:	62 0f       	add	r22, r18
    5382:	73 1f       	adc	r23, r19
    5384:	84 1f       	adc	r24, r20
    5386:	95 1f       	adc	r25, r21
    5388:	a0 1d       	adc	r26, r0
    538a:	08 95       	ret

0000538c <__prologue_saves__>:
    538c:	2f 92       	push	r2
    538e:	3f 92       	push	r3
    5390:	4f 92       	push	r4
    5392:	5f 92       	push	r5
    5394:	6f 92       	push	r6
    5396:	7f 92       	push	r7
    5398:	8f 92       	push	r8
    539a:	9f 92       	push	r9
    539c:	af 92       	push	r10
    539e:	bf 92       	push	r11
    53a0:	cf 92       	push	r12
    53a2:	df 92       	push	r13
    53a4:	ef 92       	push	r14
    53a6:	ff 92       	push	r15
    53a8:	0f 93       	push	r16
    53aa:	1f 93       	push	r17
    53ac:	cf 93       	push	r28
    53ae:	df 93       	push	r29
    53b0:	cd b7       	in	r28, 0x3d	; 61
    53b2:	de b7       	in	r29, 0x3e	; 62
    53b4:	ca 1b       	sub	r28, r26
    53b6:	db 0b       	sbc	r29, r27
    53b8:	0f b6       	in	r0, 0x3f	; 63
    53ba:	f8 94       	cli
    53bc:	de bf       	out	0x3e, r29	; 62
    53be:	0f be       	out	0x3f, r0	; 63
    53c0:	cd bf       	out	0x3d, r28	; 61
    53c2:	09 94       	ijmp

000053c4 <__epilogue_restores__>:
    53c4:	2a 88       	ldd	r2, Y+18	; 0x12
    53c6:	39 88       	ldd	r3, Y+17	; 0x11
    53c8:	48 88       	ldd	r4, Y+16	; 0x10
    53ca:	5f 84       	ldd	r5, Y+15	; 0x0f
    53cc:	6e 84       	ldd	r6, Y+14	; 0x0e
    53ce:	7d 84       	ldd	r7, Y+13	; 0x0d
    53d0:	8c 84       	ldd	r8, Y+12	; 0x0c
    53d2:	9b 84       	ldd	r9, Y+11	; 0x0b
    53d4:	aa 84       	ldd	r10, Y+10	; 0x0a
    53d6:	b9 84       	ldd	r11, Y+9	; 0x09
    53d8:	c8 84       	ldd	r12, Y+8	; 0x08
    53da:	df 80       	ldd	r13, Y+7	; 0x07
    53dc:	ee 80       	ldd	r14, Y+6	; 0x06
    53de:	fd 80       	ldd	r15, Y+5	; 0x05
    53e0:	0c 81       	ldd	r16, Y+4	; 0x04
    53e2:	1b 81       	ldd	r17, Y+3	; 0x03
    53e4:	aa 81       	ldd	r26, Y+2	; 0x02
    53e6:	b9 81       	ldd	r27, Y+1	; 0x01
    53e8:	ce 0f       	add	r28, r30
    53ea:	d1 1d       	adc	r29, r1
    53ec:	0f b6       	in	r0, 0x3f	; 63
    53ee:	f8 94       	cli
    53f0:	de bf       	out	0x3e, r29	; 62
    53f2:	0f be       	out	0x3f, r0	; 63
    53f4:	cd bf       	out	0x3d, r28	; 61
    53f6:	ed 01       	movw	r28, r26
    53f8:	08 95       	ret

000053fa <_exit>:
    53fa:	f8 94       	cli

000053fc <__stop_program>:
    53fc:	ff cf       	rjmp	.-2      	; 0x53fc <__stop_program>
